// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class AuthReq;
@class AuthReqBuilder;
@class AuthResp;
@class AuthRespBuilder;
@class DeviceReconnectionReq;
@class DeviceReconnectionReqBuilder;
@class DeviceReconnectionResp;
@class DeviceReconnectionRespBuilder;
@class EIMRespHeader;
@class EIMRespHeaderBuilder;
@class GroupMessageReq;
@class GroupMessageReqBuilder;
@class HeartBeatReq;
@class HeartBeatReqBuilder;
@class HeartBeatResp;
@class HeartBeatRespBuilder;
@class MessageReq;
@class MessageReqBuilder;
@class MessageResp;
@class MessageRespBuilder;
@class PullMessageReq;
@class PullMessageReqBuilder;
@class PullMessageResp;
@class PullMessageRespBuilder;
@class SendMessageResp;
@class SendMessageRespBuilder;



@interface EimMessageRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define EIMRespHeader_code @"code"
#define EIMRespHeader_reason @"reason"
#define EIMRespHeader_ret_code @"retCode"
@interface EIMRespHeader : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCode_:1;
  BOOL hasReason_:1;
  BOOL hasRetCode_:1;
  BOOL code_:1;
  NSString* reason;
  UInt32 retCode;
}
- (BOOL) hasCode;
- (BOOL) hasReason;
- (BOOL) hasRetCode;
- (BOOL) code;
@property (readonly, strong) NSString* reason;
@property (readonly) UInt32 retCode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (EIMRespHeaderBuilder*) builder;
+ (EIMRespHeaderBuilder*) builder;
+ (EIMRespHeaderBuilder*) builderWithPrototype:(EIMRespHeader*) prototype;
- (EIMRespHeaderBuilder*) toBuilder;

+ (EIMRespHeader*) parseFromData:(NSData*) data;
+ (EIMRespHeader*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (EIMRespHeader*) parseFromInputStream:(NSInputStream*) input;
+ (EIMRespHeader*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (EIMRespHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (EIMRespHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface EIMRespHeaderBuilder : PBGeneratedMessageBuilder {
@private
  EIMRespHeader* resultEimrespHeader;
}

- (EIMRespHeader*) defaultInstance;

- (EIMRespHeaderBuilder*) clear;
- (EIMRespHeaderBuilder*) clone;

- (EIMRespHeader*) build;
- (EIMRespHeader*) buildPartial;

- (EIMRespHeaderBuilder*) mergeFrom:(EIMRespHeader*) other;
- (EIMRespHeaderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (EIMRespHeaderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (BOOL) code;
- (EIMRespHeaderBuilder*) setCode:(BOOL) value;
- (EIMRespHeaderBuilder*) clearCode;

- (BOOL) hasReason;
- (NSString*) reason;
- (EIMRespHeaderBuilder*) setReason:(NSString*) value;
- (EIMRespHeaderBuilder*) clearReason;

- (BOOL) hasRetCode;
- (UInt32) retCode;
- (EIMRespHeaderBuilder*) setRetCode:(UInt32) value;
- (EIMRespHeaderBuilder*) clearRetCode;
@end

#define AuthReq_token @"token"
#define AuthReq_device_id @"deviceId"
#define AuthReq_appKey @"appKey"
#define AuthReq_platform @"platform"
#define AuthReq_version @"version"
#define AuthReq_device_info @"deviceInfo"
@interface AuthReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPlatform_:1;
  BOOL hasToken_:1;
  BOOL hasDeviceId_:1;
  BOOL hasAppKey_:1;
  BOOL hasVersion_:1;
  BOOL hasDeviceInfo_:1;
  SInt32 platform;
  NSString* token;
  NSString* deviceId;
  NSString* appKey;
  NSString* version;
  NSString* deviceInfo;
}
- (BOOL) hasToken;
- (BOOL) hasDeviceId;
- (BOOL) hasAppKey;
- (BOOL) hasPlatform;
- (BOOL) hasVersion;
- (BOOL) hasDeviceInfo;
@property (readonly, strong) NSString* token;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSString* appKey;
@property (readonly) SInt32 platform;
@property (readonly, strong) NSString* version;
@property (readonly, strong) NSString* deviceInfo;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AuthReqBuilder*) builder;
+ (AuthReqBuilder*) builder;
+ (AuthReqBuilder*) builderWithPrototype:(AuthReq*) prototype;
- (AuthReqBuilder*) toBuilder;

+ (AuthReq*) parseFromData:(NSData*) data;
+ (AuthReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthReq*) parseFromInputStream:(NSInputStream*) input;
+ (AuthReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AuthReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AuthReqBuilder : PBGeneratedMessageBuilder {
@private
  AuthReq* resultAuthReq;
}

- (AuthReq*) defaultInstance;

- (AuthReqBuilder*) clear;
- (AuthReqBuilder*) clone;

- (AuthReq*) build;
- (AuthReq*) buildPartial;

- (AuthReqBuilder*) mergeFrom:(AuthReq*) other;
- (AuthReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AuthReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasToken;
- (NSString*) token;
- (AuthReqBuilder*) setToken:(NSString*) value;
- (AuthReqBuilder*) clearToken;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (AuthReqBuilder*) setDeviceId:(NSString*) value;
- (AuthReqBuilder*) clearDeviceId;

- (BOOL) hasAppKey;
- (NSString*) appKey;
- (AuthReqBuilder*) setAppKey:(NSString*) value;
- (AuthReqBuilder*) clearAppKey;

- (BOOL) hasPlatform;
- (SInt32) platform;
- (AuthReqBuilder*) setPlatform:(SInt32) value;
- (AuthReqBuilder*) clearPlatform;

- (BOOL) hasVersion;
- (NSString*) version;
- (AuthReqBuilder*) setVersion:(NSString*) value;
- (AuthReqBuilder*) clearVersion;

- (BOOL) hasDeviceInfo;
- (NSString*) deviceInfo;
- (AuthReqBuilder*) setDeviceInfo:(NSString*) value;
- (AuthReqBuilder*) clearDeviceInfo;
@end

#define AuthResp_status @"status"
#define AuthResp_reconnection_token @"reconnectionToken"
#define AuthResp_expire_in @"expireIn"
@interface AuthResp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasExpireIn_:1;
  BOOL hasReconnectionToken_:1;
  BOOL hasStatus_:1;
  SInt64 expireIn;
  NSString* reconnectionToken;
  EIMRespHeader* status;
}
- (BOOL) hasStatus;
- (BOOL) hasReconnectionToken;
- (BOOL) hasExpireIn;
@property (readonly, strong) EIMRespHeader* status;
@property (readonly, strong) NSString* reconnectionToken;
@property (readonly) SInt64 expireIn;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AuthRespBuilder*) builder;
+ (AuthRespBuilder*) builder;
+ (AuthRespBuilder*) builderWithPrototype:(AuthResp*) prototype;
- (AuthRespBuilder*) toBuilder;

+ (AuthResp*) parseFromData:(NSData*) data;
+ (AuthResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthResp*) parseFromInputStream:(NSInputStream*) input;
+ (AuthResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AuthResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AuthResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AuthRespBuilder : PBGeneratedMessageBuilder {
@private
  AuthResp* resultAuthResp;
}

- (AuthResp*) defaultInstance;

- (AuthRespBuilder*) clear;
- (AuthRespBuilder*) clone;

- (AuthResp*) build;
- (AuthResp*) buildPartial;

- (AuthRespBuilder*) mergeFrom:(AuthResp*) other;
- (AuthRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AuthRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (EIMRespHeader*) status;
- (AuthRespBuilder*) setStatus:(EIMRespHeader*) value;
- (AuthRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue;
- (AuthRespBuilder*) mergeStatus:(EIMRespHeader*) value;
- (AuthRespBuilder*) clearStatus;

- (BOOL) hasReconnectionToken;
- (NSString*) reconnectionToken;
- (AuthRespBuilder*) setReconnectionToken:(NSString*) value;
- (AuthRespBuilder*) clearReconnectionToken;

- (BOOL) hasExpireIn;
- (SInt64) expireIn;
- (AuthRespBuilder*) setExpireIn:(SInt64) value;
- (AuthRespBuilder*) clearExpireIn;
@end

#define HeartBeatReq_flag @"flag"
@interface HeartBeatReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasFlag_:1;
  BOOL flag_:1;
}
- (BOOL) hasFlag;
- (BOOL) flag;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (HeartBeatReqBuilder*) builder;
+ (HeartBeatReqBuilder*) builder;
+ (HeartBeatReqBuilder*) builderWithPrototype:(HeartBeatReq*) prototype;
- (HeartBeatReqBuilder*) toBuilder;

+ (HeartBeatReq*) parseFromData:(NSData*) data;
+ (HeartBeatReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeartBeatReq*) parseFromInputStream:(NSInputStream*) input;
+ (HeartBeatReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeartBeatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (HeartBeatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface HeartBeatReqBuilder : PBGeneratedMessageBuilder {
@private
  HeartBeatReq* resultHeartBeatReq;
}

- (HeartBeatReq*) defaultInstance;

- (HeartBeatReqBuilder*) clear;
- (HeartBeatReqBuilder*) clone;

- (HeartBeatReq*) build;
- (HeartBeatReq*) buildPartial;

- (HeartBeatReqBuilder*) mergeFrom:(HeartBeatReq*) other;
- (HeartBeatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (HeartBeatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFlag;
- (BOOL) flag;
- (HeartBeatReqBuilder*) setFlag:(BOOL) value;
- (HeartBeatReqBuilder*) clearFlag;
@end

#define HeartBeatResp_status @"status"
@interface HeartBeatResp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasStatus_:1;
  EIMRespHeader* status;
}
- (BOOL) hasStatus;
@property (readonly, strong) EIMRespHeader* status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (HeartBeatRespBuilder*) builder;
+ (HeartBeatRespBuilder*) builder;
+ (HeartBeatRespBuilder*) builderWithPrototype:(HeartBeatResp*) prototype;
- (HeartBeatRespBuilder*) toBuilder;

+ (HeartBeatResp*) parseFromData:(NSData*) data;
+ (HeartBeatResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeartBeatResp*) parseFromInputStream:(NSInputStream*) input;
+ (HeartBeatResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (HeartBeatResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (HeartBeatResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface HeartBeatRespBuilder : PBGeneratedMessageBuilder {
@private
  HeartBeatResp* resultHeartBeatResp;
}

- (HeartBeatResp*) defaultInstance;

- (HeartBeatRespBuilder*) clear;
- (HeartBeatRespBuilder*) clone;

- (HeartBeatResp*) build;
- (HeartBeatResp*) buildPartial;

- (HeartBeatRespBuilder*) mergeFrom:(HeartBeatResp*) other;
- (HeartBeatRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (HeartBeatRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (EIMRespHeader*) status;
- (HeartBeatRespBuilder*) setStatus:(EIMRespHeader*) value;
- (HeartBeatRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue;
- (HeartBeatRespBuilder*) mergeStatus:(EIMRespHeader*) value;
- (HeartBeatRespBuilder*) clearStatus;
@end

#define DeviceReconnectionReq_reconnection_token @"reconnectionToken"
#define DeviceReconnectionReq_device_id @"deviceId"
@interface DeviceReconnectionReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasReconnectionToken_:1;
  BOOL hasDeviceId_:1;
  NSString* reconnectionToken;
  NSString* deviceId;
}
- (BOOL) hasReconnectionToken;
- (BOOL) hasDeviceId;
@property (readonly, strong) NSString* reconnectionToken;
@property (readonly, strong) NSString* deviceId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DeviceReconnectionReqBuilder*) builder;
+ (DeviceReconnectionReqBuilder*) builder;
+ (DeviceReconnectionReqBuilder*) builderWithPrototype:(DeviceReconnectionReq*) prototype;
- (DeviceReconnectionReqBuilder*) toBuilder;

+ (DeviceReconnectionReq*) parseFromData:(NSData*) data;
+ (DeviceReconnectionReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceReconnectionReq*) parseFromInputStream:(NSInputStream*) input;
+ (DeviceReconnectionReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceReconnectionReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DeviceReconnectionReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DeviceReconnectionReqBuilder : PBGeneratedMessageBuilder {
@private
  DeviceReconnectionReq* resultDeviceReconnectionReq;
}

- (DeviceReconnectionReq*) defaultInstance;

- (DeviceReconnectionReqBuilder*) clear;
- (DeviceReconnectionReqBuilder*) clone;

- (DeviceReconnectionReq*) build;
- (DeviceReconnectionReq*) buildPartial;

- (DeviceReconnectionReqBuilder*) mergeFrom:(DeviceReconnectionReq*) other;
- (DeviceReconnectionReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DeviceReconnectionReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasReconnectionToken;
- (NSString*) reconnectionToken;
- (DeviceReconnectionReqBuilder*) setReconnectionToken:(NSString*) value;
- (DeviceReconnectionReqBuilder*) clearReconnectionToken;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (DeviceReconnectionReqBuilder*) setDeviceId:(NSString*) value;
- (DeviceReconnectionReqBuilder*) clearDeviceId;
@end

#define DeviceReconnectionResp_status @"status"
@interface DeviceReconnectionResp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasStatus_:1;
  EIMRespHeader* status;
}
- (BOOL) hasStatus;
@property (readonly, strong) EIMRespHeader* status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DeviceReconnectionRespBuilder*) builder;
+ (DeviceReconnectionRespBuilder*) builder;
+ (DeviceReconnectionRespBuilder*) builderWithPrototype:(DeviceReconnectionResp*) prototype;
- (DeviceReconnectionRespBuilder*) toBuilder;

+ (DeviceReconnectionResp*) parseFromData:(NSData*) data;
+ (DeviceReconnectionResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceReconnectionResp*) parseFromInputStream:(NSInputStream*) input;
+ (DeviceReconnectionResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DeviceReconnectionResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DeviceReconnectionResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DeviceReconnectionRespBuilder : PBGeneratedMessageBuilder {
@private
  DeviceReconnectionResp* resultDeviceReconnectionResp;
}

- (DeviceReconnectionResp*) defaultInstance;

- (DeviceReconnectionRespBuilder*) clear;
- (DeviceReconnectionRespBuilder*) clone;

- (DeviceReconnectionResp*) build;
- (DeviceReconnectionResp*) buildPartial;

- (DeviceReconnectionRespBuilder*) mergeFrom:(DeviceReconnectionResp*) other;
- (DeviceReconnectionRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DeviceReconnectionRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (EIMRespHeader*) status;
- (DeviceReconnectionRespBuilder*) setStatus:(EIMRespHeader*) value;
- (DeviceReconnectionRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue;
- (DeviceReconnectionRespBuilder*) mergeStatus:(EIMRespHeader*) value;
- (DeviceReconnectionRespBuilder*) clearStatus;
@end

#define MessageReq_uuid @"uuid"
#define MessageReq_receiver @"receiver"
#define MessageReq_type @"type"
#define MessageReq_content @"content"
#define MessageReq_reply_info @"replyInfo"
#define MessageReq_extra @"extra"
@interface MessageReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasReceiver_:1;
  BOOL hasUuid_:1;
  BOOL hasType_:1;
  BOOL hasContent_:1;
  BOOL hasReplyInfo_:1;
  BOOL hasExtra_:1;
  SInt64 receiver;
  NSString* uuid;
  NSString* type;
  NSString* content;
  NSString* replyInfo;
  NSString* extra;
}
- (BOOL) hasUuid;
- (BOOL) hasReceiver;
- (BOOL) hasType;
- (BOOL) hasContent;
- (BOOL) hasReplyInfo;
- (BOOL) hasExtra;
@property (readonly, strong) NSString* uuid;
@property (readonly) SInt64 receiver;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSString* content;
@property (readonly, strong) NSString* replyInfo;
@property (readonly, strong) NSString* extra;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MessageReqBuilder*) builder;
+ (MessageReqBuilder*) builder;
+ (MessageReqBuilder*) builderWithPrototype:(MessageReq*) prototype;
- (MessageReqBuilder*) toBuilder;

+ (MessageReq*) parseFromData:(NSData*) data;
+ (MessageReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MessageReq*) parseFromInputStream:(NSInputStream*) input;
+ (MessageReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MessageReqBuilder : PBGeneratedMessageBuilder {
@private
  MessageReq* resultMessageReq;
}

- (MessageReq*) defaultInstance;

- (MessageReqBuilder*) clear;
- (MessageReqBuilder*) clone;

- (MessageReq*) build;
- (MessageReq*) buildPartial;

- (MessageReqBuilder*) mergeFrom:(MessageReq*) other;
- (MessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUuid;
- (NSString*) uuid;
- (MessageReqBuilder*) setUuid:(NSString*) value;
- (MessageReqBuilder*) clearUuid;

- (BOOL) hasReceiver;
- (SInt64) receiver;
- (MessageReqBuilder*) setReceiver:(SInt64) value;
- (MessageReqBuilder*) clearReceiver;

- (BOOL) hasType;
- (NSString*) type;
- (MessageReqBuilder*) setType:(NSString*) value;
- (MessageReqBuilder*) clearType;

- (BOOL) hasContent;
- (NSString*) content;
- (MessageReqBuilder*) setContent:(NSString*) value;
- (MessageReqBuilder*) clearContent;

- (BOOL) hasReplyInfo;
- (NSString*) replyInfo;
- (MessageReqBuilder*) setReplyInfo:(NSString*) value;
- (MessageReqBuilder*) clearReplyInfo;

- (BOOL) hasExtra;
- (NSString*) extra;
- (MessageReqBuilder*) setExtra:(NSString*) value;
- (MessageReqBuilder*) clearExtra;
@end

#define GroupMessageReq_uuid @"uuid"
#define GroupMessageReq_sender @"sender"
#define GroupMessageReq_group_id @"groupId"
#define GroupMessageReq_type @"type"
#define GroupMessageReq_content @"content"
#define GroupMessageReq_at @"at"
#define GroupMessageReq_reply_info @"replyInfo"
#define GroupMessageReq_extra @"extra"
@interface GroupMessageReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSender_:1;
  BOOL hasGroupId_:1;
  BOOL hasUuid_:1;
  BOOL hasType_:1;
  BOOL hasContent_:1;
  BOOL hasAt_:1;
  BOOL hasReplyInfo_:1;
  BOOL hasExtra_:1;
  SInt64 sender;
  SInt64 groupId;
  NSString* uuid;
  NSString* type;
  NSString* content;
  NSString* at;
  NSString* replyInfo;
  NSString* extra;
}
- (BOOL) hasUuid;
- (BOOL) hasSender;
- (BOOL) hasGroupId;
- (BOOL) hasType;
- (BOOL) hasContent;
- (BOOL) hasAt;
- (BOOL) hasReplyInfo;
- (BOOL) hasExtra;
@property (readonly, strong) NSString* uuid;
@property (readonly) SInt64 sender;
@property (readonly) SInt64 groupId;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSString* content;
@property (readonly, strong) NSString* at;
@property (readonly, strong) NSString* replyInfo;
@property (readonly, strong) NSString* extra;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GroupMessageReqBuilder*) builder;
+ (GroupMessageReqBuilder*) builder;
+ (GroupMessageReqBuilder*) builderWithPrototype:(GroupMessageReq*) prototype;
- (GroupMessageReqBuilder*) toBuilder;

+ (GroupMessageReq*) parseFromData:(NSData*) data;
+ (GroupMessageReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupMessageReq*) parseFromInputStream:(NSInputStream*) input;
+ (GroupMessageReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GroupMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GroupMessageReqBuilder : PBGeneratedMessageBuilder {
@private
  GroupMessageReq* resultGroupMessageReq;
}

- (GroupMessageReq*) defaultInstance;

- (GroupMessageReqBuilder*) clear;
- (GroupMessageReqBuilder*) clone;

- (GroupMessageReq*) build;
- (GroupMessageReq*) buildPartial;

- (GroupMessageReqBuilder*) mergeFrom:(GroupMessageReq*) other;
- (GroupMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GroupMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUuid;
- (NSString*) uuid;
- (GroupMessageReqBuilder*) setUuid:(NSString*) value;
- (GroupMessageReqBuilder*) clearUuid;

- (BOOL) hasSender;
- (SInt64) sender;
- (GroupMessageReqBuilder*) setSender:(SInt64) value;
- (GroupMessageReqBuilder*) clearSender;

- (BOOL) hasGroupId;
- (SInt64) groupId;
- (GroupMessageReqBuilder*) setGroupId:(SInt64) value;
- (GroupMessageReqBuilder*) clearGroupId;

- (BOOL) hasType;
- (NSString*) type;
- (GroupMessageReqBuilder*) setType:(NSString*) value;
- (GroupMessageReqBuilder*) clearType;

- (BOOL) hasContent;
- (NSString*) content;
- (GroupMessageReqBuilder*) setContent:(NSString*) value;
- (GroupMessageReqBuilder*) clearContent;

- (BOOL) hasAt;
- (NSString*) at;
- (GroupMessageReqBuilder*) setAt:(NSString*) value;
- (GroupMessageReqBuilder*) clearAt;

- (BOOL) hasReplyInfo;
- (NSString*) replyInfo;
- (GroupMessageReqBuilder*) setReplyInfo:(NSString*) value;
- (GroupMessageReqBuilder*) clearReplyInfo;

- (BOOL) hasExtra;
- (NSString*) extra;
- (GroupMessageReqBuilder*) setExtra:(NSString*) value;
- (GroupMessageReqBuilder*) clearExtra;
@end

#define SendMessageResp_status @"status"
#define SendMessageResp_message_id @"messageId"
#define SendMessageResp_create_time @"createTime"
#define SendMessageResp_transaction_id @"transactionId"
@interface SendMessageResp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCreateTime_:1;
  BOOL hasMessageId_:1;
  BOOL hasTransactionId_:1;
  BOOL hasStatus_:1;
  SInt64 createTime;
  NSString* messageId;
  NSString* transactionId;
  EIMRespHeader* status;
}
- (BOOL) hasStatus;
- (BOOL) hasMessageId;
- (BOOL) hasCreateTime;
- (BOOL) hasTransactionId;
@property (readonly, strong) EIMRespHeader* status;
@property (readonly, strong) NSString* messageId;
@property (readonly) SInt64 createTime;
@property (readonly, strong) NSString* transactionId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SendMessageRespBuilder*) builder;
+ (SendMessageRespBuilder*) builder;
+ (SendMessageRespBuilder*) builderWithPrototype:(SendMessageResp*) prototype;
- (SendMessageRespBuilder*) toBuilder;

+ (SendMessageResp*) parseFromData:(NSData*) data;
+ (SendMessageResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendMessageResp*) parseFromInputStream:(NSInputStream*) input;
+ (SendMessageResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SendMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SendMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SendMessageRespBuilder : PBGeneratedMessageBuilder {
@private
  SendMessageResp* resultSendMessageResp;
}

- (SendMessageResp*) defaultInstance;

- (SendMessageRespBuilder*) clear;
- (SendMessageRespBuilder*) clone;

- (SendMessageResp*) build;
- (SendMessageResp*) buildPartial;

- (SendMessageRespBuilder*) mergeFrom:(SendMessageResp*) other;
- (SendMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SendMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (EIMRespHeader*) status;
- (SendMessageRespBuilder*) setStatus:(EIMRespHeader*) value;
- (SendMessageRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue;
- (SendMessageRespBuilder*) mergeStatus:(EIMRespHeader*) value;
- (SendMessageRespBuilder*) clearStatus;

- (BOOL) hasMessageId;
- (NSString*) messageId;
- (SendMessageRespBuilder*) setMessageId:(NSString*) value;
- (SendMessageRespBuilder*) clearMessageId;

- (BOOL) hasCreateTime;
- (SInt64) createTime;
- (SendMessageRespBuilder*) setCreateTime:(SInt64) value;
- (SendMessageRespBuilder*) clearCreateTime;

- (BOOL) hasTransactionId;
- (NSString*) transactionId;
- (SendMessageRespBuilder*) setTransactionId:(NSString*) value;
- (SendMessageRespBuilder*) clearTransactionId;
@end

#define PullMessageReq_sequence_id @"sequenceId"
@interface PullMessageReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSequenceId_:1;
  SInt64 sequenceId;
}
- (BOOL) hasSequenceId;
@property (readonly) SInt64 sequenceId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PullMessageReqBuilder*) builder;
+ (PullMessageReqBuilder*) builder;
+ (PullMessageReqBuilder*) builderWithPrototype:(PullMessageReq*) prototype;
- (PullMessageReqBuilder*) toBuilder;

+ (PullMessageReq*) parseFromData:(NSData*) data;
+ (PullMessageReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PullMessageReq*) parseFromInputStream:(NSInputStream*) input;
+ (PullMessageReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PullMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PullMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PullMessageReqBuilder : PBGeneratedMessageBuilder {
@private
  PullMessageReq* resultPullMessageReq;
}

- (PullMessageReq*) defaultInstance;

- (PullMessageReqBuilder*) clear;
- (PullMessageReqBuilder*) clone;

- (PullMessageReq*) build;
- (PullMessageReq*) buildPartial;

- (PullMessageReqBuilder*) mergeFrom:(PullMessageReq*) other;
- (PullMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PullMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSequenceId;
- (SInt64) sequenceId;
- (PullMessageReqBuilder*) setSequenceId:(SInt64) value;
- (PullMessageReqBuilder*) clearSequenceId;
@end

#define PullMessageResp_status @"status"
#define PullMessageResp_msg @"msg"
#define PullMessageResp_pull_end @"pullEnd"
#define PullMessageResp_cur_max_seqId @"curMaxSeqId"
@interface PullMessageResp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPullEnd_:1;
  BOOL hasCurMaxSeqId_:1;
  BOOL hasStatus_:1;
  BOOL pullEnd_:1;
  SInt64 curMaxSeqId;
  EIMRespHeader* status;
  NSMutableArray * msgArray;
}
- (BOOL) hasStatus;
- (BOOL) hasPullEnd;
- (BOOL) hasCurMaxSeqId;
@property (readonly, strong) EIMRespHeader* status;
@property (readonly, strong) NSArray<MessageResp*> * msg;
- (BOOL) pullEnd;
@property (readonly) SInt64 curMaxSeqId;
- (MessageResp*)msgAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PullMessageRespBuilder*) builder;
+ (PullMessageRespBuilder*) builder;
+ (PullMessageRespBuilder*) builderWithPrototype:(PullMessageResp*) prototype;
- (PullMessageRespBuilder*) toBuilder;

+ (PullMessageResp*) parseFromData:(NSData*) data;
+ (PullMessageResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PullMessageResp*) parseFromInputStream:(NSInputStream*) input;
+ (PullMessageResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PullMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PullMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PullMessageRespBuilder : PBGeneratedMessageBuilder {
@private
  PullMessageResp* resultPullMessageResp;
}

- (PullMessageResp*) defaultInstance;

- (PullMessageRespBuilder*) clear;
- (PullMessageRespBuilder*) clone;

- (PullMessageResp*) build;
- (PullMessageResp*) buildPartial;

- (PullMessageRespBuilder*) mergeFrom:(PullMessageResp*) other;
- (PullMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PullMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (EIMRespHeader*) status;
- (PullMessageRespBuilder*) setStatus:(EIMRespHeader*) value;
- (PullMessageRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue;
- (PullMessageRespBuilder*) mergeStatus:(EIMRespHeader*) value;
- (PullMessageRespBuilder*) clearStatus;

- (NSMutableArray<MessageResp*> *)msg;
- (MessageResp*)msgAtIndex:(NSUInteger)index;
- (PullMessageRespBuilder *)addMsg:(MessageResp*)value;
- (PullMessageRespBuilder *)setMsgArray:(NSArray<MessageResp*> *)array;
- (PullMessageRespBuilder *)clearMsg;

- (BOOL) hasPullEnd;
- (BOOL) pullEnd;
- (PullMessageRespBuilder*) setPullEnd:(BOOL) value;
- (PullMessageRespBuilder*) clearPullEnd;

- (BOOL) hasCurMaxSeqId;
- (SInt64) curMaxSeqId;
- (PullMessageRespBuilder*) setCurMaxSeqId:(SInt64) value;
- (PullMessageRespBuilder*) clearCurMaxSeqId;
@end

#define MessageResp_message_id @"messageId"
#define MessageResp_type @"type"
#define MessageResp_sequence_id @"sequenceId"
#define MessageResp_sender @"sender"
#define MessageResp_group_id @"groupId"
#define MessageResp_content @"content"
#define MessageResp_create_time @"createTime"
#define MessageResp_receiver @"receiver"
#define MessageResp_at @"at"
#define MessageResp_reply_info @"replyInfo"
#define MessageResp_extra @"extra"
@interface MessageResp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSequenceId_:1;
  BOOL hasSender_:1;
  BOOL hasGroupId_:1;
  BOOL hasCreateTime_:1;
  BOOL hasReceiver_:1;
  BOOL hasMessageId_:1;
  BOOL hasType_:1;
  BOOL hasContent_:1;
  BOOL hasAt_:1;
  BOOL hasReplyInfo_:1;
  BOOL hasExtra_:1;
  SInt64 sequenceId;
  SInt64 sender;
  SInt64 groupId;
  SInt64 createTime;
  SInt64 receiver;
  NSString* messageId;
  NSString* type;
  NSString* content;
  NSString* at;
  NSString* replyInfo;
  NSString* extra;
}
- (BOOL) hasMessageId;
- (BOOL) hasType;
- (BOOL) hasSequenceId;
- (BOOL) hasSender;
- (BOOL) hasGroupId;
- (BOOL) hasContent;
- (BOOL) hasCreateTime;
- (BOOL) hasReceiver;
- (BOOL) hasAt;
- (BOOL) hasReplyInfo;
- (BOOL) hasExtra;
@property (readonly, strong) NSString* messageId;
@property (readonly, strong) NSString* type;
@property (readonly) SInt64 sequenceId;
@property (readonly) SInt64 sender;
@property (readonly) SInt64 groupId;
@property (readonly, strong) NSString* content;
@property (readonly) SInt64 createTime;
@property (readonly) SInt64 receiver;
@property (readonly, strong) NSString* at;
@property (readonly, strong) NSString* replyInfo;
@property (readonly, strong) NSString* extra;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MessageRespBuilder*) builder;
+ (MessageRespBuilder*) builder;
+ (MessageRespBuilder*) builderWithPrototype:(MessageResp*) prototype;
- (MessageRespBuilder*) toBuilder;

+ (MessageResp*) parseFromData:(NSData*) data;
+ (MessageResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MessageResp*) parseFromInputStream:(NSInputStream*) input;
+ (MessageResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MessageRespBuilder : PBGeneratedMessageBuilder {
@private
  MessageResp* resultMessageResp;
}

- (MessageResp*) defaultInstance;

- (MessageRespBuilder*) clear;
- (MessageRespBuilder*) clone;

- (MessageResp*) build;
- (MessageResp*) buildPartial;

- (MessageRespBuilder*) mergeFrom:(MessageResp*) other;
- (MessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMessageId;
- (NSString*) messageId;
- (MessageRespBuilder*) setMessageId:(NSString*) value;
- (MessageRespBuilder*) clearMessageId;

- (BOOL) hasType;
- (NSString*) type;
- (MessageRespBuilder*) setType:(NSString*) value;
- (MessageRespBuilder*) clearType;

- (BOOL) hasSequenceId;
- (SInt64) sequenceId;
- (MessageRespBuilder*) setSequenceId:(SInt64) value;
- (MessageRespBuilder*) clearSequenceId;

- (BOOL) hasSender;
- (SInt64) sender;
- (MessageRespBuilder*) setSender:(SInt64) value;
- (MessageRespBuilder*) clearSender;

- (BOOL) hasGroupId;
- (SInt64) groupId;
- (MessageRespBuilder*) setGroupId:(SInt64) value;
- (MessageRespBuilder*) clearGroupId;

- (BOOL) hasContent;
- (NSString*) content;
- (MessageRespBuilder*) setContent:(NSString*) value;
- (MessageRespBuilder*) clearContent;

- (BOOL) hasCreateTime;
- (SInt64) createTime;
- (MessageRespBuilder*) setCreateTime:(SInt64) value;
- (MessageRespBuilder*) clearCreateTime;

- (BOOL) hasReceiver;
- (SInt64) receiver;
- (MessageRespBuilder*) setReceiver:(SInt64) value;
- (MessageRespBuilder*) clearReceiver;

- (BOOL) hasAt;
- (NSString*) at;
- (MessageRespBuilder*) setAt:(NSString*) value;
- (MessageRespBuilder*) clearAt;

- (BOOL) hasReplyInfo;
- (NSString*) replyInfo;
- (MessageRespBuilder*) setReplyInfo:(NSString*) value;
- (MessageRespBuilder*) clearReplyInfo;

- (BOOL) hasExtra;
- (NSString*) extra;
- (MessageRespBuilder*) setExtra:(NSString*) value;
- (MessageRespBuilder*) clearExtra;
@end


// @@protoc_insertion_point(global_scope)
