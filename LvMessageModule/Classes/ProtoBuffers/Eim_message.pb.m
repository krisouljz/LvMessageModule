// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Eim_message.pb.h"
// @@protoc_insertion_point(imports)

@implementation EimMessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EimMessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface EIMRespHeader ()
@property BOOL code;
@property (strong) NSString* reason;
@property UInt32 retCode;
@end

@implementation EIMRespHeader

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
- (BOOL) code {
  return !!code_;
}
- (void) setCode:(BOOL) _value_ {
  code_ = !!_value_;
}
- (BOOL) hasReason {
  return !!hasReason_;
}
- (void) setHasReason:(BOOL) _value_ {
  hasReason_ = !!_value_;
}
@synthesize reason;
- (BOOL) hasRetCode {
  return !!hasRetCode_;
}
- (void) setHasRetCode:(BOOL) _value_ {
  hasRetCode_ = !!_value_;
}
@synthesize retCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = NO;
    self.reason = @"";
    self.retCode = 0;
  }
  return self;
}
static EIMRespHeader* defaultEIMRespHeaderInstance = nil;
+ (void) initialize {
  if (self == [EIMRespHeader class]) {
    defaultEIMRespHeaderInstance = [[EIMRespHeader alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultEIMRespHeaderInstance;
}
- (instancetype) defaultInstance {
  return defaultEIMRespHeaderInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeBool:1 value:self.code];
  }
  if (self.hasReason) {
    [output writeString:2 value:self.reason];
  }
  if (self.hasRetCode) {
    [output writeUInt32:3 value:self.retCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeBoolSize(1, self.code);
  }
  if (self.hasReason) {
    size_ += computeStringSize(2, self.reason);
  }
  if (self.hasRetCode) {
    size_ += computeUInt32Size(3, self.retCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EIMRespHeader*) parseFromData:(NSData*) data {
  return (EIMRespHeader*)[[[EIMRespHeader builder] mergeFromData:data] build];
}
+ (EIMRespHeader*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EIMRespHeader*)[[[EIMRespHeader builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EIMRespHeader*) parseFromInputStream:(NSInputStream*) input {
  return (EIMRespHeader*)[[[EIMRespHeader builder] mergeFromInputStream:input] build];
}
+ (EIMRespHeader*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EIMRespHeader*)[[[EIMRespHeader builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EIMRespHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EIMRespHeader*)[[[EIMRespHeader builder] mergeFromCodedInputStream:input] build];
}
+ (EIMRespHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EIMRespHeader*)[[[EIMRespHeader builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EIMRespHeaderBuilder*) builder {
  return [[EIMRespHeaderBuilder alloc] init];
}
+ (EIMRespHeaderBuilder*) builderWithPrototype:(EIMRespHeader*) prototype {
  return [[EIMRespHeader builder] mergeFrom:prototype];
}
- (EIMRespHeaderBuilder*) builder {
  return [EIMRespHeader builder];
}
- (EIMRespHeaderBuilder*) toBuilder {
  return [EIMRespHeader builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", [NSNumber numberWithBool:self.code]];
  }
  if (self.hasReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reason", self.reason];
  }
  if (self.hasRetCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"retCode", [NSNumber numberWithInteger:self.retCode]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: [NSNumber numberWithBool:self.code] forKey: @"code"];
  }
  if (self.hasReason) {
    [dictionary setObject: self.reason forKey: @"reason"];
  }
  if (self.hasRetCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.retCode] forKey: @"retCode"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EIMRespHeader class]]) {
    return NO;
  }
  EIMRespHeader *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || self.code == otherMessage.code) &&
      self.hasReason == otherMessage.hasReason &&
      (!self.hasReason || [self.reason isEqual:otherMessage.reason]) &&
      self.hasRetCode == otherMessage.hasRetCode &&
      (!self.hasRetCode || self.retCode == otherMessage.retCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.code] hash];
  }
  if (self.hasReason) {
    hashCode = hashCode * 31 + [self.reason hash];
  }
  if (self.hasRetCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.retCode] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EIMRespHeaderBuilder()
@property (strong) EIMRespHeader* resultEimrespHeader;
@end

@implementation EIMRespHeaderBuilder
@synthesize resultEimrespHeader;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultEimrespHeader = [[EIMRespHeader alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultEimrespHeader;
}
- (EIMRespHeaderBuilder*) clear {
  self.resultEimrespHeader = [[EIMRespHeader alloc] init];
  return self;
}
- (EIMRespHeaderBuilder*) clone {
  return [EIMRespHeader builderWithPrototype:resultEimrespHeader];
}
- (EIMRespHeader*) defaultInstance {
  return [EIMRespHeader defaultInstance];
}
- (EIMRespHeader*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EIMRespHeader*) buildPartial {
  EIMRespHeader* returnMe = resultEimrespHeader;
  self.resultEimrespHeader = nil;
  return returnMe;
}
- (EIMRespHeaderBuilder*) mergeFrom:(EIMRespHeader*) other {
  if (other == [EIMRespHeader defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasReason) {
    [self setReason:other.reason];
  }
  if (other.hasRetCode) {
    [self setRetCode:other.retCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EIMRespHeaderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EIMRespHeaderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCode:[input readBool]];
        break;
      }
      case 18: {
        [self setReason:[input readString]];
        break;
      }
      case 24: {
        [self setRetCode:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultEimrespHeader.hasCode;
}
- (BOOL) code {
  return resultEimrespHeader.code;
}
- (EIMRespHeaderBuilder*) setCode:(BOOL) value {
  resultEimrespHeader.hasCode = YES;
  resultEimrespHeader.code = value;
  return self;
}
- (EIMRespHeaderBuilder*) clearCode {
  resultEimrespHeader.hasCode = NO;
  resultEimrespHeader.code = NO;
  return self;
}
- (BOOL) hasReason {
  return resultEimrespHeader.hasReason;
}
- (NSString*) reason {
  return resultEimrespHeader.reason;
}
- (EIMRespHeaderBuilder*) setReason:(NSString*) value {
  resultEimrespHeader.hasReason = YES;
  resultEimrespHeader.reason = value;
  return self;
}
- (EIMRespHeaderBuilder*) clearReason {
  resultEimrespHeader.hasReason = NO;
  resultEimrespHeader.reason = @"";
  return self;
}
- (BOOL) hasRetCode {
  return resultEimrespHeader.hasRetCode;
}
- (UInt32) retCode {
  return resultEimrespHeader.retCode;
}
- (EIMRespHeaderBuilder*) setRetCode:(UInt32) value {
  resultEimrespHeader.hasRetCode = YES;
  resultEimrespHeader.retCode = value;
  return self;
}
- (EIMRespHeaderBuilder*) clearRetCode {
  resultEimrespHeader.hasRetCode = NO;
  resultEimrespHeader.retCode = 0;
  return self;
}
@end

@interface AuthReq ()
@property (strong) NSString* token;
@property (strong) NSString* deviceId;
@property (strong) NSString* appKey;
@property SInt32 platform;
@property (strong) NSString* version;
@property (strong) NSString* deviceInfo;
@end

@implementation AuthReq

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (BOOL) hasAppKey {
  return !!hasAppKey_;
}
- (void) setHasAppKey:(BOOL) _value_ {
  hasAppKey_ = !!_value_;
}
@synthesize appKey;
- (BOOL) hasPlatform {
  return !!hasPlatform_;
}
- (void) setHasPlatform:(BOOL) _value_ {
  hasPlatform_ = !!_value_;
}
@synthesize platform;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) _value_ {
  hasVersion_ = !!_value_;
}
@synthesize version;
- (BOOL) hasDeviceInfo {
  return !!hasDeviceInfo_;
}
- (void) setHasDeviceInfo:(BOOL) _value_ {
  hasDeviceInfo_ = !!_value_;
}
@synthesize deviceInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.token = @"";
    self.deviceId = @"";
    self.appKey = @"";
    self.platform = 0;
    self.version = @"";
    self.deviceInfo = @"";
  }
  return self;
}
static AuthReq* defaultAuthReqInstance = nil;
+ (void) initialize {
  if (self == [AuthReq class]) {
    defaultAuthReqInstance = [[AuthReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAuthReqInstance;
}
- (instancetype) defaultInstance {
  return defaultAuthReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasDeviceId) {
    [output writeString:2 value:self.deviceId];
  }
  if (self.hasAppKey) {
    [output writeString:3 value:self.appKey];
  }
  if (self.hasPlatform) {
    [output writeInt32:4 value:self.platform];
  }
  if (self.hasVersion) {
    [output writeString:5 value:self.version];
  }
  if (self.hasDeviceInfo) {
    [output writeString:6 value:self.deviceInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasToken) {
    size_ += computeStringSize(1, self.token);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(2, self.deviceId);
  }
  if (self.hasAppKey) {
    size_ += computeStringSize(3, self.appKey);
  }
  if (self.hasPlatform) {
    size_ += computeInt32Size(4, self.platform);
  }
  if (self.hasVersion) {
    size_ += computeStringSize(5, self.version);
  }
  if (self.hasDeviceInfo) {
    size_ += computeStringSize(6, self.deviceInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AuthReq*) parseFromData:(NSData*) data {
  return (AuthReq*)[[[AuthReq builder] mergeFromData:data] build];
}
+ (AuthReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthReq*)[[[AuthReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthReq*) parseFromInputStream:(NSInputStream*) input {
  return (AuthReq*)[[[AuthReq builder] mergeFromInputStream:input] build];
}
+ (AuthReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthReq*)[[[AuthReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthReq*)[[[AuthReq builder] mergeFromCodedInputStream:input] build];
}
+ (AuthReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthReq*)[[[AuthReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthReqBuilder*) builder {
  return [[AuthReqBuilder alloc] init];
}
+ (AuthReqBuilder*) builderWithPrototype:(AuthReq*) prototype {
  return [[AuthReq builder] mergeFrom:prototype];
}
- (AuthReqBuilder*) builder {
  return [AuthReq builder];
}
- (AuthReqBuilder*) toBuilder {
  return [AuthReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  if (self.hasAppKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appKey", self.appKey];
  }
  if (self.hasPlatform) {
    [output appendFormat:@"%@%@: %@\n", indent, @"platform", [NSNumber numberWithInteger:self.platform]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", self.version];
  }
  if (self.hasDeviceInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceInfo", self.deviceInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasToken) {
    [dictionary setObject: self.token forKey: @"token"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  if (self.hasAppKey) {
    [dictionary setObject: self.appKey forKey: @"appKey"];
  }
  if (self.hasPlatform) {
    [dictionary setObject: [NSNumber numberWithInteger:self.platform] forKey: @"platform"];
  }
  if (self.hasVersion) {
    [dictionary setObject: self.version forKey: @"version"];
  }
  if (self.hasDeviceInfo) {
    [dictionary setObject: self.deviceInfo forKey: @"deviceInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthReq class]]) {
    return NO;
  }
  AuthReq *otherMessage = other;
  return
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      self.hasAppKey == otherMessage.hasAppKey &&
      (!self.hasAppKey || [self.appKey isEqual:otherMessage.appKey]) &&
      self.hasPlatform == otherMessage.hasPlatform &&
      (!self.hasPlatform || self.platform == otherMessage.platform) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || [self.version isEqual:otherMessage.version]) &&
      self.hasDeviceInfo == otherMessage.hasDeviceInfo &&
      (!self.hasDeviceInfo || [self.deviceInfo isEqual:otherMessage.deviceInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  if (self.hasAppKey) {
    hashCode = hashCode * 31 + [self.appKey hash];
  }
  if (self.hasPlatform) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.platform] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [self.version hash];
  }
  if (self.hasDeviceInfo) {
    hashCode = hashCode * 31 + [self.deviceInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AuthReqBuilder()
@property (strong) AuthReq* resultAuthReq;
@end

@implementation AuthReqBuilder
@synthesize resultAuthReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthReq = [[AuthReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthReq;
}
- (AuthReqBuilder*) clear {
  self.resultAuthReq = [[AuthReq alloc] init];
  return self;
}
- (AuthReqBuilder*) clone {
  return [AuthReq builderWithPrototype:resultAuthReq];
}
- (AuthReq*) defaultInstance {
  return [AuthReq defaultInstance];
}
- (AuthReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthReq*) buildPartial {
  AuthReq* returnMe = resultAuthReq;
  self.resultAuthReq = nil;
  return returnMe;
}
- (AuthReqBuilder*) mergeFrom:(AuthReq*) other {
  if (other == [AuthReq defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasAppKey) {
    [self setAppKey:other.appKey];
  }
  if (other.hasPlatform) {
    [self setPlatform:other.platform];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasDeviceInfo) {
    [self setDeviceInfo:other.deviceInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 18: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 26: {
        [self setAppKey:[input readString]];
        break;
      }
      case 32: {
        [self setPlatform:[input readInt32]];
        break;
      }
      case 42: {
        [self setVersion:[input readString]];
        break;
      }
      case 50: {
        [self setDeviceInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return resultAuthReq.hasToken;
}
- (NSString*) token {
  return resultAuthReq.token;
}
- (AuthReqBuilder*) setToken:(NSString*) value {
  resultAuthReq.hasToken = YES;
  resultAuthReq.token = value;
  return self;
}
- (AuthReqBuilder*) clearToken {
  resultAuthReq.hasToken = NO;
  resultAuthReq.token = @"";
  return self;
}
- (BOOL) hasDeviceId {
  return resultAuthReq.hasDeviceId;
}
- (NSString*) deviceId {
  return resultAuthReq.deviceId;
}
- (AuthReqBuilder*) setDeviceId:(NSString*) value {
  resultAuthReq.hasDeviceId = YES;
  resultAuthReq.deviceId = value;
  return self;
}
- (AuthReqBuilder*) clearDeviceId {
  resultAuthReq.hasDeviceId = NO;
  resultAuthReq.deviceId = @"";
  return self;
}
- (BOOL) hasAppKey {
  return resultAuthReq.hasAppKey;
}
- (NSString*) appKey {
  return resultAuthReq.appKey;
}
- (AuthReqBuilder*) setAppKey:(NSString*) value {
  resultAuthReq.hasAppKey = YES;
  resultAuthReq.appKey = value;
  return self;
}
- (AuthReqBuilder*) clearAppKey {
  resultAuthReq.hasAppKey = NO;
  resultAuthReq.appKey = @"";
  return self;
}
- (BOOL) hasPlatform {
  return resultAuthReq.hasPlatform;
}
- (SInt32) platform {
  return resultAuthReq.platform;
}
- (AuthReqBuilder*) setPlatform:(SInt32) value {
  resultAuthReq.hasPlatform = YES;
  resultAuthReq.platform = value;
  return self;
}
- (AuthReqBuilder*) clearPlatform {
  resultAuthReq.hasPlatform = NO;
  resultAuthReq.platform = 0;
  return self;
}
- (BOOL) hasVersion {
  return resultAuthReq.hasVersion;
}
- (NSString*) version {
  return resultAuthReq.version;
}
- (AuthReqBuilder*) setVersion:(NSString*) value {
  resultAuthReq.hasVersion = YES;
  resultAuthReq.version = value;
  return self;
}
- (AuthReqBuilder*) clearVersion {
  resultAuthReq.hasVersion = NO;
  resultAuthReq.version = @"";
  return self;
}
- (BOOL) hasDeviceInfo {
  return resultAuthReq.hasDeviceInfo;
}
- (NSString*) deviceInfo {
  return resultAuthReq.deviceInfo;
}
- (AuthReqBuilder*) setDeviceInfo:(NSString*) value {
  resultAuthReq.hasDeviceInfo = YES;
  resultAuthReq.deviceInfo = value;
  return self;
}
- (AuthReqBuilder*) clearDeviceInfo {
  resultAuthReq.hasDeviceInfo = NO;
  resultAuthReq.deviceInfo = @"";
  return self;
}
@end

@interface AuthResp ()
@property (strong) EIMRespHeader* status;
@property (strong) NSString* reconnectionToken;
@property SInt64 expireIn;
@end

@implementation AuthResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasReconnectionToken {
  return !!hasReconnectionToken_;
}
- (void) setHasReconnectionToken:(BOOL) _value_ {
  hasReconnectionToken_ = !!_value_;
}
@synthesize reconnectionToken;
- (BOOL) hasExpireIn {
  return !!hasExpireIn_;
}
- (void) setHasExpireIn:(BOOL) _value_ {
  hasExpireIn_ = !!_value_;
}
@synthesize expireIn;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.reconnectionToken = @"";
    self.expireIn = 0L;
  }
  return self;
}
static AuthResp* defaultAuthRespInstance = nil;
+ (void) initialize {
  if (self == [AuthResp class]) {
    defaultAuthRespInstance = [[AuthResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAuthRespInstance;
}
- (instancetype) defaultInstance {
  return defaultAuthRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasReconnectionToken) {
    [output writeString:2 value:self.reconnectionToken];
  }
  if (self.hasExpireIn) {
    [output writeInt64:3 value:self.expireIn];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasReconnectionToken) {
    size_ += computeStringSize(2, self.reconnectionToken);
  }
  if (self.hasExpireIn) {
    size_ += computeInt64Size(3, self.expireIn);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AuthResp*) parseFromData:(NSData*) data {
  return (AuthResp*)[[[AuthResp builder] mergeFromData:data] build];
}
+ (AuthResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthResp*)[[[AuthResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthResp*) parseFromInputStream:(NSInputStream*) input {
  return (AuthResp*)[[[AuthResp builder] mergeFromInputStream:input] build];
}
+ (AuthResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthResp*)[[[AuthResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthResp*)[[[AuthResp builder] mergeFromCodedInputStream:input] build];
}
+ (AuthResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthResp*)[[[AuthResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthRespBuilder*) builder {
  return [[AuthRespBuilder alloc] init];
}
+ (AuthRespBuilder*) builderWithPrototype:(AuthResp*) prototype {
  return [[AuthResp builder] mergeFrom:prototype];
}
- (AuthRespBuilder*) builder {
  return [AuthResp builder];
}
- (AuthRespBuilder*) toBuilder {
  return [AuthResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasReconnectionToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reconnectionToken", self.reconnectionToken];
  }
  if (self.hasExpireIn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expireIn", [NSNumber numberWithLongLong:self.expireIn]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasReconnectionToken) {
    [dictionary setObject: self.reconnectionToken forKey: @"reconnectionToken"];
  }
  if (self.hasExpireIn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.expireIn] forKey: @"expireIn"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthResp class]]) {
    return NO;
  }
  AuthResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasReconnectionToken == otherMessage.hasReconnectionToken &&
      (!self.hasReconnectionToken || [self.reconnectionToken isEqual:otherMessage.reconnectionToken]) &&
      self.hasExpireIn == otherMessage.hasExpireIn &&
      (!self.hasExpireIn || self.expireIn == otherMessage.expireIn) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasReconnectionToken) {
    hashCode = hashCode * 31 + [self.reconnectionToken hash];
  }
  if (self.hasExpireIn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.expireIn] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AuthRespBuilder()
@property (strong) AuthResp* resultAuthResp;
@end

@implementation AuthRespBuilder
@synthesize resultAuthResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthResp = [[AuthResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthResp;
}
- (AuthRespBuilder*) clear {
  self.resultAuthResp = [[AuthResp alloc] init];
  return self;
}
- (AuthRespBuilder*) clone {
  return [AuthResp builderWithPrototype:resultAuthResp];
}
- (AuthResp*) defaultInstance {
  return [AuthResp defaultInstance];
}
- (AuthResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthResp*) buildPartial {
  AuthResp* returnMe = resultAuthResp;
  self.resultAuthResp = nil;
  return returnMe;
}
- (AuthRespBuilder*) mergeFrom:(AuthResp*) other {
  if (other == [AuthResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasReconnectionToken) {
    [self setReconnectionToken:other.reconnectionToken];
  }
  if (other.hasExpireIn) {
    [self setExpireIn:other.expireIn];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setReconnectionToken:[input readString]];
        break;
      }
      case 24: {
        [self setExpireIn:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultAuthResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultAuthResp.status;
}
- (AuthRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultAuthResp.hasStatus = YES;
  resultAuthResp.status = value;
  return self;
}
- (AuthRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (AuthRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultAuthResp.hasStatus &&
      resultAuthResp.status != [EIMRespHeader defaultInstance]) {
    resultAuthResp.status =
      [[[EIMRespHeader builderWithPrototype:resultAuthResp.status] mergeFrom:value] buildPartial];
  } else {
    resultAuthResp.status = value;
  }
  resultAuthResp.hasStatus = YES;
  return self;
}
- (AuthRespBuilder*) clearStatus {
  resultAuthResp.hasStatus = NO;
  resultAuthResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasReconnectionToken {
  return resultAuthResp.hasReconnectionToken;
}
- (NSString*) reconnectionToken {
  return resultAuthResp.reconnectionToken;
}
- (AuthRespBuilder*) setReconnectionToken:(NSString*) value {
  resultAuthResp.hasReconnectionToken = YES;
  resultAuthResp.reconnectionToken = value;
  return self;
}
- (AuthRespBuilder*) clearReconnectionToken {
  resultAuthResp.hasReconnectionToken = NO;
  resultAuthResp.reconnectionToken = @"";
  return self;
}
- (BOOL) hasExpireIn {
  return resultAuthResp.hasExpireIn;
}
- (SInt64) expireIn {
  return resultAuthResp.expireIn;
}
- (AuthRespBuilder*) setExpireIn:(SInt64) value {
  resultAuthResp.hasExpireIn = YES;
  resultAuthResp.expireIn = value;
  return self;
}
- (AuthRespBuilder*) clearExpireIn {
  resultAuthResp.hasExpireIn = NO;
  resultAuthResp.expireIn = 0L;
  return self;
}
@end

@interface HeartBeatReq ()
@property BOOL flag;
@end

@implementation HeartBeatReq

- (BOOL) hasFlag {
  return !!hasFlag_;
}
- (void) setHasFlag:(BOOL) _value_ {
  hasFlag_ = !!_value_;
}
- (BOOL) flag {
  return !!flag_;
}
- (void) setFlag:(BOOL) _value_ {
  flag_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.flag = NO;
  }
  return self;
}
static HeartBeatReq* defaultHeartBeatReqInstance = nil;
+ (void) initialize {
  if (self == [HeartBeatReq class]) {
    defaultHeartBeatReqInstance = [[HeartBeatReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultHeartBeatReqInstance;
}
- (instancetype) defaultInstance {
  return defaultHeartBeatReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFlag) {
    [output writeBool:1 value:self.flag];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFlag) {
    size_ += computeBoolSize(1, self.flag);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (HeartBeatReq*) parseFromData:(NSData*) data {
  return (HeartBeatReq*)[[[HeartBeatReq builder] mergeFromData:data] build];
}
+ (HeartBeatReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartBeatReq*)[[[HeartBeatReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HeartBeatReq*) parseFromInputStream:(NSInputStream*) input {
  return (HeartBeatReq*)[[[HeartBeatReq builder] mergeFromInputStream:input] build];
}
+ (HeartBeatReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartBeatReq*)[[[HeartBeatReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartBeatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HeartBeatReq*)[[[HeartBeatReq builder] mergeFromCodedInputStream:input] build];
}
+ (HeartBeatReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartBeatReq*)[[[HeartBeatReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartBeatReqBuilder*) builder {
  return [[HeartBeatReqBuilder alloc] init];
}
+ (HeartBeatReqBuilder*) builderWithPrototype:(HeartBeatReq*) prototype {
  return [[HeartBeatReq builder] mergeFrom:prototype];
}
- (HeartBeatReqBuilder*) builder {
  return [HeartBeatReq builder];
}
- (HeartBeatReqBuilder*) toBuilder {
  return [HeartBeatReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFlag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"flag", [NSNumber numberWithBool:self.flag]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFlag) {
    [dictionary setObject: [NSNumber numberWithBool:self.flag] forKey: @"flag"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[HeartBeatReq class]]) {
    return NO;
  }
  HeartBeatReq *otherMessage = other;
  return
      self.hasFlag == otherMessage.hasFlag &&
      (!self.hasFlag || self.flag == otherMessage.flag) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFlag) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.flag] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface HeartBeatReqBuilder()
@property (strong) HeartBeatReq* resultHeartBeatReq;
@end

@implementation HeartBeatReqBuilder
@synthesize resultHeartBeatReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHeartBeatReq = [[HeartBeatReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHeartBeatReq;
}
- (HeartBeatReqBuilder*) clear {
  self.resultHeartBeatReq = [[HeartBeatReq alloc] init];
  return self;
}
- (HeartBeatReqBuilder*) clone {
  return [HeartBeatReq builderWithPrototype:resultHeartBeatReq];
}
- (HeartBeatReq*) defaultInstance {
  return [HeartBeatReq defaultInstance];
}
- (HeartBeatReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HeartBeatReq*) buildPartial {
  HeartBeatReq* returnMe = resultHeartBeatReq;
  self.resultHeartBeatReq = nil;
  return returnMe;
}
- (HeartBeatReqBuilder*) mergeFrom:(HeartBeatReq*) other {
  if (other == [HeartBeatReq defaultInstance]) {
    return self;
  }
  if (other.hasFlag) {
    [self setFlag:other.flag];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HeartBeatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HeartBeatReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFlag:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasFlag {
  return resultHeartBeatReq.hasFlag;
}
- (BOOL) flag {
  return resultHeartBeatReq.flag;
}
- (HeartBeatReqBuilder*) setFlag:(BOOL) value {
  resultHeartBeatReq.hasFlag = YES;
  resultHeartBeatReq.flag = value;
  return self;
}
- (HeartBeatReqBuilder*) clearFlag {
  resultHeartBeatReq.hasFlag = NO;
  resultHeartBeatReq.flag = NO;
  return self;
}
@end

@interface HeartBeatResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation HeartBeatResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static HeartBeatResp* defaultHeartBeatRespInstance = nil;
+ (void) initialize {
  if (self == [HeartBeatResp class]) {
    defaultHeartBeatRespInstance = [[HeartBeatResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultHeartBeatRespInstance;
}
- (instancetype) defaultInstance {
  return defaultHeartBeatRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (HeartBeatResp*) parseFromData:(NSData*) data {
  return (HeartBeatResp*)[[[HeartBeatResp builder] mergeFromData:data] build];
}
+ (HeartBeatResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartBeatResp*)[[[HeartBeatResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HeartBeatResp*) parseFromInputStream:(NSInputStream*) input {
  return (HeartBeatResp*)[[[HeartBeatResp builder] mergeFromInputStream:input] build];
}
+ (HeartBeatResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartBeatResp*)[[[HeartBeatResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartBeatResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HeartBeatResp*)[[[HeartBeatResp builder] mergeFromCodedInputStream:input] build];
}
+ (HeartBeatResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HeartBeatResp*)[[[HeartBeatResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HeartBeatRespBuilder*) builder {
  return [[HeartBeatRespBuilder alloc] init];
}
+ (HeartBeatRespBuilder*) builderWithPrototype:(HeartBeatResp*) prototype {
  return [[HeartBeatResp builder] mergeFrom:prototype];
}
- (HeartBeatRespBuilder*) builder {
  return [HeartBeatResp builder];
}
- (HeartBeatRespBuilder*) toBuilder {
  return [HeartBeatResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[HeartBeatResp class]]) {
    return NO;
  }
  HeartBeatResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface HeartBeatRespBuilder()
@property (strong) HeartBeatResp* resultHeartBeatResp;
@end

@implementation HeartBeatRespBuilder
@synthesize resultHeartBeatResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHeartBeatResp = [[HeartBeatResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHeartBeatResp;
}
- (HeartBeatRespBuilder*) clear {
  self.resultHeartBeatResp = [[HeartBeatResp alloc] init];
  return self;
}
- (HeartBeatRespBuilder*) clone {
  return [HeartBeatResp builderWithPrototype:resultHeartBeatResp];
}
- (HeartBeatResp*) defaultInstance {
  return [HeartBeatResp defaultInstance];
}
- (HeartBeatResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HeartBeatResp*) buildPartial {
  HeartBeatResp* returnMe = resultHeartBeatResp;
  self.resultHeartBeatResp = nil;
  return returnMe;
}
- (HeartBeatRespBuilder*) mergeFrom:(HeartBeatResp*) other {
  if (other == [HeartBeatResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HeartBeatRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HeartBeatRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultHeartBeatResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultHeartBeatResp.status;
}
- (HeartBeatRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultHeartBeatResp.hasStatus = YES;
  resultHeartBeatResp.status = value;
  return self;
}
- (HeartBeatRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (HeartBeatRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultHeartBeatResp.hasStatus &&
      resultHeartBeatResp.status != [EIMRespHeader defaultInstance]) {
    resultHeartBeatResp.status =
      [[[EIMRespHeader builderWithPrototype:resultHeartBeatResp.status] mergeFrom:value] buildPartial];
  } else {
    resultHeartBeatResp.status = value;
  }
  resultHeartBeatResp.hasStatus = YES;
  return self;
}
- (HeartBeatRespBuilder*) clearStatus {
  resultHeartBeatResp.hasStatus = NO;
  resultHeartBeatResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end

@interface DeviceReconnectionReq ()
@property (strong) NSString* reconnectionToken;
@property (strong) NSString* deviceId;
@end

@implementation DeviceReconnectionReq

- (BOOL) hasReconnectionToken {
  return !!hasReconnectionToken_;
}
- (void) setHasReconnectionToken:(BOOL) _value_ {
  hasReconnectionToken_ = !!_value_;
}
@synthesize reconnectionToken;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.reconnectionToken = @"";
    self.deviceId = @"";
  }
  return self;
}
static DeviceReconnectionReq* defaultDeviceReconnectionReqInstance = nil;
+ (void) initialize {
  if (self == [DeviceReconnectionReq class]) {
    defaultDeviceReconnectionReqInstance = [[DeviceReconnectionReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeviceReconnectionReqInstance;
}
- (instancetype) defaultInstance {
  return defaultDeviceReconnectionReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReconnectionToken) {
    [output writeString:1 value:self.reconnectionToken];
  }
  if (self.hasDeviceId) {
    [output writeString:2 value:self.deviceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReconnectionToken) {
    size_ += computeStringSize(1, self.reconnectionToken);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(2, self.deviceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeviceReconnectionReq*) parseFromData:(NSData*) data {
  return (DeviceReconnectionReq*)[[[DeviceReconnectionReq builder] mergeFromData:data] build];
}
+ (DeviceReconnectionReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceReconnectionReq*)[[[DeviceReconnectionReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeviceReconnectionReq*) parseFromInputStream:(NSInputStream*) input {
  return (DeviceReconnectionReq*)[[[DeviceReconnectionReq builder] mergeFromInputStream:input] build];
}
+ (DeviceReconnectionReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceReconnectionReq*)[[[DeviceReconnectionReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceReconnectionReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeviceReconnectionReq*)[[[DeviceReconnectionReq builder] mergeFromCodedInputStream:input] build];
}
+ (DeviceReconnectionReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceReconnectionReq*)[[[DeviceReconnectionReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceReconnectionReqBuilder*) builder {
  return [[DeviceReconnectionReqBuilder alloc] init];
}
+ (DeviceReconnectionReqBuilder*) builderWithPrototype:(DeviceReconnectionReq*) prototype {
  return [[DeviceReconnectionReq builder] mergeFrom:prototype];
}
- (DeviceReconnectionReqBuilder*) builder {
  return [DeviceReconnectionReq builder];
}
- (DeviceReconnectionReqBuilder*) toBuilder {
  return [DeviceReconnectionReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReconnectionToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reconnectionToken", self.reconnectionToken];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasReconnectionToken) {
    [dictionary setObject: self.reconnectionToken forKey: @"reconnectionToken"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeviceReconnectionReq class]]) {
    return NO;
  }
  DeviceReconnectionReq *otherMessage = other;
  return
      self.hasReconnectionToken == otherMessage.hasReconnectionToken &&
      (!self.hasReconnectionToken || [self.reconnectionToken isEqual:otherMessage.reconnectionToken]) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReconnectionToken) {
    hashCode = hashCode * 31 + [self.reconnectionToken hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeviceReconnectionReqBuilder()
@property (strong) DeviceReconnectionReq* resultDeviceReconnectionReq;
@end

@implementation DeviceReconnectionReqBuilder
@synthesize resultDeviceReconnectionReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeviceReconnectionReq = [[DeviceReconnectionReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeviceReconnectionReq;
}
- (DeviceReconnectionReqBuilder*) clear {
  self.resultDeviceReconnectionReq = [[DeviceReconnectionReq alloc] init];
  return self;
}
- (DeviceReconnectionReqBuilder*) clone {
  return [DeviceReconnectionReq builderWithPrototype:resultDeviceReconnectionReq];
}
- (DeviceReconnectionReq*) defaultInstance {
  return [DeviceReconnectionReq defaultInstance];
}
- (DeviceReconnectionReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeviceReconnectionReq*) buildPartial {
  DeviceReconnectionReq* returnMe = resultDeviceReconnectionReq;
  self.resultDeviceReconnectionReq = nil;
  return returnMe;
}
- (DeviceReconnectionReqBuilder*) mergeFrom:(DeviceReconnectionReq*) other {
  if (other == [DeviceReconnectionReq defaultInstance]) {
    return self;
  }
  if (other.hasReconnectionToken) {
    [self setReconnectionToken:other.reconnectionToken];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeviceReconnectionReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeviceReconnectionReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setReconnectionToken:[input readString]];
        break;
      }
      case 18: {
        [self setDeviceId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasReconnectionToken {
  return resultDeviceReconnectionReq.hasReconnectionToken;
}
- (NSString*) reconnectionToken {
  return resultDeviceReconnectionReq.reconnectionToken;
}
- (DeviceReconnectionReqBuilder*) setReconnectionToken:(NSString*) value {
  resultDeviceReconnectionReq.hasReconnectionToken = YES;
  resultDeviceReconnectionReq.reconnectionToken = value;
  return self;
}
- (DeviceReconnectionReqBuilder*) clearReconnectionToken {
  resultDeviceReconnectionReq.hasReconnectionToken = NO;
  resultDeviceReconnectionReq.reconnectionToken = @"";
  return self;
}
- (BOOL) hasDeviceId {
  return resultDeviceReconnectionReq.hasDeviceId;
}
- (NSString*) deviceId {
  return resultDeviceReconnectionReq.deviceId;
}
- (DeviceReconnectionReqBuilder*) setDeviceId:(NSString*) value {
  resultDeviceReconnectionReq.hasDeviceId = YES;
  resultDeviceReconnectionReq.deviceId = value;
  return self;
}
- (DeviceReconnectionReqBuilder*) clearDeviceId {
  resultDeviceReconnectionReq.hasDeviceId = NO;
  resultDeviceReconnectionReq.deviceId = @"";
  return self;
}
@end

@interface DeviceReconnectionResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation DeviceReconnectionResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static DeviceReconnectionResp* defaultDeviceReconnectionRespInstance = nil;
+ (void) initialize {
  if (self == [DeviceReconnectionResp class]) {
    defaultDeviceReconnectionRespInstance = [[DeviceReconnectionResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeviceReconnectionRespInstance;
}
- (instancetype) defaultInstance {
  return defaultDeviceReconnectionRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeviceReconnectionResp*) parseFromData:(NSData*) data {
  return (DeviceReconnectionResp*)[[[DeviceReconnectionResp builder] mergeFromData:data] build];
}
+ (DeviceReconnectionResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceReconnectionResp*)[[[DeviceReconnectionResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeviceReconnectionResp*) parseFromInputStream:(NSInputStream*) input {
  return (DeviceReconnectionResp*)[[[DeviceReconnectionResp builder] mergeFromInputStream:input] build];
}
+ (DeviceReconnectionResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceReconnectionResp*)[[[DeviceReconnectionResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceReconnectionResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeviceReconnectionResp*)[[[DeviceReconnectionResp builder] mergeFromCodedInputStream:input] build];
}
+ (DeviceReconnectionResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeviceReconnectionResp*)[[[DeviceReconnectionResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeviceReconnectionRespBuilder*) builder {
  return [[DeviceReconnectionRespBuilder alloc] init];
}
+ (DeviceReconnectionRespBuilder*) builderWithPrototype:(DeviceReconnectionResp*) prototype {
  return [[DeviceReconnectionResp builder] mergeFrom:prototype];
}
- (DeviceReconnectionRespBuilder*) builder {
  return [DeviceReconnectionResp builder];
}
- (DeviceReconnectionRespBuilder*) toBuilder {
  return [DeviceReconnectionResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeviceReconnectionResp class]]) {
    return NO;
  }
  DeviceReconnectionResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeviceReconnectionRespBuilder()
@property (strong) DeviceReconnectionResp* resultDeviceReconnectionResp;
@end

@implementation DeviceReconnectionRespBuilder
@synthesize resultDeviceReconnectionResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeviceReconnectionResp = [[DeviceReconnectionResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeviceReconnectionResp;
}
- (DeviceReconnectionRespBuilder*) clear {
  self.resultDeviceReconnectionResp = [[DeviceReconnectionResp alloc] init];
  return self;
}
- (DeviceReconnectionRespBuilder*) clone {
  return [DeviceReconnectionResp builderWithPrototype:resultDeviceReconnectionResp];
}
- (DeviceReconnectionResp*) defaultInstance {
  return [DeviceReconnectionResp defaultInstance];
}
- (DeviceReconnectionResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeviceReconnectionResp*) buildPartial {
  DeviceReconnectionResp* returnMe = resultDeviceReconnectionResp;
  self.resultDeviceReconnectionResp = nil;
  return returnMe;
}
- (DeviceReconnectionRespBuilder*) mergeFrom:(DeviceReconnectionResp*) other {
  if (other == [DeviceReconnectionResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeviceReconnectionRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeviceReconnectionRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultDeviceReconnectionResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultDeviceReconnectionResp.status;
}
- (DeviceReconnectionRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultDeviceReconnectionResp.hasStatus = YES;
  resultDeviceReconnectionResp.status = value;
  return self;
}
- (DeviceReconnectionRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (DeviceReconnectionRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultDeviceReconnectionResp.hasStatus &&
      resultDeviceReconnectionResp.status != [EIMRespHeader defaultInstance]) {
    resultDeviceReconnectionResp.status =
      [[[EIMRespHeader builderWithPrototype:resultDeviceReconnectionResp.status] mergeFrom:value] buildPartial];
  } else {
    resultDeviceReconnectionResp.status = value;
  }
  resultDeviceReconnectionResp.hasStatus = YES;
  return self;
}
- (DeviceReconnectionRespBuilder*) clearStatus {
  resultDeviceReconnectionResp.hasStatus = NO;
  resultDeviceReconnectionResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end

@interface MessageReq ()
@property (strong) NSString* uuid;
@property SInt64 receiver;
@property (strong) NSString* type;
@property (strong) NSString* content;
@property (strong) NSString* replyInfo;
@property (strong) NSString* extra;
@end

@implementation MessageReq

- (BOOL) hasUuid {
  return !!hasUuid_;
}
- (void) setHasUuid:(BOOL) _value_ {
  hasUuid_ = !!_value_;
}
@synthesize uuid;
- (BOOL) hasReceiver {
  return !!hasReceiver_;
}
- (void) setHasReceiver:(BOOL) _value_ {
  hasReceiver_ = !!_value_;
}
@synthesize receiver;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasReplyInfo {
  return !!hasReplyInfo_;
}
- (void) setHasReplyInfo:(BOOL) _value_ {
  hasReplyInfo_ = !!_value_;
}
@synthesize replyInfo;
- (BOOL) hasExtra {
  return !!hasExtra_;
}
- (void) setHasExtra:(BOOL) _value_ {
  hasExtra_ = !!_value_;
}
@synthesize extra;
- (instancetype) init {
  if ((self = [super init])) {
    self.uuid = @"";
    self.receiver = 0L;
    self.type = @"";
    self.content = @"";
    self.replyInfo = @"";
    self.extra = @"";
  }
  return self;
}
static MessageReq* defaultMessageReqInstance = nil;
+ (void) initialize {
  if (self == [MessageReq class]) {
    defaultMessageReqInstance = [[MessageReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageReqInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUuid) {
    [output writeString:1 value:self.uuid];
  }
  if (self.hasReceiver) {
    [output writeInt64:2 value:self.receiver];
  }
  if (self.hasType) {
    [output writeString:3 value:self.type];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasReplyInfo) {
    [output writeString:5 value:self.replyInfo];
  }
  if (self.hasExtra) {
    [output writeString:6 value:self.extra];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUuid) {
    size_ += computeStringSize(1, self.uuid);
  }
  if (self.hasReceiver) {
    size_ += computeInt64Size(2, self.receiver);
  }
  if (self.hasType) {
    size_ += computeStringSize(3, self.type);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasReplyInfo) {
    size_ += computeStringSize(5, self.replyInfo);
  }
  if (self.hasExtra) {
    size_ += computeStringSize(6, self.extra);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageReq*) parseFromData:(NSData*) data {
  return (MessageReq*)[[[MessageReq builder] mergeFromData:data] build];
}
+ (MessageReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageReq*)[[[MessageReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageReq*) parseFromInputStream:(NSInputStream*) input {
  return (MessageReq*)[[[MessageReq builder] mergeFromInputStream:input] build];
}
+ (MessageReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageReq*)[[[MessageReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageReq*)[[[MessageReq builder] mergeFromCodedInputStream:input] build];
}
+ (MessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageReq*)[[[MessageReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageReqBuilder*) builder {
  return [[MessageReqBuilder alloc] init];
}
+ (MessageReqBuilder*) builderWithPrototype:(MessageReq*) prototype {
  return [[MessageReq builder] mergeFrom:prototype];
}
- (MessageReqBuilder*) builder {
  return [MessageReq builder];
}
- (MessageReqBuilder*) toBuilder {
  return [MessageReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uuid", self.uuid];
  }
  if (self.hasReceiver) {
    [output appendFormat:@"%@%@: %@\n", indent, @"receiver", [NSNumber numberWithLongLong:self.receiver]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasReplyInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyInfo", self.replyInfo];
  }
  if (self.hasExtra) {
    [output appendFormat:@"%@%@: %@\n", indent, @"extra", self.extra];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUuid) {
    [dictionary setObject: self.uuid forKey: @"uuid"];
  }
  if (self.hasReceiver) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.receiver] forKey: @"receiver"];
  }
  if (self.hasType) {
    [dictionary setObject: self.type forKey: @"type"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasReplyInfo) {
    [dictionary setObject: self.replyInfo forKey: @"replyInfo"];
  }
  if (self.hasExtra) {
    [dictionary setObject: self.extra forKey: @"extra"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageReq class]]) {
    return NO;
  }
  MessageReq *otherMessage = other;
  return
      self.hasUuid == otherMessage.hasUuid &&
      (!self.hasUuid || [self.uuid isEqual:otherMessage.uuid]) &&
      self.hasReceiver == otherMessage.hasReceiver &&
      (!self.hasReceiver || self.receiver == otherMessage.receiver) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || [self.type isEqual:otherMessage.type]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasReplyInfo == otherMessage.hasReplyInfo &&
      (!self.hasReplyInfo || [self.replyInfo isEqual:otherMessage.replyInfo]) &&
      self.hasExtra == otherMessage.hasExtra &&
      (!self.hasExtra || [self.extra isEqual:otherMessage.extra]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUuid) {
    hashCode = hashCode * 31 + [self.uuid hash];
  }
  if (self.hasReceiver) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.receiver] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [self.type hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasReplyInfo) {
    hashCode = hashCode * 31 + [self.replyInfo hash];
  }
  if (self.hasExtra) {
    hashCode = hashCode * 31 + [self.extra hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageReqBuilder()
@property (strong) MessageReq* resultMessageReq;
@end

@implementation MessageReqBuilder
@synthesize resultMessageReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessageReq = [[MessageReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessageReq;
}
- (MessageReqBuilder*) clear {
  self.resultMessageReq = [[MessageReq alloc] init];
  return self;
}
- (MessageReqBuilder*) clone {
  return [MessageReq builderWithPrototype:resultMessageReq];
}
- (MessageReq*) defaultInstance {
  return [MessageReq defaultInstance];
}
- (MessageReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageReq*) buildPartial {
  MessageReq* returnMe = resultMessageReq;
  self.resultMessageReq = nil;
  return returnMe;
}
- (MessageReqBuilder*) mergeFrom:(MessageReq*) other {
  if (other == [MessageReq defaultInstance]) {
    return self;
  }
  if (other.hasUuid) {
    [self setUuid:other.uuid];
  }
  if (other.hasReceiver) {
    [self setReceiver:other.receiver];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasReplyInfo) {
    [self setReplyInfo:other.replyInfo];
  }
  if (other.hasExtra) {
    [self setExtra:other.extra];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUuid:[input readString]];
        break;
      }
      case 16: {
        [self setReceiver:[input readInt64]];
        break;
      }
      case 26: {
        [self setType:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 42: {
        [self setReplyInfo:[input readString]];
        break;
      }
      case 50: {
        [self setExtra:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUuid {
  return resultMessageReq.hasUuid;
}
- (NSString*) uuid {
  return resultMessageReq.uuid;
}
- (MessageReqBuilder*) setUuid:(NSString*) value {
  resultMessageReq.hasUuid = YES;
  resultMessageReq.uuid = value;
  return self;
}
- (MessageReqBuilder*) clearUuid {
  resultMessageReq.hasUuid = NO;
  resultMessageReq.uuid = @"";
  return self;
}
- (BOOL) hasReceiver {
  return resultMessageReq.hasReceiver;
}
- (SInt64) receiver {
  return resultMessageReq.receiver;
}
- (MessageReqBuilder*) setReceiver:(SInt64) value {
  resultMessageReq.hasReceiver = YES;
  resultMessageReq.receiver = value;
  return self;
}
- (MessageReqBuilder*) clearReceiver {
  resultMessageReq.hasReceiver = NO;
  resultMessageReq.receiver = 0L;
  return self;
}
- (BOOL) hasType {
  return resultMessageReq.hasType;
}
- (NSString*) type {
  return resultMessageReq.type;
}
- (MessageReqBuilder*) setType:(NSString*) value {
  resultMessageReq.hasType = YES;
  resultMessageReq.type = value;
  return self;
}
- (MessageReqBuilder*) clearType {
  resultMessageReq.hasType = NO;
  resultMessageReq.type = @"";
  return self;
}
- (BOOL) hasContent {
  return resultMessageReq.hasContent;
}
- (NSString*) content {
  return resultMessageReq.content;
}
- (MessageReqBuilder*) setContent:(NSString*) value {
  resultMessageReq.hasContent = YES;
  resultMessageReq.content = value;
  return self;
}
- (MessageReqBuilder*) clearContent {
  resultMessageReq.hasContent = NO;
  resultMessageReq.content = @"";
  return self;
}
- (BOOL) hasReplyInfo {
  return resultMessageReq.hasReplyInfo;
}
- (NSString*) replyInfo {
  return resultMessageReq.replyInfo;
}
- (MessageReqBuilder*) setReplyInfo:(NSString*) value {
  resultMessageReq.hasReplyInfo = YES;
  resultMessageReq.replyInfo = value;
  return self;
}
- (MessageReqBuilder*) clearReplyInfo {
  resultMessageReq.hasReplyInfo = NO;
  resultMessageReq.replyInfo = @"";
  return self;
}
- (BOOL) hasExtra {
  return resultMessageReq.hasExtra;
}
- (NSString*) extra {
  return resultMessageReq.extra;
}
- (MessageReqBuilder*) setExtra:(NSString*) value {
  resultMessageReq.hasExtra = YES;
  resultMessageReq.extra = value;
  return self;
}
- (MessageReqBuilder*) clearExtra {
  resultMessageReq.hasExtra = NO;
  resultMessageReq.extra = @"";
  return self;
}
@end

@interface GroupMessageReq ()
@property (strong) NSString* uuid;
@property SInt64 sender;
@property SInt64 groupId;
@property (strong) NSString* type;
@property (strong) NSString* content;
@property (strong) NSString* at;
@property (strong) NSString* replyInfo;
@property (strong) NSString* extra;
@end

@implementation GroupMessageReq

- (BOOL) hasUuid {
  return !!hasUuid_;
}
- (void) setHasUuid:(BOOL) _value_ {
  hasUuid_ = !!_value_;
}
@synthesize uuid;
- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) _value_ {
  hasSender_ = !!_value_;
}
@synthesize sender;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasAt {
  return !!hasAt_;
}
- (void) setHasAt:(BOOL) _value_ {
  hasAt_ = !!_value_;
}
@synthesize at;
- (BOOL) hasReplyInfo {
  return !!hasReplyInfo_;
}
- (void) setHasReplyInfo:(BOOL) _value_ {
  hasReplyInfo_ = !!_value_;
}
@synthesize replyInfo;
- (BOOL) hasExtra {
  return !!hasExtra_;
}
- (void) setHasExtra:(BOOL) _value_ {
  hasExtra_ = !!_value_;
}
@synthesize extra;
- (instancetype) init {
  if ((self = [super init])) {
    self.uuid = @"";
    self.sender = 0L;
    self.groupId = 0L;
    self.type = @"";
    self.content = @"";
    self.at = @"";
    self.replyInfo = @"";
    self.extra = @"";
  }
  return self;
}
static GroupMessageReq* defaultGroupMessageReqInstance = nil;
+ (void) initialize {
  if (self == [GroupMessageReq class]) {
    defaultGroupMessageReqInstance = [[GroupMessageReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGroupMessageReqInstance;
}
- (instancetype) defaultInstance {
  return defaultGroupMessageReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUuid) {
    [output writeString:1 value:self.uuid];
  }
  if (self.hasSender) {
    [output writeInt64:2 value:self.sender];
  }
  if (self.hasGroupId) {
    [output writeInt64:3 value:self.groupId];
  }
  if (self.hasType) {
    [output writeString:4 value:self.type];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasAt) {
    [output writeString:6 value:self.at];
  }
  if (self.hasReplyInfo) {
    [output writeString:7 value:self.replyInfo];
  }
  if (self.hasExtra) {
    [output writeString:8 value:self.extra];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUuid) {
    size_ += computeStringSize(1, self.uuid);
  }
  if (self.hasSender) {
    size_ += computeInt64Size(2, self.sender);
  }
  if (self.hasGroupId) {
    size_ += computeInt64Size(3, self.groupId);
  }
  if (self.hasType) {
    size_ += computeStringSize(4, self.type);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  if (self.hasAt) {
    size_ += computeStringSize(6, self.at);
  }
  if (self.hasReplyInfo) {
    size_ += computeStringSize(7, self.replyInfo);
  }
  if (self.hasExtra) {
    size_ += computeStringSize(8, self.extra);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GroupMessageReq*) parseFromData:(NSData*) data {
  return (GroupMessageReq*)[[[GroupMessageReq builder] mergeFromData:data] build];
}
+ (GroupMessageReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupMessageReq*)[[[GroupMessageReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GroupMessageReq*) parseFromInputStream:(NSInputStream*) input {
  return (GroupMessageReq*)[[[GroupMessageReq builder] mergeFromInputStream:input] build];
}
+ (GroupMessageReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupMessageReq*)[[[GroupMessageReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GroupMessageReq*)[[[GroupMessageReq builder] mergeFromCodedInputStream:input] build];
}
+ (GroupMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GroupMessageReq*)[[[GroupMessageReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GroupMessageReqBuilder*) builder {
  return [[GroupMessageReqBuilder alloc] init];
}
+ (GroupMessageReqBuilder*) builderWithPrototype:(GroupMessageReq*) prototype {
  return [[GroupMessageReq builder] mergeFrom:prototype];
}
- (GroupMessageReqBuilder*) builder {
  return [GroupMessageReq builder];
}
- (GroupMessageReqBuilder*) toBuilder {
  return [GroupMessageReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uuid", self.uuid];
  }
  if (self.hasSender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sender", [NSNumber numberWithLongLong:self.sender]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"at", self.at];
  }
  if (self.hasReplyInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyInfo", self.replyInfo];
  }
  if (self.hasExtra) {
    [output appendFormat:@"%@%@: %@\n", indent, @"extra", self.extra];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUuid) {
    [dictionary setObject: self.uuid forKey: @"uuid"];
  }
  if (self.hasSender) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sender] forKey: @"sender"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasType) {
    [dictionary setObject: self.type forKey: @"type"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasAt) {
    [dictionary setObject: self.at forKey: @"at"];
  }
  if (self.hasReplyInfo) {
    [dictionary setObject: self.replyInfo forKey: @"replyInfo"];
  }
  if (self.hasExtra) {
    [dictionary setObject: self.extra forKey: @"extra"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GroupMessageReq class]]) {
    return NO;
  }
  GroupMessageReq *otherMessage = other;
  return
      self.hasUuid == otherMessage.hasUuid &&
      (!self.hasUuid || [self.uuid isEqual:otherMessage.uuid]) &&
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || self.sender == otherMessage.sender) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || [self.type isEqual:otherMessage.type]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasAt == otherMessage.hasAt &&
      (!self.hasAt || [self.at isEqual:otherMessage.at]) &&
      self.hasReplyInfo == otherMessage.hasReplyInfo &&
      (!self.hasReplyInfo || [self.replyInfo isEqual:otherMessage.replyInfo]) &&
      self.hasExtra == otherMessage.hasExtra &&
      (!self.hasExtra || [self.extra isEqual:otherMessage.extra]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUuid) {
    hashCode = hashCode * 31 + [self.uuid hash];
  }
  if (self.hasSender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sender] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [self.type hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasAt) {
    hashCode = hashCode * 31 + [self.at hash];
  }
  if (self.hasReplyInfo) {
    hashCode = hashCode * 31 + [self.replyInfo hash];
  }
  if (self.hasExtra) {
    hashCode = hashCode * 31 + [self.extra hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GroupMessageReqBuilder()
@property (strong) GroupMessageReq* resultGroupMessageReq;
@end

@implementation GroupMessageReqBuilder
@synthesize resultGroupMessageReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGroupMessageReq = [[GroupMessageReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGroupMessageReq;
}
- (GroupMessageReqBuilder*) clear {
  self.resultGroupMessageReq = [[GroupMessageReq alloc] init];
  return self;
}
- (GroupMessageReqBuilder*) clone {
  return [GroupMessageReq builderWithPrototype:resultGroupMessageReq];
}
- (GroupMessageReq*) defaultInstance {
  return [GroupMessageReq defaultInstance];
}
- (GroupMessageReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GroupMessageReq*) buildPartial {
  GroupMessageReq* returnMe = resultGroupMessageReq;
  self.resultGroupMessageReq = nil;
  return returnMe;
}
- (GroupMessageReqBuilder*) mergeFrom:(GroupMessageReq*) other {
  if (other == [GroupMessageReq defaultInstance]) {
    return self;
  }
  if (other.hasUuid) {
    [self setUuid:other.uuid];
  }
  if (other.hasSender) {
    [self setSender:other.sender];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasAt) {
    [self setAt:other.at];
  }
  if (other.hasReplyInfo) {
    [self setReplyInfo:other.replyInfo];
  }
  if (other.hasExtra) {
    [self setExtra:other.extra];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GroupMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GroupMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUuid:[input readString]];
        break;
      }
      case 16: {
        [self setSender:[input readInt64]];
        break;
      }
      case 24: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 34: {
        [self setType:[input readString]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 50: {
        [self setAt:[input readString]];
        break;
      }
      case 58: {
        [self setReplyInfo:[input readString]];
        break;
      }
      case 66: {
        [self setExtra:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUuid {
  return resultGroupMessageReq.hasUuid;
}
- (NSString*) uuid {
  return resultGroupMessageReq.uuid;
}
- (GroupMessageReqBuilder*) setUuid:(NSString*) value {
  resultGroupMessageReq.hasUuid = YES;
  resultGroupMessageReq.uuid = value;
  return self;
}
- (GroupMessageReqBuilder*) clearUuid {
  resultGroupMessageReq.hasUuid = NO;
  resultGroupMessageReq.uuid = @"";
  return self;
}
- (BOOL) hasSender {
  return resultGroupMessageReq.hasSender;
}
- (SInt64) sender {
  return resultGroupMessageReq.sender;
}
- (GroupMessageReqBuilder*) setSender:(SInt64) value {
  resultGroupMessageReq.hasSender = YES;
  resultGroupMessageReq.sender = value;
  return self;
}
- (GroupMessageReqBuilder*) clearSender {
  resultGroupMessageReq.hasSender = NO;
  resultGroupMessageReq.sender = 0L;
  return self;
}
- (BOOL) hasGroupId {
  return resultGroupMessageReq.hasGroupId;
}
- (SInt64) groupId {
  return resultGroupMessageReq.groupId;
}
- (GroupMessageReqBuilder*) setGroupId:(SInt64) value {
  resultGroupMessageReq.hasGroupId = YES;
  resultGroupMessageReq.groupId = value;
  return self;
}
- (GroupMessageReqBuilder*) clearGroupId {
  resultGroupMessageReq.hasGroupId = NO;
  resultGroupMessageReq.groupId = 0L;
  return self;
}
- (BOOL) hasType {
  return resultGroupMessageReq.hasType;
}
- (NSString*) type {
  return resultGroupMessageReq.type;
}
- (GroupMessageReqBuilder*) setType:(NSString*) value {
  resultGroupMessageReq.hasType = YES;
  resultGroupMessageReq.type = value;
  return self;
}
- (GroupMessageReqBuilder*) clearType {
  resultGroupMessageReq.hasType = NO;
  resultGroupMessageReq.type = @"";
  return self;
}
- (BOOL) hasContent {
  return resultGroupMessageReq.hasContent;
}
- (NSString*) content {
  return resultGroupMessageReq.content;
}
- (GroupMessageReqBuilder*) setContent:(NSString*) value {
  resultGroupMessageReq.hasContent = YES;
  resultGroupMessageReq.content = value;
  return self;
}
- (GroupMessageReqBuilder*) clearContent {
  resultGroupMessageReq.hasContent = NO;
  resultGroupMessageReq.content = @"";
  return self;
}
- (BOOL) hasAt {
  return resultGroupMessageReq.hasAt;
}
- (NSString*) at {
  return resultGroupMessageReq.at;
}
- (GroupMessageReqBuilder*) setAt:(NSString*) value {
  resultGroupMessageReq.hasAt = YES;
  resultGroupMessageReq.at = value;
  return self;
}
- (GroupMessageReqBuilder*) clearAt {
  resultGroupMessageReq.hasAt = NO;
  resultGroupMessageReq.at = @"";
  return self;
}
- (BOOL) hasReplyInfo {
  return resultGroupMessageReq.hasReplyInfo;
}
- (NSString*) replyInfo {
  return resultGroupMessageReq.replyInfo;
}
- (GroupMessageReqBuilder*) setReplyInfo:(NSString*) value {
  resultGroupMessageReq.hasReplyInfo = YES;
  resultGroupMessageReq.replyInfo = value;
  return self;
}
- (GroupMessageReqBuilder*) clearReplyInfo {
  resultGroupMessageReq.hasReplyInfo = NO;
  resultGroupMessageReq.replyInfo = @"";
  return self;
}
- (BOOL) hasExtra {
  return resultGroupMessageReq.hasExtra;
}
- (NSString*) extra {
  return resultGroupMessageReq.extra;
}
- (GroupMessageReqBuilder*) setExtra:(NSString*) value {
  resultGroupMessageReq.hasExtra = YES;
  resultGroupMessageReq.extra = value;
  return self;
}
- (GroupMessageReqBuilder*) clearExtra {
  resultGroupMessageReq.hasExtra = NO;
  resultGroupMessageReq.extra = @"";
  return self;
}
@end

@interface SendMessageResp ()
@property (strong) EIMRespHeader* status;
@property (strong) NSString* messageId;
@property SInt64 createTime;
@property (strong) NSString* transactionId;
@end

@implementation SendMessageResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasMessageId {
  return !!hasMessageId_;
}
- (void) setHasMessageId:(BOOL) _value_ {
  hasMessageId_ = !!_value_;
}
@synthesize messageId;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) _value_ {
  hasCreateTime_ = !!_value_;
}
@synthesize createTime;
- (BOOL) hasTransactionId {
  return !!hasTransactionId_;
}
- (void) setHasTransactionId:(BOOL) _value_ {
  hasTransactionId_ = !!_value_;
}
@synthesize transactionId;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.messageId = @"";
    self.createTime = 0L;
    self.transactionId = @"";
  }
  return self;
}
static SendMessageResp* defaultSendMessageRespInstance = nil;
+ (void) initialize {
  if (self == [SendMessageResp class]) {
    defaultSendMessageRespInstance = [[SendMessageResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSendMessageRespInstance;
}
- (instancetype) defaultInstance {
  return defaultSendMessageRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasMessageId) {
    [output writeString:2 value:self.messageId];
  }
  if (self.hasCreateTime) {
    [output writeInt64:3 value:self.createTime];
  }
  if (self.hasTransactionId) {
    [output writeString:4 value:self.transactionId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasMessageId) {
    size_ += computeStringSize(2, self.messageId);
  }
  if (self.hasCreateTime) {
    size_ += computeInt64Size(3, self.createTime);
  }
  if (self.hasTransactionId) {
    size_ += computeStringSize(4, self.transactionId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendMessageResp*) parseFromData:(NSData*) data {
  return (SendMessageResp*)[[[SendMessageResp builder] mergeFromData:data] build];
}
+ (SendMessageResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResp*)[[[SendMessageResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResp*) parseFromInputStream:(NSInputStream*) input {
  return (SendMessageResp*)[[[SendMessageResp builder] mergeFromInputStream:input] build];
}
+ (SendMessageResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResp*)[[[SendMessageResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendMessageResp*)[[[SendMessageResp builder] mergeFromCodedInputStream:input] build];
}
+ (SendMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResp*)[[[SendMessageResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageRespBuilder*) builder {
  return [[SendMessageRespBuilder alloc] init];
}
+ (SendMessageRespBuilder*) builderWithPrototype:(SendMessageResp*) prototype {
  return [[SendMessageResp builder] mergeFrom:prototype];
}
- (SendMessageRespBuilder*) builder {
  return [SendMessageResp builder];
}
- (SendMessageRespBuilder*) toBuilder {
  return [SendMessageResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMessageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"messageId", self.messageId];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithLongLong:self.createTime]];
  }
  if (self.hasTransactionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"transactionId", self.transactionId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasMessageId) {
    [dictionary setObject: self.messageId forKey: @"messageId"];
  }
  if (self.hasCreateTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createTime] forKey: @"createTime"];
  }
  if (self.hasTransactionId) {
    [dictionary setObject: self.transactionId forKey: @"transactionId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SendMessageResp class]]) {
    return NO;
  }
  SendMessageResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasMessageId == otherMessage.hasMessageId &&
      (!self.hasMessageId || [self.messageId isEqual:otherMessage.messageId]) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || self.createTime == otherMessage.createTime) &&
      self.hasTransactionId == otherMessage.hasTransactionId &&
      (!self.hasTransactionId || [self.transactionId isEqual:otherMessage.transactionId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasMessageId) {
    hashCode = hashCode * 31 + [self.messageId hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createTime] hash];
  }
  if (self.hasTransactionId) {
    hashCode = hashCode * 31 + [self.transactionId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SendMessageRespBuilder()
@property (strong) SendMessageResp* resultSendMessageResp;
@end

@implementation SendMessageRespBuilder
@synthesize resultSendMessageResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendMessageResp = [[SendMessageResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendMessageResp;
}
- (SendMessageRespBuilder*) clear {
  self.resultSendMessageResp = [[SendMessageResp alloc] init];
  return self;
}
- (SendMessageRespBuilder*) clone {
  return [SendMessageResp builderWithPrototype:resultSendMessageResp];
}
- (SendMessageResp*) defaultInstance {
  return [SendMessageResp defaultInstance];
}
- (SendMessageResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendMessageResp*) buildPartial {
  SendMessageResp* returnMe = resultSendMessageResp;
  self.resultSendMessageResp = nil;
  return returnMe;
}
- (SendMessageRespBuilder*) mergeFrom:(SendMessageResp*) other {
  if (other == [SendMessageResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasMessageId) {
    [self setMessageId:other.messageId];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasTransactionId) {
    [self setTransactionId:other.transactionId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setMessageId:[input readString]];
        break;
      }
      case 24: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 34: {
        [self setTransactionId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultSendMessageResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultSendMessageResp.status;
}
- (SendMessageRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultSendMessageResp.hasStatus = YES;
  resultSendMessageResp.status = value;
  return self;
}
- (SendMessageRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (SendMessageRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultSendMessageResp.hasStatus &&
      resultSendMessageResp.status != [EIMRespHeader defaultInstance]) {
    resultSendMessageResp.status =
      [[[EIMRespHeader builderWithPrototype:resultSendMessageResp.status] mergeFrom:value] buildPartial];
  } else {
    resultSendMessageResp.status = value;
  }
  resultSendMessageResp.hasStatus = YES;
  return self;
}
- (SendMessageRespBuilder*) clearStatus {
  resultSendMessageResp.hasStatus = NO;
  resultSendMessageResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasMessageId {
  return resultSendMessageResp.hasMessageId;
}
- (NSString*) messageId {
  return resultSendMessageResp.messageId;
}
- (SendMessageRespBuilder*) setMessageId:(NSString*) value {
  resultSendMessageResp.hasMessageId = YES;
  resultSendMessageResp.messageId = value;
  return self;
}
- (SendMessageRespBuilder*) clearMessageId {
  resultSendMessageResp.hasMessageId = NO;
  resultSendMessageResp.messageId = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return resultSendMessageResp.hasCreateTime;
}
- (SInt64) createTime {
  return resultSendMessageResp.createTime;
}
- (SendMessageRespBuilder*) setCreateTime:(SInt64) value {
  resultSendMessageResp.hasCreateTime = YES;
  resultSendMessageResp.createTime = value;
  return self;
}
- (SendMessageRespBuilder*) clearCreateTime {
  resultSendMessageResp.hasCreateTime = NO;
  resultSendMessageResp.createTime = 0L;
  return self;
}
- (BOOL) hasTransactionId {
  return resultSendMessageResp.hasTransactionId;
}
- (NSString*) transactionId {
  return resultSendMessageResp.transactionId;
}
- (SendMessageRespBuilder*) setTransactionId:(NSString*) value {
  resultSendMessageResp.hasTransactionId = YES;
  resultSendMessageResp.transactionId = value;
  return self;
}
- (SendMessageRespBuilder*) clearTransactionId {
  resultSendMessageResp.hasTransactionId = NO;
  resultSendMessageResp.transactionId = @"";
  return self;
}
@end

@interface PullMessageReq ()
@property SInt64 sequenceId;
@end

@implementation PullMessageReq

- (BOOL) hasSequenceId {
  return !!hasSequenceId_;
}
- (void) setHasSequenceId:(BOOL) _value_ {
  hasSequenceId_ = !!_value_;
}
@synthesize sequenceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.sequenceId = 0L;
  }
  return self;
}
static PullMessageReq* defaultPullMessageReqInstance = nil;
+ (void) initialize {
  if (self == [PullMessageReq class]) {
    defaultPullMessageReqInstance = [[PullMessageReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPullMessageReqInstance;
}
- (instancetype) defaultInstance {
  return defaultPullMessageReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSequenceId) {
    [output writeInt64:1 value:self.sequenceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSequenceId) {
    size_ += computeInt64Size(1, self.sequenceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PullMessageReq*) parseFromData:(NSData*) data {
  return (PullMessageReq*)[[[PullMessageReq builder] mergeFromData:data] build];
}
+ (PullMessageReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PullMessageReq*)[[[PullMessageReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PullMessageReq*) parseFromInputStream:(NSInputStream*) input {
  return (PullMessageReq*)[[[PullMessageReq builder] mergeFromInputStream:input] build];
}
+ (PullMessageReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PullMessageReq*)[[[PullMessageReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PullMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PullMessageReq*)[[[PullMessageReq builder] mergeFromCodedInputStream:input] build];
}
+ (PullMessageReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PullMessageReq*)[[[PullMessageReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PullMessageReqBuilder*) builder {
  return [[PullMessageReqBuilder alloc] init];
}
+ (PullMessageReqBuilder*) builderWithPrototype:(PullMessageReq*) prototype {
  return [[PullMessageReq builder] mergeFrom:prototype];
}
- (PullMessageReqBuilder*) builder {
  return [PullMessageReq builder];
}
- (PullMessageReqBuilder*) toBuilder {
  return [PullMessageReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSequenceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sequenceId", [NSNumber numberWithLongLong:self.sequenceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSequenceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sequenceId] forKey: @"sequenceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PullMessageReq class]]) {
    return NO;
  }
  PullMessageReq *otherMessage = other;
  return
      self.hasSequenceId == otherMessage.hasSequenceId &&
      (!self.hasSequenceId || self.sequenceId == otherMessage.sequenceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSequenceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sequenceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PullMessageReqBuilder()
@property (strong) PullMessageReq* resultPullMessageReq;
@end

@implementation PullMessageReqBuilder
@synthesize resultPullMessageReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPullMessageReq = [[PullMessageReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPullMessageReq;
}
- (PullMessageReqBuilder*) clear {
  self.resultPullMessageReq = [[PullMessageReq alloc] init];
  return self;
}
- (PullMessageReqBuilder*) clone {
  return [PullMessageReq builderWithPrototype:resultPullMessageReq];
}
- (PullMessageReq*) defaultInstance {
  return [PullMessageReq defaultInstance];
}
- (PullMessageReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PullMessageReq*) buildPartial {
  PullMessageReq* returnMe = resultPullMessageReq;
  self.resultPullMessageReq = nil;
  return returnMe;
}
- (PullMessageReqBuilder*) mergeFrom:(PullMessageReq*) other {
  if (other == [PullMessageReq defaultInstance]) {
    return self;
  }
  if (other.hasSequenceId) {
    [self setSequenceId:other.sequenceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PullMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PullMessageReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSequenceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSequenceId {
  return resultPullMessageReq.hasSequenceId;
}
- (SInt64) sequenceId {
  return resultPullMessageReq.sequenceId;
}
- (PullMessageReqBuilder*) setSequenceId:(SInt64) value {
  resultPullMessageReq.hasSequenceId = YES;
  resultPullMessageReq.sequenceId = value;
  return self;
}
- (PullMessageReqBuilder*) clearSequenceId {
  resultPullMessageReq.hasSequenceId = NO;
  resultPullMessageReq.sequenceId = 0L;
  return self;
}
@end

@interface PullMessageResp ()
@property (strong) EIMRespHeader* status;
@property (strong) NSMutableArray<MessageResp*> * msgArray;
@property BOOL pullEnd;
@property SInt64 curMaxSeqId;
@end

@implementation PullMessageResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
@synthesize msgArray;
@dynamic msg;
- (BOOL) hasPullEnd {
  return !!hasPullEnd_;
}
- (void) setHasPullEnd:(BOOL) _value_ {
  hasPullEnd_ = !!_value_;
}
- (BOOL) pullEnd {
  return !!pullEnd_;
}
- (void) setPullEnd:(BOOL) _value_ {
  pullEnd_ = !!_value_;
}
- (BOOL) hasCurMaxSeqId {
  return !!hasCurMaxSeqId_;
}
- (void) setHasCurMaxSeqId:(BOOL) _value_ {
  hasCurMaxSeqId_ = !!_value_;
}
@synthesize curMaxSeqId;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.pullEnd = NO;
    self.curMaxSeqId = 0L;
  }
  return self;
}
static PullMessageResp* defaultPullMessageRespInstance = nil;
+ (void) initialize {
  if (self == [PullMessageResp class]) {
    defaultPullMessageRespInstance = [[PullMessageResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPullMessageRespInstance;
}
- (instancetype) defaultInstance {
  return defaultPullMessageRespInstance;
}
- (NSArray<MessageResp*> *)msg {
  return msgArray;
}
- (MessageResp*)msgAtIndex:(NSUInteger)index {
  return [msgArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.msgArray enumerateObjectsUsingBlock:^(MessageResp *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasPullEnd) {
    [output writeBool:3 value:self.pullEnd];
  }
  if (self.hasCurMaxSeqId) {
    [output writeInt64:4 value:self.curMaxSeqId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  [self.msgArray enumerateObjectsUsingBlock:^(MessageResp *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasPullEnd) {
    size_ += computeBoolSize(3, self.pullEnd);
  }
  if (self.hasCurMaxSeqId) {
    size_ += computeInt64Size(4, self.curMaxSeqId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PullMessageResp*) parseFromData:(NSData*) data {
  return (PullMessageResp*)[[[PullMessageResp builder] mergeFromData:data] build];
}
+ (PullMessageResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PullMessageResp*)[[[PullMessageResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PullMessageResp*) parseFromInputStream:(NSInputStream*) input {
  return (PullMessageResp*)[[[PullMessageResp builder] mergeFromInputStream:input] build];
}
+ (PullMessageResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PullMessageResp*)[[[PullMessageResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PullMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PullMessageResp*)[[[PullMessageResp builder] mergeFromCodedInputStream:input] build];
}
+ (PullMessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PullMessageResp*)[[[PullMessageResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PullMessageRespBuilder*) builder {
  return [[PullMessageRespBuilder alloc] init];
}
+ (PullMessageRespBuilder*) builderWithPrototype:(PullMessageResp*) prototype {
  return [[PullMessageResp builder] mergeFrom:prototype];
}
- (PullMessageRespBuilder*) builder {
  return [PullMessageResp builder];
}
- (PullMessageRespBuilder*) toBuilder {
  return [PullMessageResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.msgArray enumerateObjectsUsingBlock:^(MessageResp *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msg"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPullEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pullEnd", [NSNumber numberWithBool:self.pullEnd]];
  }
  if (self.hasCurMaxSeqId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"curMaxSeqId", [NSNumber numberWithLongLong:self.curMaxSeqId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  for (MessageResp* element in self.msgArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msg"];
  }
  if (self.hasPullEnd) {
    [dictionary setObject: [NSNumber numberWithBool:self.pullEnd] forKey: @"pullEnd"];
  }
  if (self.hasCurMaxSeqId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.curMaxSeqId] forKey: @"curMaxSeqId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PullMessageResp class]]) {
    return NO;
  }
  PullMessageResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      [self.msgArray isEqualToArray:otherMessage.msgArray] &&
      self.hasPullEnd == otherMessage.hasPullEnd &&
      (!self.hasPullEnd || self.pullEnd == otherMessage.pullEnd) &&
      self.hasCurMaxSeqId == otherMessage.hasCurMaxSeqId &&
      (!self.hasCurMaxSeqId || self.curMaxSeqId == otherMessage.curMaxSeqId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  [self.msgArray enumerateObjectsUsingBlock:^(MessageResp *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPullEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.pullEnd] hash];
  }
  if (self.hasCurMaxSeqId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.curMaxSeqId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PullMessageRespBuilder()
@property (strong) PullMessageResp* resultPullMessageResp;
@end

@implementation PullMessageRespBuilder
@synthesize resultPullMessageResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPullMessageResp = [[PullMessageResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPullMessageResp;
}
- (PullMessageRespBuilder*) clear {
  self.resultPullMessageResp = [[PullMessageResp alloc] init];
  return self;
}
- (PullMessageRespBuilder*) clone {
  return [PullMessageResp builderWithPrototype:resultPullMessageResp];
}
- (PullMessageResp*) defaultInstance {
  return [PullMessageResp defaultInstance];
}
- (PullMessageResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PullMessageResp*) buildPartial {
  PullMessageResp* returnMe = resultPullMessageResp;
  self.resultPullMessageResp = nil;
  return returnMe;
}
- (PullMessageRespBuilder*) mergeFrom:(PullMessageResp*) other {
  if (other == [PullMessageResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.msgArray.count > 0) {
    if (resultPullMessageResp.msgArray == nil) {
      resultPullMessageResp.msgArray = [[NSMutableArray alloc] initWithArray:other.msgArray];
    } else {
      [resultPullMessageResp.msgArray addObjectsFromArray:other.msgArray];
    }
  }
  if (other.hasPullEnd) {
    [self setPullEnd:other.pullEnd];
  }
  if (other.hasCurMaxSeqId) {
    [self setCurMaxSeqId:other.curMaxSeqId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PullMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PullMessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MessageRespBuilder* subBuilder = [MessageResp builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsg:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setPullEnd:[input readBool]];
        break;
      }
      case 32: {
        [self setCurMaxSeqId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultPullMessageResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultPullMessageResp.status;
}
- (PullMessageRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultPullMessageResp.hasStatus = YES;
  resultPullMessageResp.status = value;
  return self;
}
- (PullMessageRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (PullMessageRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultPullMessageResp.hasStatus &&
      resultPullMessageResp.status != [EIMRespHeader defaultInstance]) {
    resultPullMessageResp.status =
      [[[EIMRespHeader builderWithPrototype:resultPullMessageResp.status] mergeFrom:value] buildPartial];
  } else {
    resultPullMessageResp.status = value;
  }
  resultPullMessageResp.hasStatus = YES;
  return self;
}
- (PullMessageRespBuilder*) clearStatus {
  resultPullMessageResp.hasStatus = NO;
  resultPullMessageResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (NSMutableArray<MessageResp*> *)msg {
  return resultPullMessageResp.msgArray;
}
- (MessageResp*)msgAtIndex:(NSUInteger)index {
  return [resultPullMessageResp msgAtIndex:index];
}
- (PullMessageRespBuilder *)addMsg:(MessageResp*)value {
  if (resultPullMessageResp.msgArray == nil) {
    resultPullMessageResp.msgArray = [[NSMutableArray alloc]init];
  }
  [resultPullMessageResp.msgArray addObject:value];
  return self;
}
- (PullMessageRespBuilder *)setMsgArray:(NSArray<MessageResp*> *)array {
  resultPullMessageResp.msgArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PullMessageRespBuilder *)clearMsg {
  resultPullMessageResp.msgArray = nil;
  return self;
}
- (BOOL) hasPullEnd {
  return resultPullMessageResp.hasPullEnd;
}
- (BOOL) pullEnd {
  return resultPullMessageResp.pullEnd;
}
- (PullMessageRespBuilder*) setPullEnd:(BOOL) value {
  resultPullMessageResp.hasPullEnd = YES;
  resultPullMessageResp.pullEnd = value;
  return self;
}
- (PullMessageRespBuilder*) clearPullEnd {
  resultPullMessageResp.hasPullEnd = NO;
  resultPullMessageResp.pullEnd = NO;
  return self;
}
- (BOOL) hasCurMaxSeqId {
  return resultPullMessageResp.hasCurMaxSeqId;
}
- (SInt64) curMaxSeqId {
  return resultPullMessageResp.curMaxSeqId;
}
- (PullMessageRespBuilder*) setCurMaxSeqId:(SInt64) value {
  resultPullMessageResp.hasCurMaxSeqId = YES;
  resultPullMessageResp.curMaxSeqId = value;
  return self;
}
- (PullMessageRespBuilder*) clearCurMaxSeqId {
  resultPullMessageResp.hasCurMaxSeqId = NO;
  resultPullMessageResp.curMaxSeqId = 0L;
  return self;
}
@end

@interface MessageResp ()
@property (strong) NSString* messageId;
@property (strong) NSString* type;
@property SInt64 sequenceId;
@property SInt64 sender;
@property SInt64 groupId;
@property (strong) NSString* content;
@property SInt64 createTime;
@property SInt64 receiver;
@property (strong) NSString* at;
@property (strong) NSString* replyInfo;
@property (strong) NSString* extra;
@end

@implementation MessageResp

- (BOOL) hasMessageId {
  return !!hasMessageId_;
}
- (void) setHasMessageId:(BOOL) _value_ {
  hasMessageId_ = !!_value_;
}
@synthesize messageId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasSequenceId {
  return !!hasSequenceId_;
}
- (void) setHasSequenceId:(BOOL) _value_ {
  hasSequenceId_ = !!_value_;
}
@synthesize sequenceId;
- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) _value_ {
  hasSender_ = !!_value_;
}
@synthesize sender;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) _value_ {
  hasCreateTime_ = !!_value_;
}
@synthesize createTime;
- (BOOL) hasReceiver {
  return !!hasReceiver_;
}
- (void) setHasReceiver:(BOOL) _value_ {
  hasReceiver_ = !!_value_;
}
@synthesize receiver;
- (BOOL) hasAt {
  return !!hasAt_;
}
- (void) setHasAt:(BOOL) _value_ {
  hasAt_ = !!_value_;
}
@synthesize at;
- (BOOL) hasReplyInfo {
  return !!hasReplyInfo_;
}
- (void) setHasReplyInfo:(BOOL) _value_ {
  hasReplyInfo_ = !!_value_;
}
@synthesize replyInfo;
- (BOOL) hasExtra {
  return !!hasExtra_;
}
- (void) setHasExtra:(BOOL) _value_ {
  hasExtra_ = !!_value_;
}
@synthesize extra;
- (instancetype) init {
  if ((self = [super init])) {
    self.messageId = @"";
    self.type = @"";
    self.sequenceId = 0L;
    self.sender = 0L;
    self.groupId = 0L;
    self.content = @"";
    self.createTime = 0L;
    self.receiver = 0L;
    self.at = @"";
    self.replyInfo = @"";
    self.extra = @"";
  }
  return self;
}
static MessageResp* defaultMessageRespInstance = nil;
+ (void) initialize {
  if (self == [MessageResp class]) {
    defaultMessageRespInstance = [[MessageResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageRespInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMessageId) {
    [output writeString:1 value:self.messageId];
  }
  if (self.hasType) {
    [output writeString:2 value:self.type];
  }
  if (self.hasSequenceId) {
    [output writeInt64:3 value:self.sequenceId];
  }
  if (self.hasSender) {
    [output writeInt64:4 value:self.sender];
  }
  if (self.hasGroupId) {
    [output writeInt64:5 value:self.groupId];
  }
  if (self.hasContent) {
    [output writeString:6 value:self.content];
  }
  if (self.hasCreateTime) {
    [output writeInt64:7 value:self.createTime];
  }
  if (self.hasReceiver) {
    [output writeInt64:8 value:self.receiver];
  }
  if (self.hasAt) {
    [output writeString:9 value:self.at];
  }
  if (self.hasReplyInfo) {
    [output writeString:10 value:self.replyInfo];
  }
  if (self.hasExtra) {
    [output writeString:11 value:self.extra];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMessageId) {
    size_ += computeStringSize(1, self.messageId);
  }
  if (self.hasType) {
    size_ += computeStringSize(2, self.type);
  }
  if (self.hasSequenceId) {
    size_ += computeInt64Size(3, self.sequenceId);
  }
  if (self.hasSender) {
    size_ += computeInt64Size(4, self.sender);
  }
  if (self.hasGroupId) {
    size_ += computeInt64Size(5, self.groupId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(6, self.content);
  }
  if (self.hasCreateTime) {
    size_ += computeInt64Size(7, self.createTime);
  }
  if (self.hasReceiver) {
    size_ += computeInt64Size(8, self.receiver);
  }
  if (self.hasAt) {
    size_ += computeStringSize(9, self.at);
  }
  if (self.hasReplyInfo) {
    size_ += computeStringSize(10, self.replyInfo);
  }
  if (self.hasExtra) {
    size_ += computeStringSize(11, self.extra);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageResp*) parseFromData:(NSData*) data {
  return (MessageResp*)[[[MessageResp builder] mergeFromData:data] build];
}
+ (MessageResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageResp*)[[[MessageResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageResp*) parseFromInputStream:(NSInputStream*) input {
  return (MessageResp*)[[[MessageResp builder] mergeFromInputStream:input] build];
}
+ (MessageResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageResp*)[[[MessageResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageResp*)[[[MessageResp builder] mergeFromCodedInputStream:input] build];
}
+ (MessageResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageResp*)[[[MessageResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageRespBuilder*) builder {
  return [[MessageRespBuilder alloc] init];
}
+ (MessageRespBuilder*) builderWithPrototype:(MessageResp*) prototype {
  return [[MessageResp builder] mergeFrom:prototype];
}
- (MessageRespBuilder*) builder {
  return [MessageResp builder];
}
- (MessageRespBuilder*) toBuilder {
  return [MessageResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMessageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"messageId", self.messageId];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
  }
  if (self.hasSequenceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sequenceId", [NSNumber numberWithLongLong:self.sequenceId]];
  }
  if (self.hasSender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sender", [NSNumber numberWithLongLong:self.sender]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithLongLong:self.createTime]];
  }
  if (self.hasReceiver) {
    [output appendFormat:@"%@%@: %@\n", indent, @"receiver", [NSNumber numberWithLongLong:self.receiver]];
  }
  if (self.hasAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"at", self.at];
  }
  if (self.hasReplyInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyInfo", self.replyInfo];
  }
  if (self.hasExtra) {
    [output appendFormat:@"%@%@: %@\n", indent, @"extra", self.extra];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMessageId) {
    [dictionary setObject: self.messageId forKey: @"messageId"];
  }
  if (self.hasType) {
    [dictionary setObject: self.type forKey: @"type"];
  }
  if (self.hasSequenceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sequenceId] forKey: @"sequenceId"];
  }
  if (self.hasSender) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sender] forKey: @"sender"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasCreateTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createTime] forKey: @"createTime"];
  }
  if (self.hasReceiver) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.receiver] forKey: @"receiver"];
  }
  if (self.hasAt) {
    [dictionary setObject: self.at forKey: @"at"];
  }
  if (self.hasReplyInfo) {
    [dictionary setObject: self.replyInfo forKey: @"replyInfo"];
  }
  if (self.hasExtra) {
    [dictionary setObject: self.extra forKey: @"extra"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageResp class]]) {
    return NO;
  }
  MessageResp *otherMessage = other;
  return
      self.hasMessageId == otherMessage.hasMessageId &&
      (!self.hasMessageId || [self.messageId isEqual:otherMessage.messageId]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || [self.type isEqual:otherMessage.type]) &&
      self.hasSequenceId == otherMessage.hasSequenceId &&
      (!self.hasSequenceId || self.sequenceId == otherMessage.sequenceId) &&
      self.hasSender == otherMessage.hasSender &&
      (!self.hasSender || self.sender == otherMessage.sender) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || self.createTime == otherMessage.createTime) &&
      self.hasReceiver == otherMessage.hasReceiver &&
      (!self.hasReceiver || self.receiver == otherMessage.receiver) &&
      self.hasAt == otherMessage.hasAt &&
      (!self.hasAt || [self.at isEqual:otherMessage.at]) &&
      self.hasReplyInfo == otherMessage.hasReplyInfo &&
      (!self.hasReplyInfo || [self.replyInfo isEqual:otherMessage.replyInfo]) &&
      self.hasExtra == otherMessage.hasExtra &&
      (!self.hasExtra || [self.extra isEqual:otherMessage.extra]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMessageId) {
    hashCode = hashCode * 31 + [self.messageId hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [self.type hash];
  }
  if (self.hasSequenceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sequenceId] hash];
  }
  if (self.hasSender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sender] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createTime] hash];
  }
  if (self.hasReceiver) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.receiver] hash];
  }
  if (self.hasAt) {
    hashCode = hashCode * 31 + [self.at hash];
  }
  if (self.hasReplyInfo) {
    hashCode = hashCode * 31 + [self.replyInfo hash];
  }
  if (self.hasExtra) {
    hashCode = hashCode * 31 + [self.extra hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageRespBuilder()
@property (strong) MessageResp* resultMessageResp;
@end

@implementation MessageRespBuilder
@synthesize resultMessageResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessageResp = [[MessageResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessageResp;
}
- (MessageRespBuilder*) clear {
  self.resultMessageResp = [[MessageResp alloc] init];
  return self;
}
- (MessageRespBuilder*) clone {
  return [MessageResp builderWithPrototype:resultMessageResp];
}
- (MessageResp*) defaultInstance {
  return [MessageResp defaultInstance];
}
- (MessageResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageResp*) buildPartial {
  MessageResp* returnMe = resultMessageResp;
  self.resultMessageResp = nil;
  return returnMe;
}
- (MessageRespBuilder*) mergeFrom:(MessageResp*) other {
  if (other == [MessageResp defaultInstance]) {
    return self;
  }
  if (other.hasMessageId) {
    [self setMessageId:other.messageId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSequenceId) {
    [self setSequenceId:other.sequenceId];
  }
  if (other.hasSender) {
    [self setSender:other.sender];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasReceiver) {
    [self setReceiver:other.receiver];
  }
  if (other.hasAt) {
    [self setAt:other.at];
  }
  if (other.hasReplyInfo) {
    [self setReplyInfo:other.replyInfo];
  }
  if (other.hasExtra) {
    [self setExtra:other.extra];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMessageId:[input readString]];
        break;
      }
      case 18: {
        [self setType:[input readString]];
        break;
      }
      case 24: {
        [self setSequenceId:[input readInt64]];
        break;
      }
      case 32: {
        [self setSender:[input readInt64]];
        break;
      }
      case 40: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 50: {
        [self setContent:[input readString]];
        break;
      }
      case 56: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 64: {
        [self setReceiver:[input readInt64]];
        break;
      }
      case 74: {
        [self setAt:[input readString]];
        break;
      }
      case 82: {
        [self setReplyInfo:[input readString]];
        break;
      }
      case 90: {
        [self setExtra:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMessageId {
  return resultMessageResp.hasMessageId;
}
- (NSString*) messageId {
  return resultMessageResp.messageId;
}
- (MessageRespBuilder*) setMessageId:(NSString*) value {
  resultMessageResp.hasMessageId = YES;
  resultMessageResp.messageId = value;
  return self;
}
- (MessageRespBuilder*) clearMessageId {
  resultMessageResp.hasMessageId = NO;
  resultMessageResp.messageId = @"";
  return self;
}
- (BOOL) hasType {
  return resultMessageResp.hasType;
}
- (NSString*) type {
  return resultMessageResp.type;
}
- (MessageRespBuilder*) setType:(NSString*) value {
  resultMessageResp.hasType = YES;
  resultMessageResp.type = value;
  return self;
}
- (MessageRespBuilder*) clearType {
  resultMessageResp.hasType = NO;
  resultMessageResp.type = @"";
  return self;
}
- (BOOL) hasSequenceId {
  return resultMessageResp.hasSequenceId;
}
- (SInt64) sequenceId {
  return resultMessageResp.sequenceId;
}
- (MessageRespBuilder*) setSequenceId:(SInt64) value {
  resultMessageResp.hasSequenceId = YES;
  resultMessageResp.sequenceId = value;
  return self;
}
- (MessageRespBuilder*) clearSequenceId {
  resultMessageResp.hasSequenceId = NO;
  resultMessageResp.sequenceId = 0L;
  return self;
}
- (BOOL) hasSender {
  return resultMessageResp.hasSender;
}
- (SInt64) sender {
  return resultMessageResp.sender;
}
- (MessageRespBuilder*) setSender:(SInt64) value {
  resultMessageResp.hasSender = YES;
  resultMessageResp.sender = value;
  return self;
}
- (MessageRespBuilder*) clearSender {
  resultMessageResp.hasSender = NO;
  resultMessageResp.sender = 0L;
  return self;
}
- (BOOL) hasGroupId {
  return resultMessageResp.hasGroupId;
}
- (SInt64) groupId {
  return resultMessageResp.groupId;
}
- (MessageRespBuilder*) setGroupId:(SInt64) value {
  resultMessageResp.hasGroupId = YES;
  resultMessageResp.groupId = value;
  return self;
}
- (MessageRespBuilder*) clearGroupId {
  resultMessageResp.hasGroupId = NO;
  resultMessageResp.groupId = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultMessageResp.hasContent;
}
- (NSString*) content {
  return resultMessageResp.content;
}
- (MessageRespBuilder*) setContent:(NSString*) value {
  resultMessageResp.hasContent = YES;
  resultMessageResp.content = value;
  return self;
}
- (MessageRespBuilder*) clearContent {
  resultMessageResp.hasContent = NO;
  resultMessageResp.content = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return resultMessageResp.hasCreateTime;
}
- (SInt64) createTime {
  return resultMessageResp.createTime;
}
- (MessageRespBuilder*) setCreateTime:(SInt64) value {
  resultMessageResp.hasCreateTime = YES;
  resultMessageResp.createTime = value;
  return self;
}
- (MessageRespBuilder*) clearCreateTime {
  resultMessageResp.hasCreateTime = NO;
  resultMessageResp.createTime = 0L;
  return self;
}
- (BOOL) hasReceiver {
  return resultMessageResp.hasReceiver;
}
- (SInt64) receiver {
  return resultMessageResp.receiver;
}
- (MessageRespBuilder*) setReceiver:(SInt64) value {
  resultMessageResp.hasReceiver = YES;
  resultMessageResp.receiver = value;
  return self;
}
- (MessageRespBuilder*) clearReceiver {
  resultMessageResp.hasReceiver = NO;
  resultMessageResp.receiver = 0L;
  return self;
}
- (BOOL) hasAt {
  return resultMessageResp.hasAt;
}
- (NSString*) at {
  return resultMessageResp.at;
}
- (MessageRespBuilder*) setAt:(NSString*) value {
  resultMessageResp.hasAt = YES;
  resultMessageResp.at = value;
  return self;
}
- (MessageRespBuilder*) clearAt {
  resultMessageResp.hasAt = NO;
  resultMessageResp.at = @"";
  return self;
}
- (BOOL) hasReplyInfo {
  return resultMessageResp.hasReplyInfo;
}
- (NSString*) replyInfo {
  return resultMessageResp.replyInfo;
}
- (MessageRespBuilder*) setReplyInfo:(NSString*) value {
  resultMessageResp.hasReplyInfo = YES;
  resultMessageResp.replyInfo = value;
  return self;
}
- (MessageRespBuilder*) clearReplyInfo {
  resultMessageResp.hasReplyInfo = NO;
  resultMessageResp.replyInfo = @"";
  return self;
}
- (BOOL) hasExtra {
  return resultMessageResp.hasExtra;
}
- (NSString*) extra {
  return resultMessageResp.extra;
}
- (MessageRespBuilder*) setExtra:(NSString*) value {
  resultMessageResp.hasExtra = YES;
  resultMessageResp.extra = value;
  return self;
}
- (MessageRespBuilder*) clearExtra {
  resultMessageResp.hasExtra = NO;
  resultMessageResp.extra = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
