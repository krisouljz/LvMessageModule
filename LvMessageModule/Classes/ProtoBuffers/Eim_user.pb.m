// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Eim_user.pb.h"
// @@protoc_insertion_point(imports)

@implementation EimUserRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EimUserRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [EimMessageRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CreateNotificationReq ()
@property BOOL notification;
@property SInt64 friendId;
@end

@implementation CreateNotificationReq

- (BOOL) hasNotification {
  return !!hasNotification_;
}
- (void) setHasNotification:(BOOL) _value_ {
  hasNotification_ = !!_value_;
}
- (BOOL) notification {
  return !!notification_;
}
- (void) setNotification:(BOOL) _value_ {
  notification_ = !!_value_;
}
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (instancetype) init {
  if ((self = [super init])) {
    self.notification = NO;
    self.friendId = 0L;
  }
  return self;
}
static CreateNotificationReq* defaultCreateNotificationReqInstance = nil;
+ (void) initialize {
  if (self == [CreateNotificationReq class]) {
    defaultCreateNotificationReqInstance = [[CreateNotificationReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateNotificationReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateNotificationReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNotification) {
    [output writeBool:1 value:self.notification];
  }
  if (self.hasFriendId) {
    [output writeInt64:2 value:self.friendId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNotification) {
    size_ += computeBoolSize(1, self.notification);
  }
  if (self.hasFriendId) {
    size_ += computeInt64Size(2, self.friendId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateNotificationReq*) parseFromData:(NSData*) data {
  return (CreateNotificationReq*)[[[CreateNotificationReq builder] mergeFromData:data] build];
}
+ (CreateNotificationReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateNotificationReq*)[[[CreateNotificationReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateNotificationReq*) parseFromInputStream:(NSInputStream*) input {
  return (CreateNotificationReq*)[[[CreateNotificationReq builder] mergeFromInputStream:input] build];
}
+ (CreateNotificationReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateNotificationReq*)[[[CreateNotificationReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateNotificationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateNotificationReq*)[[[CreateNotificationReq builder] mergeFromCodedInputStream:input] build];
}
+ (CreateNotificationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateNotificationReq*)[[[CreateNotificationReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateNotificationReqBuilder*) builder {
  return [[CreateNotificationReqBuilder alloc] init];
}
+ (CreateNotificationReqBuilder*) builderWithPrototype:(CreateNotificationReq*) prototype {
  return [[CreateNotificationReq builder] mergeFrom:prototype];
}
- (CreateNotificationReqBuilder*) builder {
  return [CreateNotificationReq builder];
}
- (CreateNotificationReqBuilder*) toBuilder {
  return [CreateNotificationReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNotification) {
    [output appendFormat:@"%@%@: %@\n", indent, @"notification", [NSNumber numberWithBool:self.notification]];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", [NSNumber numberWithLongLong:self.friendId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNotification) {
    [dictionary setObject: [NSNumber numberWithBool:self.notification] forKey: @"notification"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.friendId] forKey: @"friendId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateNotificationReq class]]) {
    return NO;
  }
  CreateNotificationReq *otherMessage = other;
  return
      self.hasNotification == otherMessage.hasNotification &&
      (!self.hasNotification || self.notification == otherMessage.notification) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || self.friendId == otherMessage.friendId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNotification) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.notification] hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.friendId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateNotificationReqBuilder()
@property (strong) CreateNotificationReq* resultCreateNotificationReq;
@end

@implementation CreateNotificationReqBuilder
@synthesize resultCreateNotificationReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateNotificationReq = [[CreateNotificationReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateNotificationReq;
}
- (CreateNotificationReqBuilder*) clear {
  self.resultCreateNotificationReq = [[CreateNotificationReq alloc] init];
  return self;
}
- (CreateNotificationReqBuilder*) clone {
  return [CreateNotificationReq builderWithPrototype:resultCreateNotificationReq];
}
- (CreateNotificationReq*) defaultInstance {
  return [CreateNotificationReq defaultInstance];
}
- (CreateNotificationReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateNotificationReq*) buildPartial {
  CreateNotificationReq* returnMe = resultCreateNotificationReq;
  self.resultCreateNotificationReq = nil;
  return returnMe;
}
- (CreateNotificationReqBuilder*) mergeFrom:(CreateNotificationReq*) other {
  if (other == [CreateNotificationReq defaultInstance]) {
    return self;
  }
  if (other.hasNotification) {
    [self setNotification:other.notification];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateNotificationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateNotificationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNotification:[input readBool]];
        break;
      }
      case 16: {
        [self setFriendId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasNotification {
  return resultCreateNotificationReq.hasNotification;
}
- (BOOL) notification {
  return resultCreateNotificationReq.notification;
}
- (CreateNotificationReqBuilder*) setNotification:(BOOL) value {
  resultCreateNotificationReq.hasNotification = YES;
  resultCreateNotificationReq.notification = value;
  return self;
}
- (CreateNotificationReqBuilder*) clearNotification {
  resultCreateNotificationReq.hasNotification = NO;
  resultCreateNotificationReq.notification = NO;
  return self;
}
- (BOOL) hasFriendId {
  return resultCreateNotificationReq.hasFriendId;
}
- (SInt64) friendId {
  return resultCreateNotificationReq.friendId;
}
- (CreateNotificationReqBuilder*) setFriendId:(SInt64) value {
  resultCreateNotificationReq.hasFriendId = YES;
  resultCreateNotificationReq.friendId = value;
  return self;
}
- (CreateNotificationReqBuilder*) clearFriendId {
  resultCreateNotificationReq.hasFriendId = NO;
  resultCreateNotificationReq.friendId = 0L;
  return self;
}
@end

@interface CreateNotificationResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation CreateNotificationResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static CreateNotificationResp* defaultCreateNotificationRespInstance = nil;
+ (void) initialize {
  if (self == [CreateNotificationResp class]) {
    defaultCreateNotificationRespInstance = [[CreateNotificationResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateNotificationRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateNotificationRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateNotificationResp*) parseFromData:(NSData*) data {
  return (CreateNotificationResp*)[[[CreateNotificationResp builder] mergeFromData:data] build];
}
+ (CreateNotificationResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateNotificationResp*)[[[CreateNotificationResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateNotificationResp*) parseFromInputStream:(NSInputStream*) input {
  return (CreateNotificationResp*)[[[CreateNotificationResp builder] mergeFromInputStream:input] build];
}
+ (CreateNotificationResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateNotificationResp*)[[[CreateNotificationResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateNotificationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateNotificationResp*)[[[CreateNotificationResp builder] mergeFromCodedInputStream:input] build];
}
+ (CreateNotificationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateNotificationResp*)[[[CreateNotificationResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateNotificationRespBuilder*) builder {
  return [[CreateNotificationRespBuilder alloc] init];
}
+ (CreateNotificationRespBuilder*) builderWithPrototype:(CreateNotificationResp*) prototype {
  return [[CreateNotificationResp builder] mergeFrom:prototype];
}
- (CreateNotificationRespBuilder*) builder {
  return [CreateNotificationResp builder];
}
- (CreateNotificationRespBuilder*) toBuilder {
  return [CreateNotificationResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateNotificationResp class]]) {
    return NO;
  }
  CreateNotificationResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateNotificationRespBuilder()
@property (strong) CreateNotificationResp* resultCreateNotificationResp;
@end

@implementation CreateNotificationRespBuilder
@synthesize resultCreateNotificationResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateNotificationResp = [[CreateNotificationResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateNotificationResp;
}
- (CreateNotificationRespBuilder*) clear {
  self.resultCreateNotificationResp = [[CreateNotificationResp alloc] init];
  return self;
}
- (CreateNotificationRespBuilder*) clone {
  return [CreateNotificationResp builderWithPrototype:resultCreateNotificationResp];
}
- (CreateNotificationResp*) defaultInstance {
  return [CreateNotificationResp defaultInstance];
}
- (CreateNotificationResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateNotificationResp*) buildPartial {
  CreateNotificationResp* returnMe = resultCreateNotificationResp;
  self.resultCreateNotificationResp = nil;
  return returnMe;
}
- (CreateNotificationRespBuilder*) mergeFrom:(CreateNotificationResp*) other {
  if (other == [CreateNotificationResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateNotificationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateNotificationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultCreateNotificationResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultCreateNotificationResp.status;
}
- (CreateNotificationRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultCreateNotificationResp.hasStatus = YES;
  resultCreateNotificationResp.status = value;
  return self;
}
- (CreateNotificationRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (CreateNotificationRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultCreateNotificationResp.hasStatus &&
      resultCreateNotificationResp.status != [EIMRespHeader defaultInstance]) {
    resultCreateNotificationResp.status =
      [[[EIMRespHeader builderWithPrototype:resultCreateNotificationResp.status] mergeFrom:value] buildPartial];
  } else {
    resultCreateNotificationResp.status = value;
  }
  resultCreateNotificationResp.hasStatus = YES;
  return self;
}
- (CreateNotificationRespBuilder*) clearStatus {
  resultCreateNotificationResp.hasStatus = NO;
  resultCreateNotificationResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end

@interface CreateBlackReq ()
@property SInt64 friendId;
@property (strong) NSString* reason;
@end

@implementation CreateBlackReq

- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasReason {
  return !!hasReason_;
}
- (void) setHasReason:(BOOL) _value_ {
  hasReason_ = !!_value_;
}
@synthesize reason;
- (instancetype) init {
  if ((self = [super init])) {
    self.friendId = 0L;
    self.reason = @"";
  }
  return self;
}
static CreateBlackReq* defaultCreateBlackReqInstance = nil;
+ (void) initialize {
  if (self == [CreateBlackReq class]) {
    defaultCreateBlackReqInstance = [[CreateBlackReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateBlackReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateBlackReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFriendId) {
    [output writeInt64:1 value:self.friendId];
  }
  if (self.hasReason) {
    [output writeString:2 value:self.reason];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFriendId) {
    size_ += computeInt64Size(1, self.friendId);
  }
  if (self.hasReason) {
    size_ += computeStringSize(2, self.reason);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateBlackReq*) parseFromData:(NSData*) data {
  return (CreateBlackReq*)[[[CreateBlackReq builder] mergeFromData:data] build];
}
+ (CreateBlackReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateBlackReq*)[[[CreateBlackReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateBlackReq*) parseFromInputStream:(NSInputStream*) input {
  return (CreateBlackReq*)[[[CreateBlackReq builder] mergeFromInputStream:input] build];
}
+ (CreateBlackReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateBlackReq*)[[[CreateBlackReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateBlackReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateBlackReq*)[[[CreateBlackReq builder] mergeFromCodedInputStream:input] build];
}
+ (CreateBlackReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateBlackReq*)[[[CreateBlackReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateBlackReqBuilder*) builder {
  return [[CreateBlackReqBuilder alloc] init];
}
+ (CreateBlackReqBuilder*) builderWithPrototype:(CreateBlackReq*) prototype {
  return [[CreateBlackReq builder] mergeFrom:prototype];
}
- (CreateBlackReqBuilder*) builder {
  return [CreateBlackReq builder];
}
- (CreateBlackReqBuilder*) toBuilder {
  return [CreateBlackReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", [NSNumber numberWithLongLong:self.friendId]];
  }
  if (self.hasReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reason", self.reason];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFriendId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.friendId] forKey: @"friendId"];
  }
  if (self.hasReason) {
    [dictionary setObject: self.reason forKey: @"reason"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateBlackReq class]]) {
    return NO;
  }
  CreateBlackReq *otherMessage = other;
  return
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || self.friendId == otherMessage.friendId) &&
      self.hasReason == otherMessage.hasReason &&
      (!self.hasReason || [self.reason isEqual:otherMessage.reason]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.friendId] hash];
  }
  if (self.hasReason) {
    hashCode = hashCode * 31 + [self.reason hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateBlackReqBuilder()
@property (strong) CreateBlackReq* resultCreateBlackReq;
@end

@implementation CreateBlackReqBuilder
@synthesize resultCreateBlackReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateBlackReq = [[CreateBlackReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateBlackReq;
}
- (CreateBlackReqBuilder*) clear {
  self.resultCreateBlackReq = [[CreateBlackReq alloc] init];
  return self;
}
- (CreateBlackReqBuilder*) clone {
  return [CreateBlackReq builderWithPrototype:resultCreateBlackReq];
}
- (CreateBlackReq*) defaultInstance {
  return [CreateBlackReq defaultInstance];
}
- (CreateBlackReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateBlackReq*) buildPartial {
  CreateBlackReq* returnMe = resultCreateBlackReq;
  self.resultCreateBlackReq = nil;
  return returnMe;
}
- (CreateBlackReqBuilder*) mergeFrom:(CreateBlackReq*) other {
  if (other == [CreateBlackReq defaultInstance]) {
    return self;
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasReason) {
    [self setReason:other.reason];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateBlackReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateBlackReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFriendId:[input readInt64]];
        break;
      }
      case 18: {
        [self setReason:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFriendId {
  return resultCreateBlackReq.hasFriendId;
}
- (SInt64) friendId {
  return resultCreateBlackReq.friendId;
}
- (CreateBlackReqBuilder*) setFriendId:(SInt64) value {
  resultCreateBlackReq.hasFriendId = YES;
  resultCreateBlackReq.friendId = value;
  return self;
}
- (CreateBlackReqBuilder*) clearFriendId {
  resultCreateBlackReq.hasFriendId = NO;
  resultCreateBlackReq.friendId = 0L;
  return self;
}
- (BOOL) hasReason {
  return resultCreateBlackReq.hasReason;
}
- (NSString*) reason {
  return resultCreateBlackReq.reason;
}
- (CreateBlackReqBuilder*) setReason:(NSString*) value {
  resultCreateBlackReq.hasReason = YES;
  resultCreateBlackReq.reason = value;
  return self;
}
- (CreateBlackReqBuilder*) clearReason {
  resultCreateBlackReq.hasReason = NO;
  resultCreateBlackReq.reason = @"";
  return self;
}
@end

@interface CreateBlackResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation CreateBlackResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static CreateBlackResp* defaultCreateBlackRespInstance = nil;
+ (void) initialize {
  if (self == [CreateBlackResp class]) {
    defaultCreateBlackRespInstance = [[CreateBlackResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateBlackRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateBlackRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateBlackResp*) parseFromData:(NSData*) data {
  return (CreateBlackResp*)[[[CreateBlackResp builder] mergeFromData:data] build];
}
+ (CreateBlackResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateBlackResp*)[[[CreateBlackResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateBlackResp*) parseFromInputStream:(NSInputStream*) input {
  return (CreateBlackResp*)[[[CreateBlackResp builder] mergeFromInputStream:input] build];
}
+ (CreateBlackResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateBlackResp*)[[[CreateBlackResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateBlackResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateBlackResp*)[[[CreateBlackResp builder] mergeFromCodedInputStream:input] build];
}
+ (CreateBlackResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateBlackResp*)[[[CreateBlackResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateBlackRespBuilder*) builder {
  return [[CreateBlackRespBuilder alloc] init];
}
+ (CreateBlackRespBuilder*) builderWithPrototype:(CreateBlackResp*) prototype {
  return [[CreateBlackResp builder] mergeFrom:prototype];
}
- (CreateBlackRespBuilder*) builder {
  return [CreateBlackResp builder];
}
- (CreateBlackRespBuilder*) toBuilder {
  return [CreateBlackResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateBlackResp class]]) {
    return NO;
  }
  CreateBlackResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateBlackRespBuilder()
@property (strong) CreateBlackResp* resultCreateBlackResp;
@end

@implementation CreateBlackRespBuilder
@synthesize resultCreateBlackResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateBlackResp = [[CreateBlackResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateBlackResp;
}
- (CreateBlackRespBuilder*) clear {
  self.resultCreateBlackResp = [[CreateBlackResp alloc] init];
  return self;
}
- (CreateBlackRespBuilder*) clone {
  return [CreateBlackResp builderWithPrototype:resultCreateBlackResp];
}
- (CreateBlackResp*) defaultInstance {
  return [CreateBlackResp defaultInstance];
}
- (CreateBlackResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateBlackResp*) buildPartial {
  CreateBlackResp* returnMe = resultCreateBlackResp;
  self.resultCreateBlackResp = nil;
  return returnMe;
}
- (CreateBlackRespBuilder*) mergeFrom:(CreateBlackResp*) other {
  if (other == [CreateBlackResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateBlackRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateBlackRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultCreateBlackResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultCreateBlackResp.status;
}
- (CreateBlackRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultCreateBlackResp.hasStatus = YES;
  resultCreateBlackResp.status = value;
  return self;
}
- (CreateBlackRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (CreateBlackRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultCreateBlackResp.hasStatus &&
      resultCreateBlackResp.status != [EIMRespHeader defaultInstance]) {
    resultCreateBlackResp.status =
      [[[EIMRespHeader builderWithPrototype:resultCreateBlackResp.status] mergeFrom:value] buildPartial];
  } else {
    resultCreateBlackResp.status = value;
  }
  resultCreateBlackResp.hasStatus = YES;
  return self;
}
- (CreateBlackRespBuilder*) clearStatus {
  resultCreateBlackResp.hasStatus = NO;
  resultCreateBlackResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end

@interface AccountInfo ()
@property SInt64 accountId;
@property (strong) NSString* nickName;
@property (strong) NSString* photoUrl;
@end

@implementation AccountInfo

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) _value_ {
  hasAccountId_ = !!_value_;
}
@synthesize accountId;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) _value_ {
  hasNickName_ = !!_value_;
}
@synthesize nickName;
- (BOOL) hasPhotoUrl {
  return !!hasPhotoUrl_;
}
- (void) setHasPhotoUrl:(BOOL) _value_ {
  hasPhotoUrl_ = !!_value_;
}
@synthesize photoUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.accountId = 0L;
    self.nickName = @"";
    self.photoUrl = @"";
  }
  return self;
}
static AccountInfo* defaultAccountInfoInstance = nil;
+ (void) initialize {
  if (self == [AccountInfo class]) {
    defaultAccountInfoInstance = [[AccountInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAccountInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultAccountInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeInt64:1 value:self.accountId];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  if (self.hasPhotoUrl) {
    [output writeString:3 value:self.photoUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeInt64Size(1, self.accountId);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(2, self.nickName);
  }
  if (self.hasPhotoUrl) {
    size_ += computeStringSize(3, self.photoUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AccountInfo*) parseFromData:(NSData*) data {
  return (AccountInfo*)[[[AccountInfo builder] mergeFromData:data] build];
}
+ (AccountInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AccountInfo*)[[[AccountInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AccountInfo*) parseFromInputStream:(NSInputStream*) input {
  return (AccountInfo*)[[[AccountInfo builder] mergeFromInputStream:input] build];
}
+ (AccountInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AccountInfo*)[[[AccountInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AccountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AccountInfo*)[[[AccountInfo builder] mergeFromCodedInputStream:input] build];
}
+ (AccountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AccountInfo*)[[[AccountInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AccountInfoBuilder*) builder {
  return [[AccountInfoBuilder alloc] init];
}
+ (AccountInfoBuilder*) builderWithPrototype:(AccountInfo*) prototype {
  return [[AccountInfo builder] mergeFrom:prototype];
}
- (AccountInfoBuilder*) builder {
  return [AccountInfo builder];
}
- (AccountInfoBuilder*) toBuilder {
  return [AccountInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithLongLong:self.accountId]];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  if (self.hasPhotoUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"photoUrl", self.photoUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAccountId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.accountId] forKey: @"accountId"];
  }
  if (self.hasNickName) {
    [dictionary setObject: self.nickName forKey: @"nickName"];
  }
  if (self.hasPhotoUrl) {
    [dictionary setObject: self.photoUrl forKey: @"photoUrl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AccountInfo class]]) {
    return NO;
  }
  AccountInfo *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      self.hasPhotoUrl == otherMessage.hasPhotoUrl &&
      (!self.hasPhotoUrl || [self.photoUrl isEqual:otherMessage.photoUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.accountId] hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  if (self.hasPhotoUrl) {
    hashCode = hashCode * 31 + [self.photoUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AccountInfoBuilder()
@property (strong) AccountInfo* resultAccountInfo;
@end

@implementation AccountInfoBuilder
@synthesize resultAccountInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAccountInfo = [[AccountInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAccountInfo;
}
- (AccountInfoBuilder*) clear {
  self.resultAccountInfo = [[AccountInfo alloc] init];
  return self;
}
- (AccountInfoBuilder*) clone {
  return [AccountInfo builderWithPrototype:resultAccountInfo];
}
- (AccountInfo*) defaultInstance {
  return [AccountInfo defaultInstance];
}
- (AccountInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AccountInfo*) buildPartial {
  AccountInfo* returnMe = resultAccountInfo;
  self.resultAccountInfo = nil;
  return returnMe;
}
- (AccountInfoBuilder*) mergeFrom:(AccountInfo*) other {
  if (other == [AccountInfo defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasPhotoUrl) {
    [self setPhotoUrl:other.photoUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AccountInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AccountInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readInt64]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
      case 26: {
        [self setPhotoUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return resultAccountInfo.hasAccountId;
}
- (SInt64) accountId {
  return resultAccountInfo.accountId;
}
- (AccountInfoBuilder*) setAccountId:(SInt64) value {
  resultAccountInfo.hasAccountId = YES;
  resultAccountInfo.accountId = value;
  return self;
}
- (AccountInfoBuilder*) clearAccountId {
  resultAccountInfo.hasAccountId = NO;
  resultAccountInfo.accountId = 0L;
  return self;
}
- (BOOL) hasNickName {
  return resultAccountInfo.hasNickName;
}
- (NSString*) nickName {
  return resultAccountInfo.nickName;
}
- (AccountInfoBuilder*) setNickName:(NSString*) value {
  resultAccountInfo.hasNickName = YES;
  resultAccountInfo.nickName = value;
  return self;
}
- (AccountInfoBuilder*) clearNickName {
  resultAccountInfo.hasNickName = NO;
  resultAccountInfo.nickName = @"";
  return self;
}
- (BOOL) hasPhotoUrl {
  return resultAccountInfo.hasPhotoUrl;
}
- (NSString*) photoUrl {
  return resultAccountInfo.photoUrl;
}
- (AccountInfoBuilder*) setPhotoUrl:(NSString*) value {
  resultAccountInfo.hasPhotoUrl = YES;
  resultAccountInfo.photoUrl = value;
  return self;
}
- (AccountInfoBuilder*) clearPhotoUrl {
  resultAccountInfo.hasPhotoUrl = NO;
  resultAccountInfo.photoUrl = @"";
  return self;
}
@end

@interface CreateGroupReq ()
@property (strong) NSString* name;
@property (strong) NSString* creatorName;
@property (strong) NSMutableArray<AccountInfo*> * membersArray;
@end

@implementation CreateGroupReq

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasCreatorName {
  return !!hasCreatorName_;
}
- (void) setHasCreatorName:(BOOL) _value_ {
  hasCreatorName_ = !!_value_;
}
@synthesize creatorName;
@synthesize membersArray;
@dynamic members;
- (instancetype) init {
  if ((self = [super init])) {
    self.name = @"";
    self.creatorName = @"";
  }
  return self;
}
static CreateGroupReq* defaultCreateGroupReqInstance = nil;
+ (void) initialize {
  if (self == [CreateGroupReq class]) {
    defaultCreateGroupReqInstance = [[CreateGroupReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateGroupReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateGroupReqInstance;
}
- (NSArray<AccountInfo*> *)members {
  return membersArray;
}
- (AccountInfo*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasCreatorName) {
    [output writeString:2 value:self.creatorName];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasName) {
    size_ += computeStringSize(1, self.name);
  }
  if (self.hasCreatorName) {
    size_ += computeStringSize(2, self.creatorName);
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateGroupReq*) parseFromData:(NSData*) data {
  return (CreateGroupReq*)[[[CreateGroupReq builder] mergeFromData:data] build];
}
+ (CreateGroupReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupReq*)[[[CreateGroupReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupReq*) parseFromInputStream:(NSInputStream*) input {
  return (CreateGroupReq*)[[[CreateGroupReq builder] mergeFromInputStream:input] build];
}
+ (CreateGroupReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupReq*)[[[CreateGroupReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateGroupReq*)[[[CreateGroupReq builder] mergeFromCodedInputStream:input] build];
}
+ (CreateGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupReq*)[[[CreateGroupReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupReqBuilder*) builder {
  return [[CreateGroupReqBuilder alloc] init];
}
+ (CreateGroupReqBuilder*) builderWithPrototype:(CreateGroupReq*) prototype {
  return [[CreateGroupReq builder] mergeFrom:prototype];
}
- (CreateGroupReqBuilder*) builder {
  return [CreateGroupReq builder];
}
- (CreateGroupReqBuilder*) toBuilder {
  return [CreateGroupReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasCreatorName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"creatorName", self.creatorName];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasCreatorName) {
    [dictionary setObject: self.creatorName forKey: @"creatorName"];
  }
  for (AccountInfo* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateGroupReq class]]) {
    return NO;
  }
  CreateGroupReq *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasCreatorName == otherMessage.hasCreatorName &&
      (!self.hasCreatorName || [self.creatorName isEqual:otherMessage.creatorName]) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasCreatorName) {
    hashCode = hashCode * 31 + [self.creatorName hash];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateGroupReqBuilder()
@property (strong) CreateGroupReq* resultCreateGroupReq;
@end

@implementation CreateGroupReqBuilder
@synthesize resultCreateGroupReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateGroupReq = [[CreateGroupReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateGroupReq;
}
- (CreateGroupReqBuilder*) clear {
  self.resultCreateGroupReq = [[CreateGroupReq alloc] init];
  return self;
}
- (CreateGroupReqBuilder*) clone {
  return [CreateGroupReq builderWithPrototype:resultCreateGroupReq];
}
- (CreateGroupReq*) defaultInstance {
  return [CreateGroupReq defaultInstance];
}
- (CreateGroupReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateGroupReq*) buildPartial {
  CreateGroupReq* returnMe = resultCreateGroupReq;
  self.resultCreateGroupReq = nil;
  return returnMe;
}
- (CreateGroupReqBuilder*) mergeFrom:(CreateGroupReq*) other {
  if (other == [CreateGroupReq defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCreatorName) {
    [self setCreatorName:other.creatorName];
  }
  if (other.membersArray.count > 0) {
    if (resultCreateGroupReq.membersArray == nil) {
      resultCreateGroupReq.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultCreateGroupReq.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setCreatorName:[input readString]];
        break;
      }
      case 26: {
        AccountInfoBuilder* subBuilder = [AccountInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return resultCreateGroupReq.hasName;
}
- (NSString*) name {
  return resultCreateGroupReq.name;
}
- (CreateGroupReqBuilder*) setName:(NSString*) value {
  resultCreateGroupReq.hasName = YES;
  resultCreateGroupReq.name = value;
  return self;
}
- (CreateGroupReqBuilder*) clearName {
  resultCreateGroupReq.hasName = NO;
  resultCreateGroupReq.name = @"";
  return self;
}
- (BOOL) hasCreatorName {
  return resultCreateGroupReq.hasCreatorName;
}
- (NSString*) creatorName {
  return resultCreateGroupReq.creatorName;
}
- (CreateGroupReqBuilder*) setCreatorName:(NSString*) value {
  resultCreateGroupReq.hasCreatorName = YES;
  resultCreateGroupReq.creatorName = value;
  return self;
}
- (CreateGroupReqBuilder*) clearCreatorName {
  resultCreateGroupReq.hasCreatorName = NO;
  resultCreateGroupReq.creatorName = @"";
  return self;
}
- (NSMutableArray<AccountInfo*> *)members {
  return resultCreateGroupReq.membersArray;
}
- (AccountInfo*)membersAtIndex:(NSUInteger)index {
  return [resultCreateGroupReq membersAtIndex:index];
}
- (CreateGroupReqBuilder *)addMembers:(AccountInfo*)value {
  if (resultCreateGroupReq.membersArray == nil) {
    resultCreateGroupReq.membersArray = [[NSMutableArray alloc]init];
  }
  [resultCreateGroupReq.membersArray addObject:value];
  return self;
}
- (CreateGroupReqBuilder *)setMembersArray:(NSArray<AccountInfo*> *)array {
  resultCreateGroupReq.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (CreateGroupReqBuilder *)clearMembers {
  resultCreateGroupReq.membersArray = nil;
  return self;
}
@end

@interface CreateGroupResp ()
@property (strong) EIMRespHeader* status;
@property SInt64 groupId;
@property UInt64 groupTimestamp;
@end

@implementation CreateGroupResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupId = 0L;
    self.groupTimestamp = 0L;
  }
  return self;
}
static CreateGroupResp* defaultCreateGroupRespInstance = nil;
+ (void) initialize {
  if (self == [CreateGroupResp class]) {
    defaultCreateGroupRespInstance = [[CreateGroupResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateGroupRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateGroupRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupId) {
    [output writeInt64:2 value:self.groupId];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:3 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupId) {
    size_ += computeInt64Size(2, self.groupId);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(3, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateGroupResp*) parseFromData:(NSData*) data {
  return (CreateGroupResp*)[[[CreateGroupResp builder] mergeFromData:data] build];
}
+ (CreateGroupResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupResp*)[[[CreateGroupResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupResp*) parseFromInputStream:(NSInputStream*) input {
  return (CreateGroupResp*)[[[CreateGroupResp builder] mergeFromInputStream:input] build];
}
+ (CreateGroupResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupResp*)[[[CreateGroupResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateGroupResp*)[[[CreateGroupResp builder] mergeFromCodedInputStream:input] build];
}
+ (CreateGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupResp*)[[[CreateGroupResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupRespBuilder*) builder {
  return [[CreateGroupRespBuilder alloc] init];
}
+ (CreateGroupRespBuilder*) builderWithPrototype:(CreateGroupResp*) prototype {
  return [[CreateGroupResp builder] mergeFrom:prototype];
}
- (CreateGroupRespBuilder*) builder {
  return [CreateGroupResp builder];
}
- (CreateGroupRespBuilder*) toBuilder {
  return [CreateGroupResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateGroupResp class]]) {
    return NO;
  }
  CreateGroupResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateGroupRespBuilder()
@property (strong) CreateGroupResp* resultCreateGroupResp;
@end

@implementation CreateGroupRespBuilder
@synthesize resultCreateGroupResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateGroupResp = [[CreateGroupResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateGroupResp;
}
- (CreateGroupRespBuilder*) clear {
  self.resultCreateGroupResp = [[CreateGroupResp alloc] init];
  return self;
}
- (CreateGroupRespBuilder*) clone {
  return [CreateGroupResp builderWithPrototype:resultCreateGroupResp];
}
- (CreateGroupResp*) defaultInstance {
  return [CreateGroupResp defaultInstance];
}
- (CreateGroupResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateGroupResp*) buildPartial {
  CreateGroupResp* returnMe = resultCreateGroupResp;
  self.resultCreateGroupResp = nil;
  return returnMe;
}
- (CreateGroupRespBuilder*) mergeFrom:(CreateGroupResp*) other {
  if (other == [CreateGroupResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 24: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultCreateGroupResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultCreateGroupResp.status;
}
- (CreateGroupRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultCreateGroupResp.hasStatus = YES;
  resultCreateGroupResp.status = value;
  return self;
}
- (CreateGroupRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (CreateGroupRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultCreateGroupResp.hasStatus &&
      resultCreateGroupResp.status != [EIMRespHeader defaultInstance]) {
    resultCreateGroupResp.status =
      [[[EIMRespHeader builderWithPrototype:resultCreateGroupResp.status] mergeFrom:value] buildPartial];
  } else {
    resultCreateGroupResp.status = value;
  }
  resultCreateGroupResp.hasStatus = YES;
  return self;
}
- (CreateGroupRespBuilder*) clearStatus {
  resultCreateGroupResp.hasStatus = NO;
  resultCreateGroupResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupId {
  return resultCreateGroupResp.hasGroupId;
}
- (SInt64) groupId {
  return resultCreateGroupResp.groupId;
}
- (CreateGroupRespBuilder*) setGroupId:(SInt64) value {
  resultCreateGroupResp.hasGroupId = YES;
  resultCreateGroupResp.groupId = value;
  return self;
}
- (CreateGroupRespBuilder*) clearGroupId {
  resultCreateGroupResp.hasGroupId = NO;
  resultCreateGroupResp.groupId = 0L;
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultCreateGroupResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultCreateGroupResp.groupTimestamp;
}
- (CreateGroupRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultCreateGroupResp.hasGroupTimestamp = YES;
  resultCreateGroupResp.groupTimestamp = value;
  return self;
}
- (CreateGroupRespBuilder*) clearGroupTimestamp {
  resultCreateGroupResp.hasGroupTimestamp = NO;
  resultCreateGroupResp.groupTimestamp = 0L;
  return self;
}
@end

@interface InvitedJoinGroupReq ()
@property SInt64 groupId;
@property (strong) NSString* name;
@property (strong) NSMutableArray<AccountInfo*> * membersArray;
@end

@implementation InvitedJoinGroupReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
@synthesize membersArray;
@dynamic members;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.name = @"";
  }
  return self;
}
static InvitedJoinGroupReq* defaultInvitedJoinGroupReqInstance = nil;
+ (void) initialize {
  if (self == [InvitedJoinGroupReq class]) {
    defaultInvitedJoinGroupReqInstance = [[InvitedJoinGroupReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultInvitedJoinGroupReqInstance;
}
- (instancetype) defaultInstance {
  return defaultInvitedJoinGroupReqInstance;
}
- (NSArray<AccountInfo*> *)members {
  return membersArray;
}
- (AccountInfo*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (InvitedJoinGroupReq*) parseFromData:(NSData*) data {
  return (InvitedJoinGroupReq*)[[[InvitedJoinGroupReq builder] mergeFromData:data] build];
}
+ (InvitedJoinGroupReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InvitedJoinGroupReq*)[[[InvitedJoinGroupReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InvitedJoinGroupReq*) parseFromInputStream:(NSInputStream*) input {
  return (InvitedJoinGroupReq*)[[[InvitedJoinGroupReq builder] mergeFromInputStream:input] build];
}
+ (InvitedJoinGroupReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InvitedJoinGroupReq*)[[[InvitedJoinGroupReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InvitedJoinGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InvitedJoinGroupReq*)[[[InvitedJoinGroupReq builder] mergeFromCodedInputStream:input] build];
}
+ (InvitedJoinGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InvitedJoinGroupReq*)[[[InvitedJoinGroupReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InvitedJoinGroupReqBuilder*) builder {
  return [[InvitedJoinGroupReqBuilder alloc] init];
}
+ (InvitedJoinGroupReqBuilder*) builderWithPrototype:(InvitedJoinGroupReq*) prototype {
  return [[InvitedJoinGroupReq builder] mergeFrom:prototype];
}
- (InvitedJoinGroupReqBuilder*) builder {
  return [InvitedJoinGroupReq builder];
}
- (InvitedJoinGroupReqBuilder*) toBuilder {
  return [InvitedJoinGroupReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  for (AccountInfo* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[InvitedJoinGroupReq class]]) {
    return NO;
  }
  InvitedJoinGroupReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface InvitedJoinGroupReqBuilder()
@property (strong) InvitedJoinGroupReq* resultInvitedJoinGroupReq;
@end

@implementation InvitedJoinGroupReqBuilder
@synthesize resultInvitedJoinGroupReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultInvitedJoinGroupReq = [[InvitedJoinGroupReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultInvitedJoinGroupReq;
}
- (InvitedJoinGroupReqBuilder*) clear {
  self.resultInvitedJoinGroupReq = [[InvitedJoinGroupReq alloc] init];
  return self;
}
- (InvitedJoinGroupReqBuilder*) clone {
  return [InvitedJoinGroupReq builderWithPrototype:resultInvitedJoinGroupReq];
}
- (InvitedJoinGroupReq*) defaultInstance {
  return [InvitedJoinGroupReq defaultInstance];
}
- (InvitedJoinGroupReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InvitedJoinGroupReq*) buildPartial {
  InvitedJoinGroupReq* returnMe = resultInvitedJoinGroupReq;
  self.resultInvitedJoinGroupReq = nil;
  return returnMe;
}
- (InvitedJoinGroupReqBuilder*) mergeFrom:(InvitedJoinGroupReq*) other {
  if (other == [InvitedJoinGroupReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.membersArray.count > 0) {
    if (resultInvitedJoinGroupReq.membersArray == nil) {
      resultInvitedJoinGroupReq.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultInvitedJoinGroupReq.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InvitedJoinGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InvitedJoinGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        AccountInfoBuilder* subBuilder = [AccountInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultInvitedJoinGroupReq.hasGroupId;
}
- (SInt64) groupId {
  return resultInvitedJoinGroupReq.groupId;
}
- (InvitedJoinGroupReqBuilder*) setGroupId:(SInt64) value {
  resultInvitedJoinGroupReq.hasGroupId = YES;
  resultInvitedJoinGroupReq.groupId = value;
  return self;
}
- (InvitedJoinGroupReqBuilder*) clearGroupId {
  resultInvitedJoinGroupReq.hasGroupId = NO;
  resultInvitedJoinGroupReq.groupId = 0L;
  return self;
}
- (BOOL) hasName {
  return resultInvitedJoinGroupReq.hasName;
}
- (NSString*) name {
  return resultInvitedJoinGroupReq.name;
}
- (InvitedJoinGroupReqBuilder*) setName:(NSString*) value {
  resultInvitedJoinGroupReq.hasName = YES;
  resultInvitedJoinGroupReq.name = value;
  return self;
}
- (InvitedJoinGroupReqBuilder*) clearName {
  resultInvitedJoinGroupReq.hasName = NO;
  resultInvitedJoinGroupReq.name = @"";
  return self;
}
- (NSMutableArray<AccountInfo*> *)members {
  return resultInvitedJoinGroupReq.membersArray;
}
- (AccountInfo*)membersAtIndex:(NSUInteger)index {
  return [resultInvitedJoinGroupReq membersAtIndex:index];
}
- (InvitedJoinGroupReqBuilder *)addMembers:(AccountInfo*)value {
  if (resultInvitedJoinGroupReq.membersArray == nil) {
    resultInvitedJoinGroupReq.membersArray = [[NSMutableArray alloc]init];
  }
  [resultInvitedJoinGroupReq.membersArray addObject:value];
  return self;
}
- (InvitedJoinGroupReqBuilder *)setMembersArray:(NSArray<AccountInfo*> *)array {
  resultInvitedJoinGroupReq.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (InvitedJoinGroupReqBuilder *)clearMembers {
  resultInvitedJoinGroupReq.membersArray = nil;
  return self;
}
@end

@interface InvitedJoinGroupResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation InvitedJoinGroupResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static InvitedJoinGroupResp* defaultInvitedJoinGroupRespInstance = nil;
+ (void) initialize {
  if (self == [InvitedJoinGroupResp class]) {
    defaultInvitedJoinGroupRespInstance = [[InvitedJoinGroupResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultInvitedJoinGroupRespInstance;
}
- (instancetype) defaultInstance {
  return defaultInvitedJoinGroupRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (InvitedJoinGroupResp*) parseFromData:(NSData*) data {
  return (InvitedJoinGroupResp*)[[[InvitedJoinGroupResp builder] mergeFromData:data] build];
}
+ (InvitedJoinGroupResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InvitedJoinGroupResp*)[[[InvitedJoinGroupResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InvitedJoinGroupResp*) parseFromInputStream:(NSInputStream*) input {
  return (InvitedJoinGroupResp*)[[[InvitedJoinGroupResp builder] mergeFromInputStream:input] build];
}
+ (InvitedJoinGroupResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InvitedJoinGroupResp*)[[[InvitedJoinGroupResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InvitedJoinGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InvitedJoinGroupResp*)[[[InvitedJoinGroupResp builder] mergeFromCodedInputStream:input] build];
}
+ (InvitedJoinGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InvitedJoinGroupResp*)[[[InvitedJoinGroupResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InvitedJoinGroupRespBuilder*) builder {
  return [[InvitedJoinGroupRespBuilder alloc] init];
}
+ (InvitedJoinGroupRespBuilder*) builderWithPrototype:(InvitedJoinGroupResp*) prototype {
  return [[InvitedJoinGroupResp builder] mergeFrom:prototype];
}
- (InvitedJoinGroupRespBuilder*) builder {
  return [InvitedJoinGroupResp builder];
}
- (InvitedJoinGroupRespBuilder*) toBuilder {
  return [InvitedJoinGroupResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[InvitedJoinGroupResp class]]) {
    return NO;
  }
  InvitedJoinGroupResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface InvitedJoinGroupRespBuilder()
@property (strong) InvitedJoinGroupResp* resultInvitedJoinGroupResp;
@end

@implementation InvitedJoinGroupRespBuilder
@synthesize resultInvitedJoinGroupResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultInvitedJoinGroupResp = [[InvitedJoinGroupResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultInvitedJoinGroupResp;
}
- (InvitedJoinGroupRespBuilder*) clear {
  self.resultInvitedJoinGroupResp = [[InvitedJoinGroupResp alloc] init];
  return self;
}
- (InvitedJoinGroupRespBuilder*) clone {
  return [InvitedJoinGroupResp builderWithPrototype:resultInvitedJoinGroupResp];
}
- (InvitedJoinGroupResp*) defaultInstance {
  return [InvitedJoinGroupResp defaultInstance];
}
- (InvitedJoinGroupResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InvitedJoinGroupResp*) buildPartial {
  InvitedJoinGroupResp* returnMe = resultInvitedJoinGroupResp;
  self.resultInvitedJoinGroupResp = nil;
  return returnMe;
}
- (InvitedJoinGroupRespBuilder*) mergeFrom:(InvitedJoinGroupResp*) other {
  if (other == [InvitedJoinGroupResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InvitedJoinGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InvitedJoinGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultInvitedJoinGroupResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultInvitedJoinGroupResp.status;
}
- (InvitedJoinGroupRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultInvitedJoinGroupResp.hasStatus = YES;
  resultInvitedJoinGroupResp.status = value;
  return self;
}
- (InvitedJoinGroupRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (InvitedJoinGroupRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultInvitedJoinGroupResp.hasStatus &&
      resultInvitedJoinGroupResp.status != [EIMRespHeader defaultInstance]) {
    resultInvitedJoinGroupResp.status =
      [[[EIMRespHeader builderWithPrototype:resultInvitedJoinGroupResp.status] mergeFrom:value] buildPartial];
  } else {
    resultInvitedJoinGroupResp.status = value;
  }
  resultInvitedJoinGroupResp.hasStatus = YES;
  return self;
}
- (InvitedJoinGroupRespBuilder*) clearStatus {
  resultInvitedJoinGroupResp.hasStatus = NO;
  resultInvitedJoinGroupResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultInvitedJoinGroupResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultInvitedJoinGroupResp.groupTimestamp;
}
- (InvitedJoinGroupRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultInvitedJoinGroupResp.hasGroupTimestamp = YES;
  resultInvitedJoinGroupResp.groupTimestamp = value;
  return self;
}
- (InvitedJoinGroupRespBuilder*) clearGroupTimestamp {
  resultInvitedJoinGroupResp.hasGroupTimestamp = NO;
  resultInvitedJoinGroupResp.groupTimestamp = 0L;
  return self;
}
@end

@interface DeleteGroupUserReq ()
@property SInt64 groupId;
@property (strong) NSMutableArray<AccountInfo*> * membersArray;
@end

@implementation DeleteGroupUserReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
@synthesize membersArray;
@dynamic members;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
  }
  return self;
}
static DeleteGroupUserReq* defaultDeleteGroupUserReqInstance = nil;
+ (void) initialize {
  if (self == [DeleteGroupUserReq class]) {
    defaultDeleteGroupUserReqInstance = [[DeleteGroupUserReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeleteGroupUserReqInstance;
}
- (instancetype) defaultInstance {
  return defaultDeleteGroupUserReqInstance;
}
- (NSArray<AccountInfo*> *)members {
  return membersArray;
}
- (AccountInfo*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteGroupUserReq*) parseFromData:(NSData*) data {
  return (DeleteGroupUserReq*)[[[DeleteGroupUserReq builder] mergeFromData:data] build];
}
+ (DeleteGroupUserReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteGroupUserReq*)[[[DeleteGroupUserReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeleteGroupUserReq*) parseFromInputStream:(NSInputStream*) input {
  return (DeleteGroupUserReq*)[[[DeleteGroupUserReq builder] mergeFromInputStream:input] build];
}
+ (DeleteGroupUserReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteGroupUserReq*)[[[DeleteGroupUserReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteGroupUserReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeleteGroupUserReq*)[[[DeleteGroupUserReq builder] mergeFromCodedInputStream:input] build];
}
+ (DeleteGroupUserReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteGroupUserReq*)[[[DeleteGroupUserReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteGroupUserReqBuilder*) builder {
  return [[DeleteGroupUserReqBuilder alloc] init];
}
+ (DeleteGroupUserReqBuilder*) builderWithPrototype:(DeleteGroupUserReq*) prototype {
  return [[DeleteGroupUserReq builder] mergeFrom:prototype];
}
- (DeleteGroupUserReqBuilder*) builder {
  return [DeleteGroupUserReq builder];
}
- (DeleteGroupUserReqBuilder*) toBuilder {
  return [DeleteGroupUserReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  for (AccountInfo* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeleteGroupUserReq class]]) {
    return NO;
  }
  DeleteGroupUserReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  [self.membersArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeleteGroupUserReqBuilder()
@property (strong) DeleteGroupUserReq* resultDeleteGroupUserReq;
@end

@implementation DeleteGroupUserReqBuilder
@synthesize resultDeleteGroupUserReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteGroupUserReq = [[DeleteGroupUserReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteGroupUserReq;
}
- (DeleteGroupUserReqBuilder*) clear {
  self.resultDeleteGroupUserReq = [[DeleteGroupUserReq alloc] init];
  return self;
}
- (DeleteGroupUserReqBuilder*) clone {
  return [DeleteGroupUserReq builderWithPrototype:resultDeleteGroupUserReq];
}
- (DeleteGroupUserReq*) defaultInstance {
  return [DeleteGroupUserReq defaultInstance];
}
- (DeleteGroupUserReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeleteGroupUserReq*) buildPartial {
  DeleteGroupUserReq* returnMe = resultDeleteGroupUserReq;
  self.resultDeleteGroupUserReq = nil;
  return returnMe;
}
- (DeleteGroupUserReqBuilder*) mergeFrom:(DeleteGroupUserReq*) other {
  if (other == [DeleteGroupUserReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.membersArray.count > 0) {
    if (resultDeleteGroupUserReq.membersArray == nil) {
      resultDeleteGroupUserReq.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultDeleteGroupUserReq.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeleteGroupUserReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeleteGroupUserReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        AccountInfoBuilder* subBuilder = [AccountInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultDeleteGroupUserReq.hasGroupId;
}
- (SInt64) groupId {
  return resultDeleteGroupUserReq.groupId;
}
- (DeleteGroupUserReqBuilder*) setGroupId:(SInt64) value {
  resultDeleteGroupUserReq.hasGroupId = YES;
  resultDeleteGroupUserReq.groupId = value;
  return self;
}
- (DeleteGroupUserReqBuilder*) clearGroupId {
  resultDeleteGroupUserReq.hasGroupId = NO;
  resultDeleteGroupUserReq.groupId = 0L;
  return self;
}
- (NSMutableArray<AccountInfo*> *)members {
  return resultDeleteGroupUserReq.membersArray;
}
- (AccountInfo*)membersAtIndex:(NSUInteger)index {
  return [resultDeleteGroupUserReq membersAtIndex:index];
}
- (DeleteGroupUserReqBuilder *)addMembers:(AccountInfo*)value {
  if (resultDeleteGroupUserReq.membersArray == nil) {
    resultDeleteGroupUserReq.membersArray = [[NSMutableArray alloc]init];
  }
  [resultDeleteGroupUserReq.membersArray addObject:value];
  return self;
}
- (DeleteGroupUserReqBuilder *)setMembersArray:(NSArray<AccountInfo*> *)array {
  resultDeleteGroupUserReq.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (DeleteGroupUserReqBuilder *)clearMembers {
  resultDeleteGroupUserReq.membersArray = nil;
  return self;
}
@end

@interface DeleteGroupUserResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation DeleteGroupUserResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static DeleteGroupUserResp* defaultDeleteGroupUserRespInstance = nil;
+ (void) initialize {
  if (self == [DeleteGroupUserResp class]) {
    defaultDeleteGroupUserRespInstance = [[DeleteGroupUserResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeleteGroupUserRespInstance;
}
- (instancetype) defaultInstance {
  return defaultDeleteGroupUserRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteGroupUserResp*) parseFromData:(NSData*) data {
  return (DeleteGroupUserResp*)[[[DeleteGroupUserResp builder] mergeFromData:data] build];
}
+ (DeleteGroupUserResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteGroupUserResp*)[[[DeleteGroupUserResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeleteGroupUserResp*) parseFromInputStream:(NSInputStream*) input {
  return (DeleteGroupUserResp*)[[[DeleteGroupUserResp builder] mergeFromInputStream:input] build];
}
+ (DeleteGroupUserResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteGroupUserResp*)[[[DeleteGroupUserResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteGroupUserResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeleteGroupUserResp*)[[[DeleteGroupUserResp builder] mergeFromCodedInputStream:input] build];
}
+ (DeleteGroupUserResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteGroupUserResp*)[[[DeleteGroupUserResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteGroupUserRespBuilder*) builder {
  return [[DeleteGroupUserRespBuilder alloc] init];
}
+ (DeleteGroupUserRespBuilder*) builderWithPrototype:(DeleteGroupUserResp*) prototype {
  return [[DeleteGroupUserResp builder] mergeFrom:prototype];
}
- (DeleteGroupUserRespBuilder*) builder {
  return [DeleteGroupUserResp builder];
}
- (DeleteGroupUserRespBuilder*) toBuilder {
  return [DeleteGroupUserResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeleteGroupUserResp class]]) {
    return NO;
  }
  DeleteGroupUserResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeleteGroupUserRespBuilder()
@property (strong) DeleteGroupUserResp* resultDeleteGroupUserResp;
@end

@implementation DeleteGroupUserRespBuilder
@synthesize resultDeleteGroupUserResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteGroupUserResp = [[DeleteGroupUserResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteGroupUserResp;
}
- (DeleteGroupUserRespBuilder*) clear {
  self.resultDeleteGroupUserResp = [[DeleteGroupUserResp alloc] init];
  return self;
}
- (DeleteGroupUserRespBuilder*) clone {
  return [DeleteGroupUserResp builderWithPrototype:resultDeleteGroupUserResp];
}
- (DeleteGroupUserResp*) defaultInstance {
  return [DeleteGroupUserResp defaultInstance];
}
- (DeleteGroupUserResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeleteGroupUserResp*) buildPartial {
  DeleteGroupUserResp* returnMe = resultDeleteGroupUserResp;
  self.resultDeleteGroupUserResp = nil;
  return returnMe;
}
- (DeleteGroupUserRespBuilder*) mergeFrom:(DeleteGroupUserResp*) other {
  if (other == [DeleteGroupUserResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeleteGroupUserRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeleteGroupUserRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultDeleteGroupUserResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultDeleteGroupUserResp.status;
}
- (DeleteGroupUserRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultDeleteGroupUserResp.hasStatus = YES;
  resultDeleteGroupUserResp.status = value;
  return self;
}
- (DeleteGroupUserRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (DeleteGroupUserRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultDeleteGroupUserResp.hasStatus &&
      resultDeleteGroupUserResp.status != [EIMRespHeader defaultInstance]) {
    resultDeleteGroupUserResp.status =
      [[[EIMRespHeader builderWithPrototype:resultDeleteGroupUserResp.status] mergeFrom:value] buildPartial];
  } else {
    resultDeleteGroupUserResp.status = value;
  }
  resultDeleteGroupUserResp.hasStatus = YES;
  return self;
}
- (DeleteGroupUserRespBuilder*) clearStatus {
  resultDeleteGroupUserResp.hasStatus = NO;
  resultDeleteGroupUserResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultDeleteGroupUserResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultDeleteGroupUserResp.groupTimestamp;
}
- (DeleteGroupUserRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultDeleteGroupUserResp.hasGroupTimestamp = YES;
  resultDeleteGroupUserResp.groupTimestamp = value;
  return self;
}
- (DeleteGroupUserRespBuilder*) clearGroupTimestamp {
  resultDeleteGroupUserResp.hasGroupTimestamp = NO;
  resultDeleteGroupUserResp.groupTimestamp = 0L;
  return self;
}
@end

@interface TransferGroupOwnerReq ()
@property SInt64 groupId;
@property (strong) AccountInfo* member;
@end

@implementation TransferGroupOwnerReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasMember {
  return !!hasMember_;
}
- (void) setHasMember:(BOOL) _value_ {
  hasMember_ = !!_value_;
}
@synthesize member;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.member = [AccountInfo defaultInstance];
  }
  return self;
}
static TransferGroupOwnerReq* defaultTransferGroupOwnerReqInstance = nil;
+ (void) initialize {
  if (self == [TransferGroupOwnerReq class]) {
    defaultTransferGroupOwnerReqInstance = [[TransferGroupOwnerReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTransferGroupOwnerReqInstance;
}
- (instancetype) defaultInstance {
  return defaultTransferGroupOwnerReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  if (self.hasMember) {
    [output writeMessage:2 value:self.member];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  if (self.hasMember) {
    size_ += computeMessageSize(2, self.member);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TransferGroupOwnerReq*) parseFromData:(NSData*) data {
  return (TransferGroupOwnerReq*)[[[TransferGroupOwnerReq builder] mergeFromData:data] build];
}
+ (TransferGroupOwnerReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferGroupOwnerReq*)[[[TransferGroupOwnerReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferGroupOwnerReq*) parseFromInputStream:(NSInputStream*) input {
  return (TransferGroupOwnerReq*)[[[TransferGroupOwnerReq builder] mergeFromInputStream:input] build];
}
+ (TransferGroupOwnerReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferGroupOwnerReq*)[[[TransferGroupOwnerReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferGroupOwnerReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferGroupOwnerReq*)[[[TransferGroupOwnerReq builder] mergeFromCodedInputStream:input] build];
}
+ (TransferGroupOwnerReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferGroupOwnerReq*)[[[TransferGroupOwnerReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferGroupOwnerReqBuilder*) builder {
  return [[TransferGroupOwnerReqBuilder alloc] init];
}
+ (TransferGroupOwnerReqBuilder*) builderWithPrototype:(TransferGroupOwnerReq*) prototype {
  return [[TransferGroupOwnerReq builder] mergeFrom:prototype];
}
- (TransferGroupOwnerReqBuilder*) builder {
  return [TransferGroupOwnerReq builder];
}
- (TransferGroupOwnerReqBuilder*) toBuilder {
  return [TransferGroupOwnerReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasMember) {
    [output appendFormat:@"%@%@ {\n", indent, @"member"];
    [self.member writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasMember) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.member storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"member"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TransferGroupOwnerReq class]]) {
    return NO;
  }
  TransferGroupOwnerReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasMember == otherMessage.hasMember &&
      (!self.hasMember || [self.member isEqual:otherMessage.member]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasMember) {
    hashCode = hashCode * 31 + [self.member hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TransferGroupOwnerReqBuilder()
@property (strong) TransferGroupOwnerReq* resultTransferGroupOwnerReq;
@end

@implementation TransferGroupOwnerReqBuilder
@synthesize resultTransferGroupOwnerReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTransferGroupOwnerReq = [[TransferGroupOwnerReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTransferGroupOwnerReq;
}
- (TransferGroupOwnerReqBuilder*) clear {
  self.resultTransferGroupOwnerReq = [[TransferGroupOwnerReq alloc] init];
  return self;
}
- (TransferGroupOwnerReqBuilder*) clone {
  return [TransferGroupOwnerReq builderWithPrototype:resultTransferGroupOwnerReq];
}
- (TransferGroupOwnerReq*) defaultInstance {
  return [TransferGroupOwnerReq defaultInstance];
}
- (TransferGroupOwnerReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferGroupOwnerReq*) buildPartial {
  TransferGroupOwnerReq* returnMe = resultTransferGroupOwnerReq;
  self.resultTransferGroupOwnerReq = nil;
  return returnMe;
}
- (TransferGroupOwnerReqBuilder*) mergeFrom:(TransferGroupOwnerReq*) other {
  if (other == [TransferGroupOwnerReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasMember) {
    [self mergeMember:other.member];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferGroupOwnerReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferGroupOwnerReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        AccountInfoBuilder* subBuilder = [AccountInfo builder];
        if (self.hasMember) {
          [subBuilder mergeFrom:self.member];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMember:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultTransferGroupOwnerReq.hasGroupId;
}
- (SInt64) groupId {
  return resultTransferGroupOwnerReq.groupId;
}
- (TransferGroupOwnerReqBuilder*) setGroupId:(SInt64) value {
  resultTransferGroupOwnerReq.hasGroupId = YES;
  resultTransferGroupOwnerReq.groupId = value;
  return self;
}
- (TransferGroupOwnerReqBuilder*) clearGroupId {
  resultTransferGroupOwnerReq.hasGroupId = NO;
  resultTransferGroupOwnerReq.groupId = 0L;
  return self;
}
- (BOOL) hasMember {
  return resultTransferGroupOwnerReq.hasMember;
}
- (AccountInfo*) member {
  return resultTransferGroupOwnerReq.member;
}
- (TransferGroupOwnerReqBuilder*) setMember:(AccountInfo*) value {
  resultTransferGroupOwnerReq.hasMember = YES;
  resultTransferGroupOwnerReq.member = value;
  return self;
}
- (TransferGroupOwnerReqBuilder*) setMemberBuilder:(AccountInfoBuilder*) builderForValue {
  return [self setMember:[builderForValue build]];
}
- (TransferGroupOwnerReqBuilder*) mergeMember:(AccountInfo*) value {
  if (resultTransferGroupOwnerReq.hasMember &&
      resultTransferGroupOwnerReq.member != [AccountInfo defaultInstance]) {
    resultTransferGroupOwnerReq.member =
      [[[AccountInfo builderWithPrototype:resultTransferGroupOwnerReq.member] mergeFrom:value] buildPartial];
  } else {
    resultTransferGroupOwnerReq.member = value;
  }
  resultTransferGroupOwnerReq.hasMember = YES;
  return self;
}
- (TransferGroupOwnerReqBuilder*) clearMember {
  resultTransferGroupOwnerReq.hasMember = NO;
  resultTransferGroupOwnerReq.member = [AccountInfo defaultInstance];
  return self;
}
@end

@interface TransferGroupOwnerResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation TransferGroupOwnerResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static TransferGroupOwnerResp* defaultTransferGroupOwnerRespInstance = nil;
+ (void) initialize {
  if (self == [TransferGroupOwnerResp class]) {
    defaultTransferGroupOwnerRespInstance = [[TransferGroupOwnerResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTransferGroupOwnerRespInstance;
}
- (instancetype) defaultInstance {
  return defaultTransferGroupOwnerRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TransferGroupOwnerResp*) parseFromData:(NSData*) data {
  return (TransferGroupOwnerResp*)[[[TransferGroupOwnerResp builder] mergeFromData:data] build];
}
+ (TransferGroupOwnerResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferGroupOwnerResp*)[[[TransferGroupOwnerResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferGroupOwnerResp*) parseFromInputStream:(NSInputStream*) input {
  return (TransferGroupOwnerResp*)[[[TransferGroupOwnerResp builder] mergeFromInputStream:input] build];
}
+ (TransferGroupOwnerResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferGroupOwnerResp*)[[[TransferGroupOwnerResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferGroupOwnerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferGroupOwnerResp*)[[[TransferGroupOwnerResp builder] mergeFromCodedInputStream:input] build];
}
+ (TransferGroupOwnerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferGroupOwnerResp*)[[[TransferGroupOwnerResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferGroupOwnerRespBuilder*) builder {
  return [[TransferGroupOwnerRespBuilder alloc] init];
}
+ (TransferGroupOwnerRespBuilder*) builderWithPrototype:(TransferGroupOwnerResp*) prototype {
  return [[TransferGroupOwnerResp builder] mergeFrom:prototype];
}
- (TransferGroupOwnerRespBuilder*) builder {
  return [TransferGroupOwnerResp builder];
}
- (TransferGroupOwnerRespBuilder*) toBuilder {
  return [TransferGroupOwnerResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TransferGroupOwnerResp class]]) {
    return NO;
  }
  TransferGroupOwnerResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TransferGroupOwnerRespBuilder()
@property (strong) TransferGroupOwnerResp* resultTransferGroupOwnerResp;
@end

@implementation TransferGroupOwnerRespBuilder
@synthesize resultTransferGroupOwnerResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTransferGroupOwnerResp = [[TransferGroupOwnerResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTransferGroupOwnerResp;
}
- (TransferGroupOwnerRespBuilder*) clear {
  self.resultTransferGroupOwnerResp = [[TransferGroupOwnerResp alloc] init];
  return self;
}
- (TransferGroupOwnerRespBuilder*) clone {
  return [TransferGroupOwnerResp builderWithPrototype:resultTransferGroupOwnerResp];
}
- (TransferGroupOwnerResp*) defaultInstance {
  return [TransferGroupOwnerResp defaultInstance];
}
- (TransferGroupOwnerResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferGroupOwnerResp*) buildPartial {
  TransferGroupOwnerResp* returnMe = resultTransferGroupOwnerResp;
  self.resultTransferGroupOwnerResp = nil;
  return returnMe;
}
- (TransferGroupOwnerRespBuilder*) mergeFrom:(TransferGroupOwnerResp*) other {
  if (other == [TransferGroupOwnerResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferGroupOwnerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferGroupOwnerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultTransferGroupOwnerResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultTransferGroupOwnerResp.status;
}
- (TransferGroupOwnerRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultTransferGroupOwnerResp.hasStatus = YES;
  resultTransferGroupOwnerResp.status = value;
  return self;
}
- (TransferGroupOwnerRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (TransferGroupOwnerRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultTransferGroupOwnerResp.hasStatus &&
      resultTransferGroupOwnerResp.status != [EIMRespHeader defaultInstance]) {
    resultTransferGroupOwnerResp.status =
      [[[EIMRespHeader builderWithPrototype:resultTransferGroupOwnerResp.status] mergeFrom:value] buildPartial];
  } else {
    resultTransferGroupOwnerResp.status = value;
  }
  resultTransferGroupOwnerResp.hasStatus = YES;
  return self;
}
- (TransferGroupOwnerRespBuilder*) clearStatus {
  resultTransferGroupOwnerResp.hasStatus = NO;
  resultTransferGroupOwnerResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultTransferGroupOwnerResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultTransferGroupOwnerResp.groupTimestamp;
}
- (TransferGroupOwnerRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultTransferGroupOwnerResp.hasGroupTimestamp = YES;
  resultTransferGroupOwnerResp.groupTimestamp = value;
  return self;
}
- (TransferGroupOwnerRespBuilder*) clearGroupTimestamp {
  resultTransferGroupOwnerResp.hasGroupTimestamp = NO;
  resultTransferGroupOwnerResp.groupTimestamp = 0L;
  return self;
}
@end

@interface SetManagerReq ()
@property SInt64 groupId;
@property (strong) NSMutableArray<AccountInfo*> * memberArray;
@end

@implementation SetManagerReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
@synthesize memberArray;
@dynamic member;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
  }
  return self;
}
static SetManagerReq* defaultSetManagerReqInstance = nil;
+ (void) initialize {
  if (self == [SetManagerReq class]) {
    defaultSetManagerReqInstance = [[SetManagerReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetManagerReqInstance;
}
- (instancetype) defaultInstance {
  return defaultSetManagerReqInstance;
}
- (NSArray<AccountInfo*> *)member {
  return memberArray;
}
- (AccountInfo*)memberAtIndex:(NSUInteger)index {
  return [memberArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetManagerReq*) parseFromData:(NSData*) data {
  return (SetManagerReq*)[[[SetManagerReq builder] mergeFromData:data] build];
}
+ (SetManagerReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetManagerReq*)[[[SetManagerReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetManagerReq*) parseFromInputStream:(NSInputStream*) input {
  return (SetManagerReq*)[[[SetManagerReq builder] mergeFromInputStream:input] build];
}
+ (SetManagerReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetManagerReq*)[[[SetManagerReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetManagerReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetManagerReq*)[[[SetManagerReq builder] mergeFromCodedInputStream:input] build];
}
+ (SetManagerReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetManagerReq*)[[[SetManagerReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetManagerReqBuilder*) builder {
  return [[SetManagerReqBuilder alloc] init];
}
+ (SetManagerReqBuilder*) builderWithPrototype:(SetManagerReq*) prototype {
  return [[SetManagerReq builder] mergeFrom:prototype];
}
- (SetManagerReqBuilder*) builder {
  return [SetManagerReq builder];
}
- (SetManagerReqBuilder*) toBuilder {
  return [SetManagerReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"member"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  for (AccountInfo* element in self.memberArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"member"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetManagerReq class]]) {
    return NO;
  }
  SetManagerReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      [self.memberArray isEqualToArray:otherMessage.memberArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetManagerReqBuilder()
@property (strong) SetManagerReq* resultSetManagerReq;
@end

@implementation SetManagerReqBuilder
@synthesize resultSetManagerReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetManagerReq = [[SetManagerReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetManagerReq;
}
- (SetManagerReqBuilder*) clear {
  self.resultSetManagerReq = [[SetManagerReq alloc] init];
  return self;
}
- (SetManagerReqBuilder*) clone {
  return [SetManagerReq builderWithPrototype:resultSetManagerReq];
}
- (SetManagerReq*) defaultInstance {
  return [SetManagerReq defaultInstance];
}
- (SetManagerReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetManagerReq*) buildPartial {
  SetManagerReq* returnMe = resultSetManagerReq;
  self.resultSetManagerReq = nil;
  return returnMe;
}
- (SetManagerReqBuilder*) mergeFrom:(SetManagerReq*) other {
  if (other == [SetManagerReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.memberArray.count > 0) {
    if (resultSetManagerReq.memberArray == nil) {
      resultSetManagerReq.memberArray = [[NSMutableArray alloc] initWithArray:other.memberArray];
    } else {
      [resultSetManagerReq.memberArray addObjectsFromArray:other.memberArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetManagerReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetManagerReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        AccountInfoBuilder* subBuilder = [AccountInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMember:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultSetManagerReq.hasGroupId;
}
- (SInt64) groupId {
  return resultSetManagerReq.groupId;
}
- (SetManagerReqBuilder*) setGroupId:(SInt64) value {
  resultSetManagerReq.hasGroupId = YES;
  resultSetManagerReq.groupId = value;
  return self;
}
- (SetManagerReqBuilder*) clearGroupId {
  resultSetManagerReq.hasGroupId = NO;
  resultSetManagerReq.groupId = 0L;
  return self;
}
- (NSMutableArray<AccountInfo*> *)member {
  return resultSetManagerReq.memberArray;
}
- (AccountInfo*)memberAtIndex:(NSUInteger)index {
  return [resultSetManagerReq memberAtIndex:index];
}
- (SetManagerReqBuilder *)addMember:(AccountInfo*)value {
  if (resultSetManagerReq.memberArray == nil) {
    resultSetManagerReq.memberArray = [[NSMutableArray alloc]init];
  }
  [resultSetManagerReq.memberArray addObject:value];
  return self;
}
- (SetManagerReqBuilder *)setMemberArray:(NSArray<AccountInfo*> *)array {
  resultSetManagerReq.memberArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (SetManagerReqBuilder *)clearMember {
  resultSetManagerReq.memberArray = nil;
  return self;
}
@end

@interface SetManagerResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation SetManagerResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static SetManagerResp* defaultSetManagerRespInstance = nil;
+ (void) initialize {
  if (self == [SetManagerResp class]) {
    defaultSetManagerRespInstance = [[SetManagerResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetManagerRespInstance;
}
- (instancetype) defaultInstance {
  return defaultSetManagerRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetManagerResp*) parseFromData:(NSData*) data {
  return (SetManagerResp*)[[[SetManagerResp builder] mergeFromData:data] build];
}
+ (SetManagerResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetManagerResp*)[[[SetManagerResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetManagerResp*) parseFromInputStream:(NSInputStream*) input {
  return (SetManagerResp*)[[[SetManagerResp builder] mergeFromInputStream:input] build];
}
+ (SetManagerResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetManagerResp*)[[[SetManagerResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetManagerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetManagerResp*)[[[SetManagerResp builder] mergeFromCodedInputStream:input] build];
}
+ (SetManagerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetManagerResp*)[[[SetManagerResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetManagerRespBuilder*) builder {
  return [[SetManagerRespBuilder alloc] init];
}
+ (SetManagerRespBuilder*) builderWithPrototype:(SetManagerResp*) prototype {
  return [[SetManagerResp builder] mergeFrom:prototype];
}
- (SetManagerRespBuilder*) builder {
  return [SetManagerResp builder];
}
- (SetManagerRespBuilder*) toBuilder {
  return [SetManagerResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetManagerResp class]]) {
    return NO;
  }
  SetManagerResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetManagerRespBuilder()
@property (strong) SetManagerResp* resultSetManagerResp;
@end

@implementation SetManagerRespBuilder
@synthesize resultSetManagerResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetManagerResp = [[SetManagerResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetManagerResp;
}
- (SetManagerRespBuilder*) clear {
  self.resultSetManagerResp = [[SetManagerResp alloc] init];
  return self;
}
- (SetManagerRespBuilder*) clone {
  return [SetManagerResp builderWithPrototype:resultSetManagerResp];
}
- (SetManagerResp*) defaultInstance {
  return [SetManagerResp defaultInstance];
}
- (SetManagerResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetManagerResp*) buildPartial {
  SetManagerResp* returnMe = resultSetManagerResp;
  self.resultSetManagerResp = nil;
  return returnMe;
}
- (SetManagerRespBuilder*) mergeFrom:(SetManagerResp*) other {
  if (other == [SetManagerResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetManagerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetManagerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultSetManagerResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultSetManagerResp.status;
}
- (SetManagerRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultSetManagerResp.hasStatus = YES;
  resultSetManagerResp.status = value;
  return self;
}
- (SetManagerRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (SetManagerRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultSetManagerResp.hasStatus &&
      resultSetManagerResp.status != [EIMRespHeader defaultInstance]) {
    resultSetManagerResp.status =
      [[[EIMRespHeader builderWithPrototype:resultSetManagerResp.status] mergeFrom:value] buildPartial];
  } else {
    resultSetManagerResp.status = value;
  }
  resultSetManagerResp.hasStatus = YES;
  return self;
}
- (SetManagerRespBuilder*) clearStatus {
  resultSetManagerResp.hasStatus = NO;
  resultSetManagerResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultSetManagerResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultSetManagerResp.groupTimestamp;
}
- (SetManagerRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultSetManagerResp.hasGroupTimestamp = YES;
  resultSetManagerResp.groupTimestamp = value;
  return self;
}
- (SetManagerRespBuilder*) clearGroupTimestamp {
  resultSetManagerResp.hasGroupTimestamp = NO;
  resultSetManagerResp.groupTimestamp = 0L;
  return self;
}
@end

@interface DeleteManagerReq ()
@property SInt64 groupId;
@property (strong) NSMutableArray<AccountInfo*> * memberArray;
@end

@implementation DeleteManagerReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
@synthesize memberArray;
@dynamic member;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
  }
  return self;
}
static DeleteManagerReq* defaultDeleteManagerReqInstance = nil;
+ (void) initialize {
  if (self == [DeleteManagerReq class]) {
    defaultDeleteManagerReqInstance = [[DeleteManagerReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeleteManagerReqInstance;
}
- (instancetype) defaultInstance {
  return defaultDeleteManagerReqInstance;
}
- (NSArray<AccountInfo*> *)member {
  return memberArray;
}
- (AccountInfo*)memberAtIndex:(NSUInteger)index {
  return [memberArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteManagerReq*) parseFromData:(NSData*) data {
  return (DeleteManagerReq*)[[[DeleteManagerReq builder] mergeFromData:data] build];
}
+ (DeleteManagerReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteManagerReq*)[[[DeleteManagerReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeleteManagerReq*) parseFromInputStream:(NSInputStream*) input {
  return (DeleteManagerReq*)[[[DeleteManagerReq builder] mergeFromInputStream:input] build];
}
+ (DeleteManagerReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteManagerReq*)[[[DeleteManagerReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteManagerReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeleteManagerReq*)[[[DeleteManagerReq builder] mergeFromCodedInputStream:input] build];
}
+ (DeleteManagerReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteManagerReq*)[[[DeleteManagerReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteManagerReqBuilder*) builder {
  return [[DeleteManagerReqBuilder alloc] init];
}
+ (DeleteManagerReqBuilder*) builderWithPrototype:(DeleteManagerReq*) prototype {
  return [[DeleteManagerReq builder] mergeFrom:prototype];
}
- (DeleteManagerReqBuilder*) builder {
  return [DeleteManagerReq builder];
}
- (DeleteManagerReqBuilder*) toBuilder {
  return [DeleteManagerReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"member"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  for (AccountInfo* element in self.memberArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"member"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeleteManagerReq class]]) {
    return NO;
  }
  DeleteManagerReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      [self.memberArray isEqualToArray:otherMessage.memberArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  [self.memberArray enumerateObjectsUsingBlock:^(AccountInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeleteManagerReqBuilder()
@property (strong) DeleteManagerReq* resultDeleteManagerReq;
@end

@implementation DeleteManagerReqBuilder
@synthesize resultDeleteManagerReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteManagerReq = [[DeleteManagerReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteManagerReq;
}
- (DeleteManagerReqBuilder*) clear {
  self.resultDeleteManagerReq = [[DeleteManagerReq alloc] init];
  return self;
}
- (DeleteManagerReqBuilder*) clone {
  return [DeleteManagerReq builderWithPrototype:resultDeleteManagerReq];
}
- (DeleteManagerReq*) defaultInstance {
  return [DeleteManagerReq defaultInstance];
}
- (DeleteManagerReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeleteManagerReq*) buildPartial {
  DeleteManagerReq* returnMe = resultDeleteManagerReq;
  self.resultDeleteManagerReq = nil;
  return returnMe;
}
- (DeleteManagerReqBuilder*) mergeFrom:(DeleteManagerReq*) other {
  if (other == [DeleteManagerReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.memberArray.count > 0) {
    if (resultDeleteManagerReq.memberArray == nil) {
      resultDeleteManagerReq.memberArray = [[NSMutableArray alloc] initWithArray:other.memberArray];
    } else {
      [resultDeleteManagerReq.memberArray addObjectsFromArray:other.memberArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeleteManagerReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeleteManagerReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        AccountInfoBuilder* subBuilder = [AccountInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMember:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultDeleteManagerReq.hasGroupId;
}
- (SInt64) groupId {
  return resultDeleteManagerReq.groupId;
}
- (DeleteManagerReqBuilder*) setGroupId:(SInt64) value {
  resultDeleteManagerReq.hasGroupId = YES;
  resultDeleteManagerReq.groupId = value;
  return self;
}
- (DeleteManagerReqBuilder*) clearGroupId {
  resultDeleteManagerReq.hasGroupId = NO;
  resultDeleteManagerReq.groupId = 0L;
  return self;
}
- (NSMutableArray<AccountInfo*> *)member {
  return resultDeleteManagerReq.memberArray;
}
- (AccountInfo*)memberAtIndex:(NSUInteger)index {
  return [resultDeleteManagerReq memberAtIndex:index];
}
- (DeleteManagerReqBuilder *)addMember:(AccountInfo*)value {
  if (resultDeleteManagerReq.memberArray == nil) {
    resultDeleteManagerReq.memberArray = [[NSMutableArray alloc]init];
  }
  [resultDeleteManagerReq.memberArray addObject:value];
  return self;
}
- (DeleteManagerReqBuilder *)setMemberArray:(NSArray<AccountInfo*> *)array {
  resultDeleteManagerReq.memberArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (DeleteManagerReqBuilder *)clearMember {
  resultDeleteManagerReq.memberArray = nil;
  return self;
}
@end

@interface DeleteManagerResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation DeleteManagerResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static DeleteManagerResp* defaultDeleteManagerRespInstance = nil;
+ (void) initialize {
  if (self == [DeleteManagerResp class]) {
    defaultDeleteManagerRespInstance = [[DeleteManagerResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeleteManagerRespInstance;
}
- (instancetype) defaultInstance {
  return defaultDeleteManagerRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteManagerResp*) parseFromData:(NSData*) data {
  return (DeleteManagerResp*)[[[DeleteManagerResp builder] mergeFromData:data] build];
}
+ (DeleteManagerResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteManagerResp*)[[[DeleteManagerResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeleteManagerResp*) parseFromInputStream:(NSInputStream*) input {
  return (DeleteManagerResp*)[[[DeleteManagerResp builder] mergeFromInputStream:input] build];
}
+ (DeleteManagerResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteManagerResp*)[[[DeleteManagerResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteManagerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeleteManagerResp*)[[[DeleteManagerResp builder] mergeFromCodedInputStream:input] build];
}
+ (DeleteManagerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteManagerResp*)[[[DeleteManagerResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteManagerRespBuilder*) builder {
  return [[DeleteManagerRespBuilder alloc] init];
}
+ (DeleteManagerRespBuilder*) builderWithPrototype:(DeleteManagerResp*) prototype {
  return [[DeleteManagerResp builder] mergeFrom:prototype];
}
- (DeleteManagerRespBuilder*) builder {
  return [DeleteManagerResp builder];
}
- (DeleteManagerRespBuilder*) toBuilder {
  return [DeleteManagerResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeleteManagerResp class]]) {
    return NO;
  }
  DeleteManagerResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeleteManagerRespBuilder()
@property (strong) DeleteManagerResp* resultDeleteManagerResp;
@end

@implementation DeleteManagerRespBuilder
@synthesize resultDeleteManagerResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteManagerResp = [[DeleteManagerResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteManagerResp;
}
- (DeleteManagerRespBuilder*) clear {
  self.resultDeleteManagerResp = [[DeleteManagerResp alloc] init];
  return self;
}
- (DeleteManagerRespBuilder*) clone {
  return [DeleteManagerResp builderWithPrototype:resultDeleteManagerResp];
}
- (DeleteManagerResp*) defaultInstance {
  return [DeleteManagerResp defaultInstance];
}
- (DeleteManagerResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeleteManagerResp*) buildPartial {
  DeleteManagerResp* returnMe = resultDeleteManagerResp;
  self.resultDeleteManagerResp = nil;
  return returnMe;
}
- (DeleteManagerRespBuilder*) mergeFrom:(DeleteManagerResp*) other {
  if (other == [DeleteManagerResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeleteManagerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeleteManagerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultDeleteManagerResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultDeleteManagerResp.status;
}
- (DeleteManagerRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultDeleteManagerResp.hasStatus = YES;
  resultDeleteManagerResp.status = value;
  return self;
}
- (DeleteManagerRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (DeleteManagerRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultDeleteManagerResp.hasStatus &&
      resultDeleteManagerResp.status != [EIMRespHeader defaultInstance]) {
    resultDeleteManagerResp.status =
      [[[EIMRespHeader builderWithPrototype:resultDeleteManagerResp.status] mergeFrom:value] buildPartial];
  } else {
    resultDeleteManagerResp.status = value;
  }
  resultDeleteManagerResp.hasStatus = YES;
  return self;
}
- (DeleteManagerRespBuilder*) clearStatus {
  resultDeleteManagerResp.hasStatus = NO;
  resultDeleteManagerResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultDeleteManagerResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultDeleteManagerResp.groupTimestamp;
}
- (DeleteManagerRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultDeleteManagerResp.hasGroupTimestamp = YES;
  resultDeleteManagerResp.groupTimestamp = value;
  return self;
}
- (DeleteManagerRespBuilder*) clearGroupTimestamp {
  resultDeleteManagerResp.hasGroupTimestamp = NO;
  resultDeleteManagerResp.groupTimestamp = 0L;
  return self;
}
@end

@interface SetGroupAnnouncementReq ()
@property SInt64 groupId;
@property (strong) NSString* announcement;
@end

@implementation SetGroupAnnouncementReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasAnnouncement {
  return !!hasAnnouncement_;
}
- (void) setHasAnnouncement:(BOOL) _value_ {
  hasAnnouncement_ = !!_value_;
}
@synthesize announcement;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.announcement = @"";
  }
  return self;
}
static SetGroupAnnouncementReq* defaultSetGroupAnnouncementReqInstance = nil;
+ (void) initialize {
  if (self == [SetGroupAnnouncementReq class]) {
    defaultSetGroupAnnouncementReqInstance = [[SetGroupAnnouncementReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetGroupAnnouncementReqInstance;
}
- (instancetype) defaultInstance {
  return defaultSetGroupAnnouncementReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  if (self.hasAnnouncement) {
    [output writeString:2 value:self.announcement];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  if (self.hasAnnouncement) {
    size_ += computeStringSize(2, self.announcement);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetGroupAnnouncementReq*) parseFromData:(NSData*) data {
  return (SetGroupAnnouncementReq*)[[[SetGroupAnnouncementReq builder] mergeFromData:data] build];
}
+ (SetGroupAnnouncementReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupAnnouncementReq*)[[[SetGroupAnnouncementReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetGroupAnnouncementReq*) parseFromInputStream:(NSInputStream*) input {
  return (SetGroupAnnouncementReq*)[[[SetGroupAnnouncementReq builder] mergeFromInputStream:input] build];
}
+ (SetGroupAnnouncementReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupAnnouncementReq*)[[[SetGroupAnnouncementReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupAnnouncementReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetGroupAnnouncementReq*)[[[SetGroupAnnouncementReq builder] mergeFromCodedInputStream:input] build];
}
+ (SetGroupAnnouncementReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupAnnouncementReq*)[[[SetGroupAnnouncementReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupAnnouncementReqBuilder*) builder {
  return [[SetGroupAnnouncementReqBuilder alloc] init];
}
+ (SetGroupAnnouncementReqBuilder*) builderWithPrototype:(SetGroupAnnouncementReq*) prototype {
  return [[SetGroupAnnouncementReq builder] mergeFrom:prototype];
}
- (SetGroupAnnouncementReqBuilder*) builder {
  return [SetGroupAnnouncementReq builder];
}
- (SetGroupAnnouncementReqBuilder*) toBuilder {
  return [SetGroupAnnouncementReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasAnnouncement) {
    [output appendFormat:@"%@%@: %@\n", indent, @"announcement", self.announcement];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasAnnouncement) {
    [dictionary setObject: self.announcement forKey: @"announcement"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetGroupAnnouncementReq class]]) {
    return NO;
  }
  SetGroupAnnouncementReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasAnnouncement == otherMessage.hasAnnouncement &&
      (!self.hasAnnouncement || [self.announcement isEqual:otherMessage.announcement]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasAnnouncement) {
    hashCode = hashCode * 31 + [self.announcement hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetGroupAnnouncementReqBuilder()
@property (strong) SetGroupAnnouncementReq* resultSetGroupAnnouncementReq;
@end

@implementation SetGroupAnnouncementReqBuilder
@synthesize resultSetGroupAnnouncementReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetGroupAnnouncementReq = [[SetGroupAnnouncementReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetGroupAnnouncementReq;
}
- (SetGroupAnnouncementReqBuilder*) clear {
  self.resultSetGroupAnnouncementReq = [[SetGroupAnnouncementReq alloc] init];
  return self;
}
- (SetGroupAnnouncementReqBuilder*) clone {
  return [SetGroupAnnouncementReq builderWithPrototype:resultSetGroupAnnouncementReq];
}
- (SetGroupAnnouncementReq*) defaultInstance {
  return [SetGroupAnnouncementReq defaultInstance];
}
- (SetGroupAnnouncementReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetGroupAnnouncementReq*) buildPartial {
  SetGroupAnnouncementReq* returnMe = resultSetGroupAnnouncementReq;
  self.resultSetGroupAnnouncementReq = nil;
  return returnMe;
}
- (SetGroupAnnouncementReqBuilder*) mergeFrom:(SetGroupAnnouncementReq*) other {
  if (other == [SetGroupAnnouncementReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasAnnouncement) {
    [self setAnnouncement:other.announcement];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetGroupAnnouncementReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetGroupAnnouncementReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        [self setAnnouncement:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultSetGroupAnnouncementReq.hasGroupId;
}
- (SInt64) groupId {
  return resultSetGroupAnnouncementReq.groupId;
}
- (SetGroupAnnouncementReqBuilder*) setGroupId:(SInt64) value {
  resultSetGroupAnnouncementReq.hasGroupId = YES;
  resultSetGroupAnnouncementReq.groupId = value;
  return self;
}
- (SetGroupAnnouncementReqBuilder*) clearGroupId {
  resultSetGroupAnnouncementReq.hasGroupId = NO;
  resultSetGroupAnnouncementReq.groupId = 0L;
  return self;
}
- (BOOL) hasAnnouncement {
  return resultSetGroupAnnouncementReq.hasAnnouncement;
}
- (NSString*) announcement {
  return resultSetGroupAnnouncementReq.announcement;
}
- (SetGroupAnnouncementReqBuilder*) setAnnouncement:(NSString*) value {
  resultSetGroupAnnouncementReq.hasAnnouncement = YES;
  resultSetGroupAnnouncementReq.announcement = value;
  return self;
}
- (SetGroupAnnouncementReqBuilder*) clearAnnouncement {
  resultSetGroupAnnouncementReq.hasAnnouncement = NO;
  resultSetGroupAnnouncementReq.announcement = @"";
  return self;
}
@end

@interface SetGroupAnnouncementResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation SetGroupAnnouncementResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static SetGroupAnnouncementResp* defaultSetGroupAnnouncementRespInstance = nil;
+ (void) initialize {
  if (self == [SetGroupAnnouncementResp class]) {
    defaultSetGroupAnnouncementRespInstance = [[SetGroupAnnouncementResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetGroupAnnouncementRespInstance;
}
- (instancetype) defaultInstance {
  return defaultSetGroupAnnouncementRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetGroupAnnouncementResp*) parseFromData:(NSData*) data {
  return (SetGroupAnnouncementResp*)[[[SetGroupAnnouncementResp builder] mergeFromData:data] build];
}
+ (SetGroupAnnouncementResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupAnnouncementResp*)[[[SetGroupAnnouncementResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetGroupAnnouncementResp*) parseFromInputStream:(NSInputStream*) input {
  return (SetGroupAnnouncementResp*)[[[SetGroupAnnouncementResp builder] mergeFromInputStream:input] build];
}
+ (SetGroupAnnouncementResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupAnnouncementResp*)[[[SetGroupAnnouncementResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupAnnouncementResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetGroupAnnouncementResp*)[[[SetGroupAnnouncementResp builder] mergeFromCodedInputStream:input] build];
}
+ (SetGroupAnnouncementResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupAnnouncementResp*)[[[SetGroupAnnouncementResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupAnnouncementRespBuilder*) builder {
  return [[SetGroupAnnouncementRespBuilder alloc] init];
}
+ (SetGroupAnnouncementRespBuilder*) builderWithPrototype:(SetGroupAnnouncementResp*) prototype {
  return [[SetGroupAnnouncementResp builder] mergeFrom:prototype];
}
- (SetGroupAnnouncementRespBuilder*) builder {
  return [SetGroupAnnouncementResp builder];
}
- (SetGroupAnnouncementRespBuilder*) toBuilder {
  return [SetGroupAnnouncementResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetGroupAnnouncementResp class]]) {
    return NO;
  }
  SetGroupAnnouncementResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetGroupAnnouncementRespBuilder()
@property (strong) SetGroupAnnouncementResp* resultSetGroupAnnouncementResp;
@end

@implementation SetGroupAnnouncementRespBuilder
@synthesize resultSetGroupAnnouncementResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetGroupAnnouncementResp = [[SetGroupAnnouncementResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetGroupAnnouncementResp;
}
- (SetGroupAnnouncementRespBuilder*) clear {
  self.resultSetGroupAnnouncementResp = [[SetGroupAnnouncementResp alloc] init];
  return self;
}
- (SetGroupAnnouncementRespBuilder*) clone {
  return [SetGroupAnnouncementResp builderWithPrototype:resultSetGroupAnnouncementResp];
}
- (SetGroupAnnouncementResp*) defaultInstance {
  return [SetGroupAnnouncementResp defaultInstance];
}
- (SetGroupAnnouncementResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetGroupAnnouncementResp*) buildPartial {
  SetGroupAnnouncementResp* returnMe = resultSetGroupAnnouncementResp;
  self.resultSetGroupAnnouncementResp = nil;
  return returnMe;
}
- (SetGroupAnnouncementRespBuilder*) mergeFrom:(SetGroupAnnouncementResp*) other {
  if (other == [SetGroupAnnouncementResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetGroupAnnouncementRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetGroupAnnouncementRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultSetGroupAnnouncementResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultSetGroupAnnouncementResp.status;
}
- (SetGroupAnnouncementRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultSetGroupAnnouncementResp.hasStatus = YES;
  resultSetGroupAnnouncementResp.status = value;
  return self;
}
- (SetGroupAnnouncementRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (SetGroupAnnouncementRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultSetGroupAnnouncementResp.hasStatus &&
      resultSetGroupAnnouncementResp.status != [EIMRespHeader defaultInstance]) {
    resultSetGroupAnnouncementResp.status =
      [[[EIMRespHeader builderWithPrototype:resultSetGroupAnnouncementResp.status] mergeFrom:value] buildPartial];
  } else {
    resultSetGroupAnnouncementResp.status = value;
  }
  resultSetGroupAnnouncementResp.hasStatus = YES;
  return self;
}
- (SetGroupAnnouncementRespBuilder*) clearStatus {
  resultSetGroupAnnouncementResp.hasStatus = NO;
  resultSetGroupAnnouncementResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultSetGroupAnnouncementResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultSetGroupAnnouncementResp.groupTimestamp;
}
- (SetGroupAnnouncementRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultSetGroupAnnouncementResp.hasGroupTimestamp = YES;
  resultSetGroupAnnouncementResp.groupTimestamp = value;
  return self;
}
- (SetGroupAnnouncementRespBuilder*) clearGroupTimestamp {
  resultSetGroupAnnouncementResp.hasGroupTimestamp = NO;
  resultSetGroupAnnouncementResp.groupTimestamp = 0L;
  return self;
}
@end

@interface SetGroupNameReq ()
@property SInt64 groupId;
@property (strong) NSString* name;
@end

@implementation SetGroupNameReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.name = @"";
  }
  return self;
}
static SetGroupNameReq* defaultSetGroupNameReqInstance = nil;
+ (void) initialize {
  if (self == [SetGroupNameReq class]) {
    defaultSetGroupNameReqInstance = [[SetGroupNameReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetGroupNameReqInstance;
}
- (instancetype) defaultInstance {
  return defaultSetGroupNameReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetGroupNameReq*) parseFromData:(NSData*) data {
  return (SetGroupNameReq*)[[[SetGroupNameReq builder] mergeFromData:data] build];
}
+ (SetGroupNameReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupNameReq*)[[[SetGroupNameReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetGroupNameReq*) parseFromInputStream:(NSInputStream*) input {
  return (SetGroupNameReq*)[[[SetGroupNameReq builder] mergeFromInputStream:input] build];
}
+ (SetGroupNameReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupNameReq*)[[[SetGroupNameReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupNameReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetGroupNameReq*)[[[SetGroupNameReq builder] mergeFromCodedInputStream:input] build];
}
+ (SetGroupNameReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupNameReq*)[[[SetGroupNameReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupNameReqBuilder*) builder {
  return [[SetGroupNameReqBuilder alloc] init];
}
+ (SetGroupNameReqBuilder*) builderWithPrototype:(SetGroupNameReq*) prototype {
  return [[SetGroupNameReq builder] mergeFrom:prototype];
}
- (SetGroupNameReqBuilder*) builder {
  return [SetGroupNameReq builder];
}
- (SetGroupNameReqBuilder*) toBuilder {
  return [SetGroupNameReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetGroupNameReq class]]) {
    return NO;
  }
  SetGroupNameReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetGroupNameReqBuilder()
@property (strong) SetGroupNameReq* resultSetGroupNameReq;
@end

@implementation SetGroupNameReqBuilder
@synthesize resultSetGroupNameReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetGroupNameReq = [[SetGroupNameReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetGroupNameReq;
}
- (SetGroupNameReqBuilder*) clear {
  self.resultSetGroupNameReq = [[SetGroupNameReq alloc] init];
  return self;
}
- (SetGroupNameReqBuilder*) clone {
  return [SetGroupNameReq builderWithPrototype:resultSetGroupNameReq];
}
- (SetGroupNameReq*) defaultInstance {
  return [SetGroupNameReq defaultInstance];
}
- (SetGroupNameReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetGroupNameReq*) buildPartial {
  SetGroupNameReq* returnMe = resultSetGroupNameReq;
  self.resultSetGroupNameReq = nil;
  return returnMe;
}
- (SetGroupNameReqBuilder*) mergeFrom:(SetGroupNameReq*) other {
  if (other == [SetGroupNameReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetGroupNameReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetGroupNameReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultSetGroupNameReq.hasGroupId;
}
- (SInt64) groupId {
  return resultSetGroupNameReq.groupId;
}
- (SetGroupNameReqBuilder*) setGroupId:(SInt64) value {
  resultSetGroupNameReq.hasGroupId = YES;
  resultSetGroupNameReq.groupId = value;
  return self;
}
- (SetGroupNameReqBuilder*) clearGroupId {
  resultSetGroupNameReq.hasGroupId = NO;
  resultSetGroupNameReq.groupId = 0L;
  return self;
}
- (BOOL) hasName {
  return resultSetGroupNameReq.hasName;
}
- (NSString*) name {
  return resultSetGroupNameReq.name;
}
- (SetGroupNameReqBuilder*) setName:(NSString*) value {
  resultSetGroupNameReq.hasName = YES;
  resultSetGroupNameReq.name = value;
  return self;
}
- (SetGroupNameReqBuilder*) clearName {
  resultSetGroupNameReq.hasName = NO;
  resultSetGroupNameReq.name = @"";
  return self;
}
@end

@interface SetGroupNameResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation SetGroupNameResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static SetGroupNameResp* defaultSetGroupNameRespInstance = nil;
+ (void) initialize {
  if (self == [SetGroupNameResp class]) {
    defaultSetGroupNameRespInstance = [[SetGroupNameResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetGroupNameRespInstance;
}
- (instancetype) defaultInstance {
  return defaultSetGroupNameRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetGroupNameResp*) parseFromData:(NSData*) data {
  return (SetGroupNameResp*)[[[SetGroupNameResp builder] mergeFromData:data] build];
}
+ (SetGroupNameResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupNameResp*)[[[SetGroupNameResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetGroupNameResp*) parseFromInputStream:(NSInputStream*) input {
  return (SetGroupNameResp*)[[[SetGroupNameResp builder] mergeFromInputStream:input] build];
}
+ (SetGroupNameResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupNameResp*)[[[SetGroupNameResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupNameResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetGroupNameResp*)[[[SetGroupNameResp builder] mergeFromCodedInputStream:input] build];
}
+ (SetGroupNameResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupNameResp*)[[[SetGroupNameResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupNameRespBuilder*) builder {
  return [[SetGroupNameRespBuilder alloc] init];
}
+ (SetGroupNameRespBuilder*) builderWithPrototype:(SetGroupNameResp*) prototype {
  return [[SetGroupNameResp builder] mergeFrom:prototype];
}
- (SetGroupNameRespBuilder*) builder {
  return [SetGroupNameResp builder];
}
- (SetGroupNameRespBuilder*) toBuilder {
  return [SetGroupNameResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetGroupNameResp class]]) {
    return NO;
  }
  SetGroupNameResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetGroupNameRespBuilder()
@property (strong) SetGroupNameResp* resultSetGroupNameResp;
@end

@implementation SetGroupNameRespBuilder
@synthesize resultSetGroupNameResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetGroupNameResp = [[SetGroupNameResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetGroupNameResp;
}
- (SetGroupNameRespBuilder*) clear {
  self.resultSetGroupNameResp = [[SetGroupNameResp alloc] init];
  return self;
}
- (SetGroupNameRespBuilder*) clone {
  return [SetGroupNameResp builderWithPrototype:resultSetGroupNameResp];
}
- (SetGroupNameResp*) defaultInstance {
  return [SetGroupNameResp defaultInstance];
}
- (SetGroupNameResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetGroupNameResp*) buildPartial {
  SetGroupNameResp* returnMe = resultSetGroupNameResp;
  self.resultSetGroupNameResp = nil;
  return returnMe;
}
- (SetGroupNameRespBuilder*) mergeFrom:(SetGroupNameResp*) other {
  if (other == [SetGroupNameResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetGroupNameRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetGroupNameRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultSetGroupNameResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultSetGroupNameResp.status;
}
- (SetGroupNameRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultSetGroupNameResp.hasStatus = YES;
  resultSetGroupNameResp.status = value;
  return self;
}
- (SetGroupNameRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (SetGroupNameRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultSetGroupNameResp.hasStatus &&
      resultSetGroupNameResp.status != [EIMRespHeader defaultInstance]) {
    resultSetGroupNameResp.status =
      [[[EIMRespHeader builderWithPrototype:resultSetGroupNameResp.status] mergeFrom:value] buildPartial];
  } else {
    resultSetGroupNameResp.status = value;
  }
  resultSetGroupNameResp.hasStatus = YES;
  return self;
}
- (SetGroupNameRespBuilder*) clearStatus {
  resultSetGroupNameResp.hasStatus = NO;
  resultSetGroupNameResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultSetGroupNameResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultSetGroupNameResp.groupTimestamp;
}
- (SetGroupNameRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultSetGroupNameResp.hasGroupTimestamp = YES;
  resultSetGroupNameResp.groupTimestamp = value;
  return self;
}
- (SetGroupNameRespBuilder*) clearGroupTimestamp {
  resultSetGroupNameResp.hasGroupTimestamp = NO;
  resultSetGroupNameResp.groupTimestamp = 0L;
  return self;
}
@end

@interface SetGroupUserNickNameReq ()
@property SInt64 groupId;
@property (strong) NSString* nickName;
@end

@implementation SetGroupUserNickNameReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) _value_ {
  hasNickName_ = !!_value_;
}
@synthesize nickName;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.nickName = @"";
  }
  return self;
}
static SetGroupUserNickNameReq* defaultSetGroupUserNickNameReqInstance = nil;
+ (void) initialize {
  if (self == [SetGroupUserNickNameReq class]) {
    defaultSetGroupUserNickNameReqInstance = [[SetGroupUserNickNameReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetGroupUserNickNameReqInstance;
}
- (instancetype) defaultInstance {
  return defaultSetGroupUserNickNameReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(2, self.nickName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetGroupUserNickNameReq*) parseFromData:(NSData*) data {
  return (SetGroupUserNickNameReq*)[[[SetGroupUserNickNameReq builder] mergeFromData:data] build];
}
+ (SetGroupUserNickNameReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupUserNickNameReq*)[[[SetGroupUserNickNameReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetGroupUserNickNameReq*) parseFromInputStream:(NSInputStream*) input {
  return (SetGroupUserNickNameReq*)[[[SetGroupUserNickNameReq builder] mergeFromInputStream:input] build];
}
+ (SetGroupUserNickNameReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupUserNickNameReq*)[[[SetGroupUserNickNameReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupUserNickNameReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetGroupUserNickNameReq*)[[[SetGroupUserNickNameReq builder] mergeFromCodedInputStream:input] build];
}
+ (SetGroupUserNickNameReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupUserNickNameReq*)[[[SetGroupUserNickNameReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupUserNickNameReqBuilder*) builder {
  return [[SetGroupUserNickNameReqBuilder alloc] init];
}
+ (SetGroupUserNickNameReqBuilder*) builderWithPrototype:(SetGroupUserNickNameReq*) prototype {
  return [[SetGroupUserNickNameReq builder] mergeFrom:prototype];
}
- (SetGroupUserNickNameReqBuilder*) builder {
  return [SetGroupUserNickNameReq builder];
}
- (SetGroupUserNickNameReqBuilder*) toBuilder {
  return [SetGroupUserNickNameReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasNickName) {
    [dictionary setObject: self.nickName forKey: @"nickName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetGroupUserNickNameReq class]]) {
    return NO;
  }
  SetGroupUserNickNameReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetGroupUserNickNameReqBuilder()
@property (strong) SetGroupUserNickNameReq* resultSetGroupUserNickNameReq;
@end

@implementation SetGroupUserNickNameReqBuilder
@synthesize resultSetGroupUserNickNameReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetGroupUserNickNameReq = [[SetGroupUserNickNameReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetGroupUserNickNameReq;
}
- (SetGroupUserNickNameReqBuilder*) clear {
  self.resultSetGroupUserNickNameReq = [[SetGroupUserNickNameReq alloc] init];
  return self;
}
- (SetGroupUserNickNameReqBuilder*) clone {
  return [SetGroupUserNickNameReq builderWithPrototype:resultSetGroupUserNickNameReq];
}
- (SetGroupUserNickNameReq*) defaultInstance {
  return [SetGroupUserNickNameReq defaultInstance];
}
- (SetGroupUserNickNameReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetGroupUserNickNameReq*) buildPartial {
  SetGroupUserNickNameReq* returnMe = resultSetGroupUserNickNameReq;
  self.resultSetGroupUserNickNameReq = nil;
  return returnMe;
}
- (SetGroupUserNickNameReqBuilder*) mergeFrom:(SetGroupUserNickNameReq*) other {
  if (other == [SetGroupUserNickNameReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetGroupUserNickNameReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetGroupUserNickNameReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultSetGroupUserNickNameReq.hasGroupId;
}
- (SInt64) groupId {
  return resultSetGroupUserNickNameReq.groupId;
}
- (SetGroupUserNickNameReqBuilder*) setGroupId:(SInt64) value {
  resultSetGroupUserNickNameReq.hasGroupId = YES;
  resultSetGroupUserNickNameReq.groupId = value;
  return self;
}
- (SetGroupUserNickNameReqBuilder*) clearGroupId {
  resultSetGroupUserNickNameReq.hasGroupId = NO;
  resultSetGroupUserNickNameReq.groupId = 0L;
  return self;
}
- (BOOL) hasNickName {
  return resultSetGroupUserNickNameReq.hasNickName;
}
- (NSString*) nickName {
  return resultSetGroupUserNickNameReq.nickName;
}
- (SetGroupUserNickNameReqBuilder*) setNickName:(NSString*) value {
  resultSetGroupUserNickNameReq.hasNickName = YES;
  resultSetGroupUserNickNameReq.nickName = value;
  return self;
}
- (SetGroupUserNickNameReqBuilder*) clearNickName {
  resultSetGroupUserNickNameReq.hasNickName = NO;
  resultSetGroupUserNickNameReq.nickName = @"";
  return self;
}
@end

@interface SetGroupUserNickNameResp ()
@property (strong) EIMRespHeader* status;
@property UInt64 groupTimestamp;
@end

@implementation SetGroupUserNickNameResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasGroupTimestamp {
  return !!hasGroupTimestamp_;
}
- (void) setHasGroupTimestamp:(BOOL) _value_ {
  hasGroupTimestamp_ = !!_value_;
}
@synthesize groupTimestamp;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
    self.groupTimestamp = 0L;
  }
  return self;
}
static SetGroupUserNickNameResp* defaultSetGroupUserNickNameRespInstance = nil;
+ (void) initialize {
  if (self == [SetGroupUserNickNameResp class]) {
    defaultSetGroupUserNickNameRespInstance = [[SetGroupUserNickNameResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSetGroupUserNickNameRespInstance;
}
- (instancetype) defaultInstance {
  return defaultSetGroupUserNickNameRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  if (self.hasGroupTimestamp) {
    [output writeUInt64:2 value:self.groupTimestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  if (self.hasGroupTimestamp) {
    size_ += computeUInt64Size(2, self.groupTimestamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SetGroupUserNickNameResp*) parseFromData:(NSData*) data {
  return (SetGroupUserNickNameResp*)[[[SetGroupUserNickNameResp builder] mergeFromData:data] build];
}
+ (SetGroupUserNickNameResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupUserNickNameResp*)[[[SetGroupUserNickNameResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SetGroupUserNickNameResp*) parseFromInputStream:(NSInputStream*) input {
  return (SetGroupUserNickNameResp*)[[[SetGroupUserNickNameResp builder] mergeFromInputStream:input] build];
}
+ (SetGroupUserNickNameResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupUserNickNameResp*)[[[SetGroupUserNickNameResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupUserNickNameResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SetGroupUserNickNameResp*)[[[SetGroupUserNickNameResp builder] mergeFromCodedInputStream:input] build];
}
+ (SetGroupUserNickNameResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SetGroupUserNickNameResp*)[[[SetGroupUserNickNameResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SetGroupUserNickNameRespBuilder*) builder {
  return [[SetGroupUserNickNameRespBuilder alloc] init];
}
+ (SetGroupUserNickNameRespBuilder*) builderWithPrototype:(SetGroupUserNickNameResp*) prototype {
  return [[SetGroupUserNickNameResp builder] mergeFrom:prototype];
}
- (SetGroupUserNickNameRespBuilder*) builder {
  return [SetGroupUserNickNameResp builder];
}
- (SetGroupUserNickNameRespBuilder*) toBuilder {
  return [SetGroupUserNickNameResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasGroupTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupTimestamp", [NSNumber numberWithLongLong:self.groupTimestamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  if (self.hasGroupTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupTimestamp] forKey: @"groupTimestamp"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SetGroupUserNickNameResp class]]) {
    return NO;
  }
  SetGroupUserNickNameResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      self.hasGroupTimestamp == otherMessage.hasGroupTimestamp &&
      (!self.hasGroupTimestamp || self.groupTimestamp == otherMessage.groupTimestamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  if (self.hasGroupTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupTimestamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SetGroupUserNickNameRespBuilder()
@property (strong) SetGroupUserNickNameResp* resultSetGroupUserNickNameResp;
@end

@implementation SetGroupUserNickNameRespBuilder
@synthesize resultSetGroupUserNickNameResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetGroupUserNickNameResp = [[SetGroupUserNickNameResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetGroupUserNickNameResp;
}
- (SetGroupUserNickNameRespBuilder*) clear {
  self.resultSetGroupUserNickNameResp = [[SetGroupUserNickNameResp alloc] init];
  return self;
}
- (SetGroupUserNickNameRespBuilder*) clone {
  return [SetGroupUserNickNameResp builderWithPrototype:resultSetGroupUserNickNameResp];
}
- (SetGroupUserNickNameResp*) defaultInstance {
  return [SetGroupUserNickNameResp defaultInstance];
}
- (SetGroupUserNickNameResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SetGroupUserNickNameResp*) buildPartial {
  SetGroupUserNickNameResp* returnMe = resultSetGroupUserNickNameResp;
  self.resultSetGroupUserNickNameResp = nil;
  return returnMe;
}
- (SetGroupUserNickNameRespBuilder*) mergeFrom:(SetGroupUserNickNameResp*) other {
  if (other == [SetGroupUserNickNameResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  if (other.hasGroupTimestamp) {
    [self setGroupTimestamp:other.groupTimestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SetGroupUserNickNameRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SetGroupUserNickNameRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGroupTimestamp:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultSetGroupUserNickNameResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultSetGroupUserNickNameResp.status;
}
- (SetGroupUserNickNameRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultSetGroupUserNickNameResp.hasStatus = YES;
  resultSetGroupUserNickNameResp.status = value;
  return self;
}
- (SetGroupUserNickNameRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (SetGroupUserNickNameRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultSetGroupUserNickNameResp.hasStatus &&
      resultSetGroupUserNickNameResp.status != [EIMRespHeader defaultInstance]) {
    resultSetGroupUserNickNameResp.status =
      [[[EIMRespHeader builderWithPrototype:resultSetGroupUserNickNameResp.status] mergeFrom:value] buildPartial];
  } else {
    resultSetGroupUserNickNameResp.status = value;
  }
  resultSetGroupUserNickNameResp.hasStatus = YES;
  return self;
}
- (SetGroupUserNickNameRespBuilder*) clearStatus {
  resultSetGroupUserNickNameResp.hasStatus = NO;
  resultSetGroupUserNickNameResp.status = [EIMRespHeader defaultInstance];
  return self;
}
- (BOOL) hasGroupTimestamp {
  return resultSetGroupUserNickNameResp.hasGroupTimestamp;
}
- (UInt64) groupTimestamp {
  return resultSetGroupUserNickNameResp.groupTimestamp;
}
- (SetGroupUserNickNameRespBuilder*) setGroupTimestamp:(UInt64) value {
  resultSetGroupUserNickNameResp.hasGroupTimestamp = YES;
  resultSetGroupUserNickNameResp.groupTimestamp = value;
  return self;
}
- (SetGroupUserNickNameRespBuilder*) clearGroupTimestamp {
  resultSetGroupUserNickNameResp.hasGroupTimestamp = NO;
  resultSetGroupUserNickNameResp.groupTimestamp = 0L;
  return self;
}
@end

@interface QuitGroupReq ()
@property SInt64 groupId;
@property (strong) NSString* nickName;
@end

@implementation QuitGroupReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) _value_ {
  hasNickName_ = !!_value_;
}
@synthesize nickName;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.nickName = @"";
  }
  return self;
}
static QuitGroupReq* defaultQuitGroupReqInstance = nil;
+ (void) initialize {
  if (self == [QuitGroupReq class]) {
    defaultQuitGroupReqInstance = [[QuitGroupReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultQuitGroupReqInstance;
}
- (instancetype) defaultInstance {
  return defaultQuitGroupReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(2, self.nickName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QuitGroupReq*) parseFromData:(NSData*) data {
  return (QuitGroupReq*)[[[QuitGroupReq builder] mergeFromData:data] build];
}
+ (QuitGroupReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuitGroupReq*)[[[QuitGroupReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuitGroupReq*) parseFromInputStream:(NSInputStream*) input {
  return (QuitGroupReq*)[[[QuitGroupReq builder] mergeFromInputStream:input] build];
}
+ (QuitGroupReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuitGroupReq*)[[[QuitGroupReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuitGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuitGroupReq*)[[[QuitGroupReq builder] mergeFromCodedInputStream:input] build];
}
+ (QuitGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuitGroupReq*)[[[QuitGroupReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuitGroupReqBuilder*) builder {
  return [[QuitGroupReqBuilder alloc] init];
}
+ (QuitGroupReqBuilder*) builderWithPrototype:(QuitGroupReq*) prototype {
  return [[QuitGroupReq builder] mergeFrom:prototype];
}
- (QuitGroupReqBuilder*) builder {
  return [QuitGroupReq builder];
}
- (QuitGroupReqBuilder*) toBuilder {
  return [QuitGroupReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasNickName) {
    [dictionary setObject: self.nickName forKey: @"nickName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QuitGroupReq class]]) {
    return NO;
  }
  QuitGroupReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QuitGroupReqBuilder()
@property (strong) QuitGroupReq* resultQuitGroupReq;
@end

@implementation QuitGroupReqBuilder
@synthesize resultQuitGroupReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultQuitGroupReq = [[QuitGroupReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultQuitGroupReq;
}
- (QuitGroupReqBuilder*) clear {
  self.resultQuitGroupReq = [[QuitGroupReq alloc] init];
  return self;
}
- (QuitGroupReqBuilder*) clone {
  return [QuitGroupReq builderWithPrototype:resultQuitGroupReq];
}
- (QuitGroupReq*) defaultInstance {
  return [QuitGroupReq defaultInstance];
}
- (QuitGroupReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuitGroupReq*) buildPartial {
  QuitGroupReq* returnMe = resultQuitGroupReq;
  self.resultQuitGroupReq = nil;
  return returnMe;
}
- (QuitGroupReqBuilder*) mergeFrom:(QuitGroupReq*) other {
  if (other == [QuitGroupReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuitGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuitGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultQuitGroupReq.hasGroupId;
}
- (SInt64) groupId {
  return resultQuitGroupReq.groupId;
}
- (QuitGroupReqBuilder*) setGroupId:(SInt64) value {
  resultQuitGroupReq.hasGroupId = YES;
  resultQuitGroupReq.groupId = value;
  return self;
}
- (QuitGroupReqBuilder*) clearGroupId {
  resultQuitGroupReq.hasGroupId = NO;
  resultQuitGroupReq.groupId = 0L;
  return self;
}
- (BOOL) hasNickName {
  return resultQuitGroupReq.hasNickName;
}
- (NSString*) nickName {
  return resultQuitGroupReq.nickName;
}
- (QuitGroupReqBuilder*) setNickName:(NSString*) value {
  resultQuitGroupReq.hasNickName = YES;
  resultQuitGroupReq.nickName = value;
  return self;
}
- (QuitGroupReqBuilder*) clearNickName {
  resultQuitGroupReq.hasNickName = NO;
  resultQuitGroupReq.nickName = @"";
  return self;
}
@end

@interface QuitGroupResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation QuitGroupResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static QuitGroupResp* defaultQuitGroupRespInstance = nil;
+ (void) initialize {
  if (self == [QuitGroupResp class]) {
    defaultQuitGroupRespInstance = [[QuitGroupResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultQuitGroupRespInstance;
}
- (instancetype) defaultInstance {
  return defaultQuitGroupRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (QuitGroupResp*) parseFromData:(NSData*) data {
  return (QuitGroupResp*)[[[QuitGroupResp builder] mergeFromData:data] build];
}
+ (QuitGroupResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuitGroupResp*)[[[QuitGroupResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuitGroupResp*) parseFromInputStream:(NSInputStream*) input {
  return (QuitGroupResp*)[[[QuitGroupResp builder] mergeFromInputStream:input] build];
}
+ (QuitGroupResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuitGroupResp*)[[[QuitGroupResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuitGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuitGroupResp*)[[[QuitGroupResp builder] mergeFromCodedInputStream:input] build];
}
+ (QuitGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuitGroupResp*)[[[QuitGroupResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuitGroupRespBuilder*) builder {
  return [[QuitGroupRespBuilder alloc] init];
}
+ (QuitGroupRespBuilder*) builderWithPrototype:(QuitGroupResp*) prototype {
  return [[QuitGroupResp builder] mergeFrom:prototype];
}
- (QuitGroupRespBuilder*) builder {
  return [QuitGroupResp builder];
}
- (QuitGroupRespBuilder*) toBuilder {
  return [QuitGroupResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[QuitGroupResp class]]) {
    return NO;
  }
  QuitGroupResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface QuitGroupRespBuilder()
@property (strong) QuitGroupResp* resultQuitGroupResp;
@end

@implementation QuitGroupRespBuilder
@synthesize resultQuitGroupResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultQuitGroupResp = [[QuitGroupResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultQuitGroupResp;
}
- (QuitGroupRespBuilder*) clear {
  self.resultQuitGroupResp = [[QuitGroupResp alloc] init];
  return self;
}
- (QuitGroupRespBuilder*) clone {
  return [QuitGroupResp builderWithPrototype:resultQuitGroupResp];
}
- (QuitGroupResp*) defaultInstance {
  return [QuitGroupResp defaultInstance];
}
- (QuitGroupResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuitGroupResp*) buildPartial {
  QuitGroupResp* returnMe = resultQuitGroupResp;
  self.resultQuitGroupResp = nil;
  return returnMe;
}
- (QuitGroupRespBuilder*) mergeFrom:(QuitGroupResp*) other {
  if (other == [QuitGroupResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuitGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuitGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultQuitGroupResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultQuitGroupResp.status;
}
- (QuitGroupRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultQuitGroupResp.hasStatus = YES;
  resultQuitGroupResp.status = value;
  return self;
}
- (QuitGroupRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (QuitGroupRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultQuitGroupResp.hasStatus &&
      resultQuitGroupResp.status != [EIMRespHeader defaultInstance]) {
    resultQuitGroupResp.status =
      [[[EIMRespHeader builderWithPrototype:resultQuitGroupResp.status] mergeFrom:value] buildPartial];
  } else {
    resultQuitGroupResp.status = value;
  }
  resultQuitGroupResp.hasStatus = YES;
  return self;
}
- (QuitGroupRespBuilder*) clearStatus {
  resultQuitGroupResp.hasStatus = NO;
  resultQuitGroupResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end

@interface ReportRunStatusReq ()
@property (strong) NSString* status;
@end

@implementation ReportRunStatusReq

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = @"";
  }
  return self;
}
static ReportRunStatusReq* defaultReportRunStatusReqInstance = nil;
+ (void) initialize {
  if (self == [ReportRunStatusReq class]) {
    defaultReportRunStatusReqInstance = [[ReportRunStatusReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultReportRunStatusReqInstance;
}
- (instancetype) defaultInstance {
  return defaultReportRunStatusReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeString:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeStringSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReportRunStatusReq*) parseFromData:(NSData*) data {
  return (ReportRunStatusReq*)[[[ReportRunStatusReq builder] mergeFromData:data] build];
}
+ (ReportRunStatusReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReportRunStatusReq*)[[[ReportRunStatusReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReportRunStatusReq*) parseFromInputStream:(NSInputStream*) input {
  return (ReportRunStatusReq*)[[[ReportRunStatusReq builder] mergeFromInputStream:input] build];
}
+ (ReportRunStatusReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReportRunStatusReq*)[[[ReportRunStatusReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReportRunStatusReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReportRunStatusReq*)[[[ReportRunStatusReq builder] mergeFromCodedInputStream:input] build];
}
+ (ReportRunStatusReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReportRunStatusReq*)[[[ReportRunStatusReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReportRunStatusReqBuilder*) builder {
  return [[ReportRunStatusReqBuilder alloc] init];
}
+ (ReportRunStatusReqBuilder*) builderWithPrototype:(ReportRunStatusReq*) prototype {
  return [[ReportRunStatusReq builder] mergeFrom:prototype];
}
- (ReportRunStatusReqBuilder*) builder {
  return [ReportRunStatusReq builder];
}
- (ReportRunStatusReqBuilder*) toBuilder {
  return [ReportRunStatusReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", self.status];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
    [dictionary setObject: self.status forKey: @"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReportRunStatusReq class]]) {
    return NO;
  }
  ReportRunStatusReq *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReportRunStatusReqBuilder()
@property (strong) ReportRunStatusReq* resultReportRunStatusReq;
@end

@implementation ReportRunStatusReqBuilder
@synthesize resultReportRunStatusReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReportRunStatusReq = [[ReportRunStatusReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReportRunStatusReq;
}
- (ReportRunStatusReqBuilder*) clear {
  self.resultReportRunStatusReq = [[ReportRunStatusReq alloc] init];
  return self;
}
- (ReportRunStatusReqBuilder*) clone {
  return [ReportRunStatusReq builderWithPrototype:resultReportRunStatusReq];
}
- (ReportRunStatusReq*) defaultInstance {
  return [ReportRunStatusReq defaultInstance];
}
- (ReportRunStatusReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReportRunStatusReq*) buildPartial {
  ReportRunStatusReq* returnMe = resultReportRunStatusReq;
  self.resultReportRunStatusReq = nil;
  return returnMe;
}
- (ReportRunStatusReqBuilder*) mergeFrom:(ReportRunStatusReq*) other {
  if (other == [ReportRunStatusReq defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReportRunStatusReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReportRunStatusReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setStatus:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultReportRunStatusReq.hasStatus;
}
- (NSString*) status {
  return resultReportRunStatusReq.status;
}
- (ReportRunStatusReqBuilder*) setStatus:(NSString*) value {
  resultReportRunStatusReq.hasStatus = YES;
  resultReportRunStatusReq.status = value;
  return self;
}
- (ReportRunStatusReqBuilder*) clearStatus {
  resultReportRunStatusReq.hasStatus = NO;
  resultReportRunStatusReq.status = @"";
  return self;
}
@end

@interface ReportRunStatusResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation ReportRunStatusResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static ReportRunStatusResp* defaultReportRunStatusRespInstance = nil;
+ (void) initialize {
  if (self == [ReportRunStatusResp class]) {
    defaultReportRunStatusRespInstance = [[ReportRunStatusResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultReportRunStatusRespInstance;
}
- (instancetype) defaultInstance {
  return defaultReportRunStatusRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReportRunStatusResp*) parseFromData:(NSData*) data {
  return (ReportRunStatusResp*)[[[ReportRunStatusResp builder] mergeFromData:data] build];
}
+ (ReportRunStatusResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReportRunStatusResp*)[[[ReportRunStatusResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReportRunStatusResp*) parseFromInputStream:(NSInputStream*) input {
  return (ReportRunStatusResp*)[[[ReportRunStatusResp builder] mergeFromInputStream:input] build];
}
+ (ReportRunStatusResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReportRunStatusResp*)[[[ReportRunStatusResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReportRunStatusResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReportRunStatusResp*)[[[ReportRunStatusResp builder] mergeFromCodedInputStream:input] build];
}
+ (ReportRunStatusResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReportRunStatusResp*)[[[ReportRunStatusResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReportRunStatusRespBuilder*) builder {
  return [[ReportRunStatusRespBuilder alloc] init];
}
+ (ReportRunStatusRespBuilder*) builderWithPrototype:(ReportRunStatusResp*) prototype {
  return [[ReportRunStatusResp builder] mergeFrom:prototype];
}
- (ReportRunStatusRespBuilder*) builder {
  return [ReportRunStatusResp builder];
}
- (ReportRunStatusRespBuilder*) toBuilder {
  return [ReportRunStatusResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReportRunStatusResp class]]) {
    return NO;
  }
  ReportRunStatusResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReportRunStatusRespBuilder()
@property (strong) ReportRunStatusResp* resultReportRunStatusResp;
@end

@implementation ReportRunStatusRespBuilder
@synthesize resultReportRunStatusResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReportRunStatusResp = [[ReportRunStatusResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReportRunStatusResp;
}
- (ReportRunStatusRespBuilder*) clear {
  self.resultReportRunStatusResp = [[ReportRunStatusResp alloc] init];
  return self;
}
- (ReportRunStatusRespBuilder*) clone {
  return [ReportRunStatusResp builderWithPrototype:resultReportRunStatusResp];
}
- (ReportRunStatusResp*) defaultInstance {
  return [ReportRunStatusResp defaultInstance];
}
- (ReportRunStatusResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReportRunStatusResp*) buildPartial {
  ReportRunStatusResp* returnMe = resultReportRunStatusResp;
  self.resultReportRunStatusResp = nil;
  return returnMe;
}
- (ReportRunStatusRespBuilder*) mergeFrom:(ReportRunStatusResp*) other {
  if (other == [ReportRunStatusResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReportRunStatusRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReportRunStatusRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultReportRunStatusResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultReportRunStatusResp.status;
}
- (ReportRunStatusRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultReportRunStatusResp.hasStatus = YES;
  resultReportRunStatusResp.status = value;
  return self;
}
- (ReportRunStatusRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (ReportRunStatusRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultReportRunStatusResp.hasStatus &&
      resultReportRunStatusResp.status != [EIMRespHeader defaultInstance]) {
    resultReportRunStatusResp.status =
      [[[EIMRespHeader builderWithPrototype:resultReportRunStatusResp.status] mergeFrom:value] buildPartial];
  } else {
    resultReportRunStatusResp.status = value;
  }
  resultReportRunStatusResp.hasStatus = YES;
  return self;
}
- (ReportRunStatusRespBuilder*) clearStatus {
  resultReportRunStatusResp.hasStatus = NO;
  resultReportRunStatusResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end

@interface JoinGroupReq ()
@property SInt64 groupId;
@property (strong) AccountInfo* member;
@end

@implementation JoinGroupReq

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasMember {
  return !!hasMember_;
}
- (void) setHasMember:(BOOL) _value_ {
  hasMember_ = !!_value_;
}
@synthesize member;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.member = [AccountInfo defaultInstance];
  }
  return self;
}
static JoinGroupReq* defaultJoinGroupReqInstance = nil;
+ (void) initialize {
  if (self == [JoinGroupReq class]) {
    defaultJoinGroupReqInstance = [[JoinGroupReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultJoinGroupReqInstance;
}
- (instancetype) defaultInstance {
  return defaultJoinGroupReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeInt64:1 value:self.groupId];
  }
  if (self.hasMember) {
    [output writeMessage:2 value:self.member];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeInt64Size(1, self.groupId);
  }
  if (self.hasMember) {
    size_ += computeMessageSize(2, self.member);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (JoinGroupReq*) parseFromData:(NSData*) data {
  return (JoinGroupReq*)[[[JoinGroupReq builder] mergeFromData:data] build];
}
+ (JoinGroupReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGroupReq*)[[[JoinGroupReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (JoinGroupReq*) parseFromInputStream:(NSInputStream*) input {
  return (JoinGroupReq*)[[[JoinGroupReq builder] mergeFromInputStream:input] build];
}
+ (JoinGroupReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGroupReq*)[[[JoinGroupReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (JoinGroupReq*)[[[JoinGroupReq builder] mergeFromCodedInputStream:input] build];
}
+ (JoinGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGroupReq*)[[[JoinGroupReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGroupReqBuilder*) builder {
  return [[JoinGroupReqBuilder alloc] init];
}
+ (JoinGroupReqBuilder*) builderWithPrototype:(JoinGroupReq*) prototype {
  return [[JoinGroupReq builder] mergeFrom:prototype];
}
- (JoinGroupReqBuilder*) builder {
  return [JoinGroupReq builder];
}
- (JoinGroupReqBuilder*) toBuilder {
  return [JoinGroupReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasMember) {
    [output appendFormat:@"%@%@ {\n", indent, @"member"];
    [self.member writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasMember) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.member storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"member"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[JoinGroupReq class]]) {
    return NO;
  }
  JoinGroupReq *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasMember == otherMessage.hasMember &&
      (!self.hasMember || [self.member isEqual:otherMessage.member]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasMember) {
    hashCode = hashCode * 31 + [self.member hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface JoinGroupReqBuilder()
@property (strong) JoinGroupReq* resultJoinGroupReq;
@end

@implementation JoinGroupReqBuilder
@synthesize resultJoinGroupReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultJoinGroupReq = [[JoinGroupReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultJoinGroupReq;
}
- (JoinGroupReqBuilder*) clear {
  self.resultJoinGroupReq = [[JoinGroupReq alloc] init];
  return self;
}
- (JoinGroupReqBuilder*) clone {
  return [JoinGroupReq builderWithPrototype:resultJoinGroupReq];
}
- (JoinGroupReq*) defaultInstance {
  return [JoinGroupReq defaultInstance];
}
- (JoinGroupReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (JoinGroupReq*) buildPartial {
  JoinGroupReq* returnMe = resultJoinGroupReq;
  self.resultJoinGroupReq = nil;
  return returnMe;
}
- (JoinGroupReqBuilder*) mergeFrom:(JoinGroupReq*) other {
  if (other == [JoinGroupReq defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasMember) {
    [self mergeMember:other.member];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (JoinGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (JoinGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readInt64]];
        break;
      }
      case 18: {
        AccountInfoBuilder* subBuilder = [AccountInfo builder];
        if (self.hasMember) {
          [subBuilder mergeFrom:self.member];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMember:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultJoinGroupReq.hasGroupId;
}
- (SInt64) groupId {
  return resultJoinGroupReq.groupId;
}
- (JoinGroupReqBuilder*) setGroupId:(SInt64) value {
  resultJoinGroupReq.hasGroupId = YES;
  resultJoinGroupReq.groupId = value;
  return self;
}
- (JoinGroupReqBuilder*) clearGroupId {
  resultJoinGroupReq.hasGroupId = NO;
  resultJoinGroupReq.groupId = 0L;
  return self;
}
- (BOOL) hasMember {
  return resultJoinGroupReq.hasMember;
}
- (AccountInfo*) member {
  return resultJoinGroupReq.member;
}
- (JoinGroupReqBuilder*) setMember:(AccountInfo*) value {
  resultJoinGroupReq.hasMember = YES;
  resultJoinGroupReq.member = value;
  return self;
}
- (JoinGroupReqBuilder*) setMemberBuilder:(AccountInfoBuilder*) builderForValue {
  return [self setMember:[builderForValue build]];
}
- (JoinGroupReqBuilder*) mergeMember:(AccountInfo*) value {
  if (resultJoinGroupReq.hasMember &&
      resultJoinGroupReq.member != [AccountInfo defaultInstance]) {
    resultJoinGroupReq.member =
      [[[AccountInfo builderWithPrototype:resultJoinGroupReq.member] mergeFrom:value] buildPartial];
  } else {
    resultJoinGroupReq.member = value;
  }
  resultJoinGroupReq.hasMember = YES;
  return self;
}
- (JoinGroupReqBuilder*) clearMember {
  resultJoinGroupReq.hasMember = NO;
  resultJoinGroupReq.member = [AccountInfo defaultInstance];
  return self;
}
@end

@interface JoinGroupResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation JoinGroupResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static JoinGroupResp* defaultJoinGroupRespInstance = nil;
+ (void) initialize {
  if (self == [JoinGroupResp class]) {
    defaultJoinGroupRespInstance = [[JoinGroupResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultJoinGroupRespInstance;
}
- (instancetype) defaultInstance {
  return defaultJoinGroupRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (JoinGroupResp*) parseFromData:(NSData*) data {
  return (JoinGroupResp*)[[[JoinGroupResp builder] mergeFromData:data] build];
}
+ (JoinGroupResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGroupResp*)[[[JoinGroupResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (JoinGroupResp*) parseFromInputStream:(NSInputStream*) input {
  return (JoinGroupResp*)[[[JoinGroupResp builder] mergeFromInputStream:input] build];
}
+ (JoinGroupResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGroupResp*)[[[JoinGroupResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (JoinGroupResp*)[[[JoinGroupResp builder] mergeFromCodedInputStream:input] build];
}
+ (JoinGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JoinGroupResp*)[[[JoinGroupResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JoinGroupRespBuilder*) builder {
  return [[JoinGroupRespBuilder alloc] init];
}
+ (JoinGroupRespBuilder*) builderWithPrototype:(JoinGroupResp*) prototype {
  return [[JoinGroupResp builder] mergeFrom:prototype];
}
- (JoinGroupRespBuilder*) builder {
  return [JoinGroupResp builder];
}
- (JoinGroupRespBuilder*) toBuilder {
  return [JoinGroupResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[JoinGroupResp class]]) {
    return NO;
  }
  JoinGroupResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface JoinGroupRespBuilder()
@property (strong) JoinGroupResp* resultJoinGroupResp;
@end

@implementation JoinGroupRespBuilder
@synthesize resultJoinGroupResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultJoinGroupResp = [[JoinGroupResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultJoinGroupResp;
}
- (JoinGroupRespBuilder*) clear {
  self.resultJoinGroupResp = [[JoinGroupResp alloc] init];
  return self;
}
- (JoinGroupRespBuilder*) clone {
  return [JoinGroupResp builderWithPrototype:resultJoinGroupResp];
}
- (JoinGroupResp*) defaultInstance {
  return [JoinGroupResp defaultInstance];
}
- (JoinGroupResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (JoinGroupResp*) buildPartial {
  JoinGroupResp* returnMe = resultJoinGroupResp;
  self.resultJoinGroupResp = nil;
  return returnMe;
}
- (JoinGroupRespBuilder*) mergeFrom:(JoinGroupResp*) other {
  if (other == [JoinGroupResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (JoinGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (JoinGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultJoinGroupResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultJoinGroupResp.status;
}
- (JoinGroupRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultJoinGroupResp.hasStatus = YES;
  resultJoinGroupResp.status = value;
  return self;
}
- (JoinGroupRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (JoinGroupRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultJoinGroupResp.hasStatus &&
      resultJoinGroupResp.status != [EIMRespHeader defaultInstance]) {
    resultJoinGroupResp.status =
      [[[EIMRespHeader builderWithPrototype:resultJoinGroupResp.status] mergeFrom:value] buildPartial];
  } else {
    resultJoinGroupResp.status = value;
  }
  resultJoinGroupResp.hasStatus = YES;
  return self;
}
- (JoinGroupRespBuilder*) clearStatus {
  resultJoinGroupResp.hasStatus = NO;
  resultJoinGroupResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end

@interface CreateGroupNotificationReq ()
@property BOOL notification;
@property SInt64 groupId;
@end

@implementation CreateGroupNotificationReq

- (BOOL) hasNotification {
  return !!hasNotification_;
}
- (void) setHasNotification:(BOOL) _value_ {
  hasNotification_ = !!_value_;
}
- (BOOL) notification {
  return !!notification_;
}
- (void) setNotification:(BOOL) _value_ {
  notification_ = !!_value_;
}
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (instancetype) init {
  if ((self = [super init])) {
    self.notification = NO;
    self.groupId = 0L;
  }
  return self;
}
static CreateGroupNotificationReq* defaultCreateGroupNotificationReqInstance = nil;
+ (void) initialize {
  if (self == [CreateGroupNotificationReq class]) {
    defaultCreateGroupNotificationReqInstance = [[CreateGroupNotificationReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateGroupNotificationReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateGroupNotificationReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNotification) {
    [output writeBool:1 value:self.notification];
  }
  if (self.hasGroupId) {
    [output writeInt64:2 value:self.groupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNotification) {
    size_ += computeBoolSize(1, self.notification);
  }
  if (self.hasGroupId) {
    size_ += computeInt64Size(2, self.groupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateGroupNotificationReq*) parseFromData:(NSData*) data {
  return (CreateGroupNotificationReq*)[[[CreateGroupNotificationReq builder] mergeFromData:data] build];
}
+ (CreateGroupNotificationReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupNotificationReq*)[[[CreateGroupNotificationReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupNotificationReq*) parseFromInputStream:(NSInputStream*) input {
  return (CreateGroupNotificationReq*)[[[CreateGroupNotificationReq builder] mergeFromInputStream:input] build];
}
+ (CreateGroupNotificationReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupNotificationReq*)[[[CreateGroupNotificationReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupNotificationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateGroupNotificationReq*)[[[CreateGroupNotificationReq builder] mergeFromCodedInputStream:input] build];
}
+ (CreateGroupNotificationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupNotificationReq*)[[[CreateGroupNotificationReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupNotificationReqBuilder*) builder {
  return [[CreateGroupNotificationReqBuilder alloc] init];
}
+ (CreateGroupNotificationReqBuilder*) builderWithPrototype:(CreateGroupNotificationReq*) prototype {
  return [[CreateGroupNotificationReq builder] mergeFrom:prototype];
}
- (CreateGroupNotificationReqBuilder*) builder {
  return [CreateGroupNotificationReq builder];
}
- (CreateGroupNotificationReqBuilder*) toBuilder {
  return [CreateGroupNotificationReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNotification) {
    [output appendFormat:@"%@%@: %@\n", indent, @"notification", [NSNumber numberWithBool:self.notification]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNotification) {
    [dictionary setObject: [NSNumber numberWithBool:self.notification] forKey: @"notification"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateGroupNotificationReq class]]) {
    return NO;
  }
  CreateGroupNotificationReq *otherMessage = other;
  return
      self.hasNotification == otherMessage.hasNotification &&
      (!self.hasNotification || self.notification == otherMessage.notification) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNotification) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.notification] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateGroupNotificationReqBuilder()
@property (strong) CreateGroupNotificationReq* resultCreateGroupNotificationReq;
@end

@implementation CreateGroupNotificationReqBuilder
@synthesize resultCreateGroupNotificationReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateGroupNotificationReq = [[CreateGroupNotificationReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateGroupNotificationReq;
}
- (CreateGroupNotificationReqBuilder*) clear {
  self.resultCreateGroupNotificationReq = [[CreateGroupNotificationReq alloc] init];
  return self;
}
- (CreateGroupNotificationReqBuilder*) clone {
  return [CreateGroupNotificationReq builderWithPrototype:resultCreateGroupNotificationReq];
}
- (CreateGroupNotificationReq*) defaultInstance {
  return [CreateGroupNotificationReq defaultInstance];
}
- (CreateGroupNotificationReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateGroupNotificationReq*) buildPartial {
  CreateGroupNotificationReq* returnMe = resultCreateGroupNotificationReq;
  self.resultCreateGroupNotificationReq = nil;
  return returnMe;
}
- (CreateGroupNotificationReqBuilder*) mergeFrom:(CreateGroupNotificationReq*) other {
  if (other == [CreateGroupNotificationReq defaultInstance]) {
    return self;
  }
  if (other.hasNotification) {
    [self setNotification:other.notification];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateGroupNotificationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateGroupNotificationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNotification:[input readBool]];
        break;
      }
      case 16: {
        [self setGroupId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasNotification {
  return resultCreateGroupNotificationReq.hasNotification;
}
- (BOOL) notification {
  return resultCreateGroupNotificationReq.notification;
}
- (CreateGroupNotificationReqBuilder*) setNotification:(BOOL) value {
  resultCreateGroupNotificationReq.hasNotification = YES;
  resultCreateGroupNotificationReq.notification = value;
  return self;
}
- (CreateGroupNotificationReqBuilder*) clearNotification {
  resultCreateGroupNotificationReq.hasNotification = NO;
  resultCreateGroupNotificationReq.notification = NO;
  return self;
}
- (BOOL) hasGroupId {
  return resultCreateGroupNotificationReq.hasGroupId;
}
- (SInt64) groupId {
  return resultCreateGroupNotificationReq.groupId;
}
- (CreateGroupNotificationReqBuilder*) setGroupId:(SInt64) value {
  resultCreateGroupNotificationReq.hasGroupId = YES;
  resultCreateGroupNotificationReq.groupId = value;
  return self;
}
- (CreateGroupNotificationReqBuilder*) clearGroupId {
  resultCreateGroupNotificationReq.hasGroupId = NO;
  resultCreateGroupNotificationReq.groupId = 0L;
  return self;
}
@end

@interface CreateGroupNotificationResp ()
@property (strong) EIMRespHeader* status;
@end

@implementation CreateGroupNotificationResp

- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.status = [EIMRespHeader defaultInstance];
  }
  return self;
}
static CreateGroupNotificationResp* defaultCreateGroupNotificationRespInstance = nil;
+ (void) initialize {
  if (self == [CreateGroupNotificationResp class]) {
    defaultCreateGroupNotificationRespInstance = [[CreateGroupNotificationResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCreateGroupNotificationRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCreateGroupNotificationRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatus) {
    [output writeMessage:1 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatus) {
    size_ += computeMessageSize(1, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CreateGroupNotificationResp*) parseFromData:(NSData*) data {
  return (CreateGroupNotificationResp*)[[[CreateGroupNotificationResp builder] mergeFromData:data] build];
}
+ (CreateGroupNotificationResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupNotificationResp*)[[[CreateGroupNotificationResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupNotificationResp*) parseFromInputStream:(NSInputStream*) input {
  return (CreateGroupNotificationResp*)[[[CreateGroupNotificationResp builder] mergeFromInputStream:input] build];
}
+ (CreateGroupNotificationResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupNotificationResp*)[[[CreateGroupNotificationResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupNotificationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateGroupNotificationResp*)[[[CreateGroupNotificationResp builder] mergeFromCodedInputStream:input] build];
}
+ (CreateGroupNotificationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateGroupNotificationResp*)[[[CreateGroupNotificationResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateGroupNotificationRespBuilder*) builder {
  return [[CreateGroupNotificationRespBuilder alloc] init];
}
+ (CreateGroupNotificationRespBuilder*) builderWithPrototype:(CreateGroupNotificationResp*) prototype {
  return [[CreateGroupNotificationResp builder] mergeFrom:prototype];
}
- (CreateGroupNotificationRespBuilder*) builder {
  return [CreateGroupNotificationResp builder];
}
- (CreateGroupNotificationRespBuilder*) toBuilder {
  return [CreateGroupNotificationResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatus) {
    [output appendFormat:@"%@%@ {\n", indent, @"status"];
    [self.status writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatus) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.status storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CreateGroupNotificationResp class]]) {
    return NO;
  }
  CreateGroupNotificationResp *otherMessage = other;
  return
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || [self.status isEqual:otherMessage.status]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [self.status hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CreateGroupNotificationRespBuilder()
@property (strong) CreateGroupNotificationResp* resultCreateGroupNotificationResp;
@end

@implementation CreateGroupNotificationRespBuilder
@synthesize resultCreateGroupNotificationResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCreateGroupNotificationResp = [[CreateGroupNotificationResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCreateGroupNotificationResp;
}
- (CreateGroupNotificationRespBuilder*) clear {
  self.resultCreateGroupNotificationResp = [[CreateGroupNotificationResp alloc] init];
  return self;
}
- (CreateGroupNotificationRespBuilder*) clone {
  return [CreateGroupNotificationResp builderWithPrototype:resultCreateGroupNotificationResp];
}
- (CreateGroupNotificationResp*) defaultInstance {
  return [CreateGroupNotificationResp defaultInstance];
}
- (CreateGroupNotificationResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateGroupNotificationResp*) buildPartial {
  CreateGroupNotificationResp* returnMe = resultCreateGroupNotificationResp;
  self.resultCreateGroupNotificationResp = nil;
  return returnMe;
}
- (CreateGroupNotificationRespBuilder*) mergeFrom:(CreateGroupNotificationResp*) other {
  if (other == [CreateGroupNotificationResp defaultInstance]) {
    return self;
  }
  if (other.hasStatus) {
    [self mergeStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateGroupNotificationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateGroupNotificationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EIMRespHeaderBuilder* subBuilder = [EIMRespHeader builder];
        if (self.hasStatus) {
          [subBuilder mergeFrom:self.status];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatus:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStatus {
  return resultCreateGroupNotificationResp.hasStatus;
}
- (EIMRespHeader*) status {
  return resultCreateGroupNotificationResp.status;
}
- (CreateGroupNotificationRespBuilder*) setStatus:(EIMRespHeader*) value {
  resultCreateGroupNotificationResp.hasStatus = YES;
  resultCreateGroupNotificationResp.status = value;
  return self;
}
- (CreateGroupNotificationRespBuilder*) setStatusBuilder:(EIMRespHeaderBuilder*) builderForValue {
  return [self setStatus:[builderForValue build]];
}
- (CreateGroupNotificationRespBuilder*) mergeStatus:(EIMRespHeader*) value {
  if (resultCreateGroupNotificationResp.hasStatus &&
      resultCreateGroupNotificationResp.status != [EIMRespHeader defaultInstance]) {
    resultCreateGroupNotificationResp.status =
      [[[EIMRespHeader builderWithPrototype:resultCreateGroupNotificationResp.status] mergeFrom:value] buildPartial];
  } else {
    resultCreateGroupNotificationResp.status = value;
  }
  resultCreateGroupNotificationResp.hasStatus = YES;
  return self;
}
- (CreateGroupNotificationRespBuilder*) clearStatus {
  resultCreateGroupNotificationResp.hasStatus = NO;
  resultCreateGroupNotificationResp.status = [EIMRespHeader defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
